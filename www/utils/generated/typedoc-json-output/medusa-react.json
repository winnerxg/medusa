{
	"id": 16383,
	"name": "medusa-react",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 16384,
			"name": "Providers",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": ":::info\n\nThis is an experimental feature.\n\n:::\n\n"
					},
					{
						"kind": "code",
						"text": "`medusa-react`"
					},
					{
						"kind": "text",
						"text": " exposes React Context Providers that facilitate building custom storefronts."
					}
				],
				"modifierTags": [
					"@packageDocumentation"
				]
			},
			"children": [
				{
					"id": 16385,
					"name": "Cart",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@packageDocumentation"
						]
					},
					"children": [
						{
							"id": 16553,
							"name": "useCart",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"signatures": [
								{
									"id": 16554,
									"name": "useCart",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This hook exposes the context of "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "CartProvider",
												"target": 16558,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": ".\n\nThe context provides helper functions and mutations for managing the cart and checkout. You can refer to the following guides for examples on how to use them:\n\n- [How to Add Cart Functionality](https://docs.medusajs.com/modules/carts-and-checkout/storefront/implement-cart)\n- [How to Implement Checkout Flow](https://docs.medusajs.com/modules/carts-and-checkout/storefront/implement-checkout-flow)"
											}
										],
										"blockTags": [
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```tsx title=\"src/Cart.ts\"\nimport * as React from \"react\"\n\nimport { useCart } from \"medusa-react\"\n\nconst Cart = () => {\n  const handleClick = () => {\n    createCart.mutate({}) // create an empty cart\n  }\n\n  const { cart, createCart } = useCart()\n\n  return (\n    <div>\n      {createCart.isLoading && <div>Loading...</div>}\n      {!cart?.id && (\n        <button onClick={handleClick}>\n          Create cart\n        </button>\n      )}\n      {cart?.id && (\n        <div>Cart ID: {cart.id}</div>\n      )}\n    </div>\n  )\n}\n\nexport default Cart\n```"
													},
													{
														"kind": "text",
														"text": "\n\nIn the example above, you retrieve the "
													},
													{
														"kind": "code",
														"text": "`createCart`"
													},
													{
														"kind": "text",
														"text": " mutation and "
													},
													{
														"kind": "code",
														"text": "`cart`"
													},
													{
														"kind": "text",
														"text": " state object using the "
													},
													{
														"kind": "code",
														"text": "`useCart`"
													},
													{
														"kind": "text",
														"text": " hook. \nIf the "
													},
													{
														"kind": "code",
														"text": "`cart`"
													},
													{
														"kind": "text",
														"text": " is not set, a button is shown. When the button is clicked, the "
													},
													{
														"kind": "code",
														"text": "`createCart`"
													},
													{
														"kind": "text",
														"text": " mutation is executed, which interacts with the backend and creates a new cart.\n\nAfter the cart is created, the "
													},
													{
														"kind": "code",
														"text": "`cart`"
													},
													{
														"kind": "text",
														"text": " state variable is set and its ID is shown instead of the button.\n\n:::note\n\nThe example above does not store in the browser the ID of the cart created, so the cart’s data will be gone on refresh. \nYou would have to do that using the browser’s [Local Storage](https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage).\n\n:::"
													}
												]
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 16540,
										"name": "CartContext",
										"package": "medusa-react"
									}
								}
							]
						},
						{
							"id": 16558,
							"name": "CartProvider",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"signatures": [
								{
									"id": 16559,
									"name": "CartProvider",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "code",
												"text": "`CartProvider`"
											},
											{
												"kind": "text",
												"text": " makes use of some of the hooks already exposed by "
											},
											{
												"kind": "code",
												"text": "`medusa-react`"
											},
											{
												"kind": "text",
												"text": " to perform cart operations on the Medusa backend. \nYou can use it to create a cart, start the checkout flow, authorize payment sessions, and so on.\n\nIt also manages one single global piece of state which represents a cart, exactly like the one created on your Medusa backend.\n\nTo use "
											},
											{
												"kind": "code",
												"text": "`CartProvider`"
											},
											{
												"kind": "text",
												"text": ", you first have to insert it somewhere in your component tree below the "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "MedusaProvider",
												"target": 16461
											},
											{
												"kind": "text",
												"text": ". Then, in any of the child components, \nyou can use the "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "useCart",
												"target": 16553,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": " hook exposed by "
											},
											{
												"kind": "code",
												"text": "`medusa-react`"
											},
											{
												"kind": "text",
												"text": " to get access to cart operations and data."
											}
										],
										"blockTags": [
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```tsx title=\"src/App.ts\"\nimport { CartProvider, MedusaProvider } from \"medusa-react\"\nimport Storefront from \"./Storefront\"\nimport { QueryClient } from \"@tanstack/react-query\"\nimport React from \"react\"\n\nconst queryClient = new QueryClient()\n\nfunction App() {\n  return (\n    <MedusaProvider\n      queryClientProviderProps={{ client: queryClient }}\n      baseUrl=\"http://localhost:9000\"\n    >\n      <CartProvider>\n        <Storefront />\n      </CartProvider>\n    </MedusaProvider>\n  )\n}\n\nexport default App\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 16560,
											"name": "param0",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Props of the provider."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 16555,
												"name": "CartProps",
												"package": "medusa-react"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa-react/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.JSX.Element"
										},
										"name": "Element",
										"package": "@types/react",
										"qualifiedName": "React.JSX.Element"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Functions",
							"children": [
								16553,
								16558
							]
						}
					]
				},
				{
					"id": 16386,
					"name": "Medusa",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@packageDocumentation"
						]
					},
					"children": [
						{
							"id": 16450,
							"name": "useMedusa",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"signatures": [
								{
									"id": 16451,
									"name": "useMedusa",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This hook gives you access to context of "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "MedusaProvider",
												"target": 16461,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": ". It's useful if you want access to the \n[Medusa JS Client](https://docs.medusajs.com/js-client/overview)."
											}
										],
										"blockTags": [
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nimport React from \"react\"\nimport { useMeCustomer, useMedusa } from \"medusa-react\"\n\nconst CustomerLogin = () => {\n  const { client } = useMedusa()\n  const { refetch: refetchCustomer } = useMeCustomer()\n  // ...\n\n  const handleLogin = (\n    email: string,\n    password: string\n  ) => {\n    client.auth.authenticate({\n      email,\n      password\n    })\n    .then(() => {\n      // customer is logged-in successfully\n      refetchCustomer()\n    })\n    .catch(() => {\n      // an error occurred.\n    })\n  }\n\n  // ...\n}\n```"
													}
												]
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 16448,
										"name": "MedusaContextState",
										"package": "medusa-react"
									}
								}
							]
						},
						{
							"id": 16461,
							"name": "MedusaProvider",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"signatures": [
								{
									"id": 16462,
									"name": "MedusaProvider",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`MedusaProvider`"
											},
											{
												"kind": "text",
												"text": " must be used at the highest possible point in the React component tree. Using any of "
											},
											{
												"kind": "code",
												"text": "`medusa-react`"
											},
											{
												"kind": "text",
												"text": "'s hooks or providers requires having "
											},
											{
												"kind": "code",
												"text": "`MedusaProvider`"
											},
											{
												"kind": "text",
												"text": "\nhigher in the component tree."
											}
										],
										"blockTags": [
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```tsx title=\"src/App.ts\"\nimport { MedusaProvider } from \"medusa-react\"\nimport Storefront from \"./Storefront\"\nimport { QueryClient } from \"@tanstack/react-query\"\nimport React from \"react\"\n\nconst queryClient = new QueryClient()\n\nconst App = () => {\n  return (\n    <MedusaProvider\n      queryClientProviderProps={{ client: queryClient }}\n      baseUrl=\"http://localhost:9000\"\n    >\n      <Storefront />\n    </MedusaProvider>\n  )\n}\n\nexport default App\n```"
													},
													{
														"kind": "text",
														"text": "\n\nIn the example above, you wrap the "
													},
													{
														"kind": "code",
														"text": "`Storefront`"
													},
													{
														"kind": "text",
														"text": " component with the "
													},
													{
														"kind": "code",
														"text": "`MedusaProvider`"
													},
													{
														"kind": "text",
														"text": ". "
													},
													{
														"kind": "code",
														"text": "`Storefront`"
													},
													{
														"kind": "text",
														"text": " is assumed to be the top-level component of your storefront, but you can place "
													},
													{
														"kind": "code",
														"text": "`MedusaProvider`"
													},
													{
														"kind": "text",
														"text": " at any point in your tree. Only children of "
													},
													{
														"kind": "code",
														"text": "`MedusaProvider`"
													},
													{
														"kind": "text",
														"text": " can benefit from its hooks.\n\nThe "
													},
													{
														"kind": "code",
														"text": "`Storefront`"
													},
													{
														"kind": "text",
														"text": " component and its child components can now use hooks exposed by Medusa React."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 16463,
											"name": "param0",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Props of the provider."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 16452,
												"name": "MedusaProviderProps",
												"package": "medusa-react"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa-react/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.JSX.Element"
										},
										"name": "Element",
										"package": "@types/react",
										"qualifiedName": "React.JSX.Element"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Functions",
							"children": [
								16450,
								16461
							]
						}
					]
				},
				{
					"id": 16387,
					"name": "Session Cart",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@packageDocumentation"
						]
					},
					"children": [
						{
							"id": 16535,
							"name": "SessionCartProvider",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"signatures": [
								{
									"id": 16536,
									"name": "SessionCartProvider",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Unlike the "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "CartProvider",
												"target": 16558
											},
											{
												"kind": "text",
												"text": ", "
											},
											{
												"kind": "code",
												"text": "`SessionProvider`"
											},
											{
												"kind": "text",
												"text": " never interacts with the Medusa backend. It can be used to implement the user experience related to managing a cart’s items. \nIts state variables are JavaScript objects living in the browser, but are in no way communicated with the backend.\n\nYou can use the "
											},
											{
												"kind": "code",
												"text": "`SessionProvider`"
											},
											{
												"kind": "text",
												"text": " as a lightweight client-side cart functionality. It’s not stored in any database or on the Medusa backend.\n\nTo use "
											},
											{
												"kind": "code",
												"text": "`SessionProvider`"
											},
											{
												"kind": "text",
												"text": ", you first have to insert it somewhere in your component tree below the "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "MedusaProvider",
												"target": 16461
											},
											{
												"kind": "text",
												"text": ". Then, in any of the child components, \nyou can use the "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "useSessionCart",
												"target": 16538,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": " hook to get access to client-side cart item functionalities."
											}
										],
										"blockTags": [
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```tsx title=\"src/App.ts\"\nimport { SessionProvider, MedusaProvider } from \"medusa-react\"\nimport Storefront from \"./Storefront\"\nimport { QueryClient } from \"@tanstack/react-query\"\nimport React from \"react\"\n\nconst queryClient = new QueryClient()\n\nconst App = () => {\n  return (\n    <MedusaProvider\n      queryClientProviderProps={{ client: queryClient }}\n      baseUrl=\"http://localhost:9000\"\n    >\n      <SessionProvider>\n        <Storefront />\n      </SessionProvider>\n    </MedusaProvider>\n  )\n}\n\nexport default App\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 16537,
											"name": "param0",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Props of the provider."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 16532,
												"name": "SessionCartProviderProps",
												"package": "medusa-react"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa-react/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.JSX.Element"
										},
										"name": "Element",
										"package": "@types/react",
										"qualifiedName": "React.JSX.Element"
									}
								}
							]
						},
						{
							"id": 16538,
							"name": "useSessionCart",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"signatures": [
								{
									"id": 16539,
									"name": "useSessionCart",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This hook exposes the context of "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "SessionCartProvider",
												"target": 16535,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": "."
											}
										],
										"blockTags": [
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "The following example assumes that you've added "
													},
													{
														"kind": "code",
														"text": "`SessionCartProvider`"
													},
													{
														"kind": "text",
														"text": " previously in the React components tree:\n\n"
													},
													{
														"kind": "code",
														"text": "```tsx title=\"src/Products.ts\"\nconst Products = () => {\n  const { addItem } = useSessionCart()\n  // ...\n\n  function addToCart(variant: ProductVariant) {\n    addItem({\n      variant: variant,\n      quantity: 1,\n    })\n  }\n}\n```"
													}
												]
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 16473,
										"name": "SessionCartContextState",
										"package": "medusa-react"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Functions",
							"children": [
								16535,
								16538
							]
						}
					]
				}
			],
			"groups": [
				{
					"title": "Namespaces",
					"children": [
						16385,
						16386,
						16387
					]
				}
			]
		},
		{
			"id": 16388,
			"name": "Utilities",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "code",
						"text": "`medusa-react`"
					},
					{
						"kind": "text",
						"text": " exposes a set of utility functions that are mainly used to retrieve or format the price of a product variant."
					}
				],
				"modifierTags": [
					"@packageDocumentation"
				]
			},
			"children": [
				{
					"id": 16568,
					"name": "formatVariantPrice",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"signatures": [
						{
							"id": 16569,
							"name": "formatVariantPrice",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This utility function can be used to compute the price of a variant for a region and retrieve the formatted amount. For example, "
									},
									{
										"kind": "code",
										"text": "`$20.00`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The formatted price."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```tsx title=\"src/Products.ts\"\nimport React from \"react\"\nimport { formatVariantPrice } from \"medusa-react\"\nimport { Product, ProductVariant } from \"@medusajs/medusa\"\n\nconst Products = () => {\n  // ...\n  return (\n    <ul>\n      {products?.map((product: Product) => (\n        <li key={product.id}>\n          {product.title}\n          <ul>\n            {product.variants.map((variant: ProductVariant) => (\n              <li key={variant.id}>\n                {formatVariantPrice({\n                  variant,\n                  region, // should be retrieved earlier\n                })}\n              </li>\n            ))}\n          </ul>\n        </li>\n      ))}\n    </ul>\n  )\n}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 16570,
									"name": "param0",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Options to format the variant's price."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 16561,
										"name": "FormatVariantPriceParams",
										"package": "medusa-react"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 16575,
					"name": "computeVariantPrice",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"signatures": [
						{
							"id": 16576,
							"name": "computeVariantPrice",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This utility function can be used to compute the price of a variant for a region and retrieve the amount without formatting. \nFor example, "
									},
									{
										"kind": "code",
										"text": "`20`"
									},
									{
										"kind": "text",
										"text": ". This method is used by "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "formatVariantPrice",
										"target": 16568,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " before applying the price formatting."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The computed price of the variant."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```tsx title=\"src/Products.ts\"\nimport React from \"react\"\nimport { computeVariantPrice } from \"medusa-react\"\nimport { Product, ProductVariant } from \"@medusajs/medusa\"\n\nconst Products = () => {\n  // ...\n  return (\n    <ul>\n      {products?.map((product: Product) => (\n        <li key={product.id}>\n          {product.title}\n          <ul>\n            {product.variants.map((variant: ProductVariant) => (\n              <li key={variant.id}>\n                {computeVariantPrice({\n                  variant,\n                  region, // should be retrieved earlier\n                })}\n              </li>\n            ))}\n          </ul>\n        </li>\n      ))}\n    </ul>\n  )\n}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 16577,
									"name": "param0",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Options to compute the variant's price."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 16571,
										"name": "ComputeVariantPriceParams",
										"package": "medusa-react"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 16578,
					"name": "getVariantPrice",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"signatures": [
						{
							"id": 16579,
							"name": "getVariantPrice",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This utility function is used to retrieve a variant's price in a region. It doesn't take into account taxes or any options, so you typically wouldn't need this function on its own.\nIt's used by the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "computeVariantPrice",
										"target": 16575,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " function to retrieve the variant's price in a region before computing the correct price for the options provided."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The variant's price in a region."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```tsx title=\"src/Products.ts\"\nimport React from \"react\"\nimport { getVariantPrice } from \"medusa-react\"\nimport { Product, ProductVariant } from \"@medusajs/medusa\"\n\nconst Products = () => {\n  // ...\n  return (\n    <ul>\n      {products?.map((product: Product) => (\n        <li key={product.id}>\n          {product.title}\n          <ul>\n            {product.variants.map((variant: ProductVariant) => (\n              <li key={variant.id}>\n                {getVariantPrice(\n                  variant,\n                  region, // should be retrieved earlier\n                )}\n              </li>\n            ))}\n          </ul>\n        </li>\n      ))}\n    </ul>\n  )\n}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 16580,
									"name": "variant",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The variant's details."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 16601,
										"name": "ProductVariantInfo",
										"package": "medusa-react"
									}
								},
								{
									"id": 16581,
									"name": "region",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The region's details."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 16602,
										"name": "RegionInfo",
										"package": "medusa-react"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 16587,
					"name": "computeAmount",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"signatures": [
						{
							"id": 16588,
							"name": "computeAmount",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This utility function can be used to compute the price of an amount for a region and retrieve the amount without formatting. For example, "
									},
									{
										"kind": "code",
										"text": "`20`"
									},
									{
										"kind": "text",
										"text": ".\nThis function is used by "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "formatAmount",
										"target": 16598,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " before applying the price formatting.\n\nThe main difference between this utility function and "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "computeVariantPrice",
										"target": 16575,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " is that you don’t need to pass a complete variant object. This can be used with any number."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The computed amount."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```tsx title=\"src/MyComponent.ts\"\nimport React from \"react\"\nimport { computeAmount } from \"medusa-react\"\n\nconst MyComponent = () => {\n  // ...\n  return (\n    <div>\n      {computeAmount({\n        amount,\n        region, // should be retrieved earlier\n      })}\n    </div>\n  )\n}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 16589,
									"name": "params0",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The options to compute the amount."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 16582,
										"name": "ComputeAmountParams",
										"package": "medusa-react"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 16598,
					"name": "formatAmount",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"signatures": [
						{
							"id": 16599,
							"name": "formatAmount",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This utility function can be used to compute the price of an amount for a region and retrieve the formatted amount. For example, "
									},
									{
										"kind": "code",
										"text": "`$20.00`"
									},
									{
										"kind": "text",
										"text": ".\n\nThe main difference between this utility function and "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "formatVariantPrice",
										"target": 16568,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " is that you don’t need to pass a complete variant object. This can be used with any number."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The formatted price."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport React from \"react\"\nimport { formatVariantPrice } from \"medusa-react\"\nimport { Product, ProductVariant } from \"@medusajs/medusa\"\n\nconst Products = () => {\n  // ...\n  return (\n    <ul>\n      {products?.map((product: Product) => (\n        <li key={product.id}>\n          {product.title}\n          <ul>\n            {product.variants.map((variant: ProductVariant) => (\n              <li key={variant.id}>\n                {formatVariantPrice({\n                  variant,\n                  region, // should be retrieved earlier\n                })}\n              </li>\n            ))}\n          </ul>\n        </li>\n      ))}\n    </ul>\n  )\n}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 16600,
									"name": "param0",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Options to format the amount."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 16590,
										"name": "FormatAmountParams",
										"package": "medusa-react"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						16568,
						16575,
						16578,
						16587,
						16598
					]
				}
			]
		},
		{
			"id": 16389,
			"name": "Hooks",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 16390,
					"name": "Admin",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@namespaceMember"
						]
					},
					"children": [
						{
							"id": 16391,
							"name": "Auth",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and mutations listed here are used to send requests to the [Admin Auth API Routes](https://docs.medusajs.com/api/admin#auth_getauth).\n\nThey allow admin users to manage their session, such as login or log out.\nYou can send authenticated requests for an admin user either using the Cookie header, their API token, or the JWT Token.\nWhen you log the admin user in using the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 16619
									},
									{
										"kind": "text",
										"text": " hook, Medusa React will automatically attach the\ncookie header in all subsequent requests.\n\nRelated Guide: [How to implement user profiles](https://docs.medusajs.com/modules/users/admin/manage-profile)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 16619,
									"name": "useAdminLogin",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16620,
											"name": "useAdminLogin",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook is used to log a User in using their credentials. If the user is authenticated successfully, \nthe cookie is automatically attached to subsequent requests sent with other hooks."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminLogin } from \"medusa-react\"\n\nconst Login = () => {\n  const adminLogin = useAdminLogin()\n  // ...\n\n  const handleLogin = () => {\n    adminLogin.mutate({\n      email: \"user@example.com\",\n      password: \"supersecret\",\n    }, {\n      onSuccess: ({ user }) => {\n        console.log(user)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Login\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16621,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/auth/index.d.ts",
																			"qualifiedName": "AdminAuthRes"
																		},
																		"name": "AdminAuthRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/auth/create-session.d.ts",
																	"qualifiedName": "AdminPostAuthReq"
																},
																"name": "AdminPostAuthReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/auth/index.d.ts",
																	"qualifiedName": "AdminAuthRes"
																},
																"name": "AdminAuthRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/auth/create-session.d.ts",
															"qualifiedName": "AdminPostAuthReq"
														},
														"name": "AdminPostAuthReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16622,
									"name": "useAdminDeleteSession",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16623,
											"name": "useAdminDeleteSession",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook is used to Log out the user and remove their authentication session. This will only work if you're using Cookie session for authentication. If the API token is still passed in the header,\nthe user is still authorized to perform admin functionalities in other API Routes.\n\nThis hook requires "
													},
													{
														"kind": "inline-tag",
														"tag": "@link",
														"text": "user authentication",
														"target": 16619
													},
													{
														"kind": "text",
														"text": "."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteSession } from \"medusa-react\"\n\nconst Logout = () => {\n  const adminLogout = useAdminDeleteSession()\n  // ...\n\n  const handleLogout = () => {\n    adminLogout.mutate(undefined, {\n      onSuccess: () => {\n        // user logged out.\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Logout\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16624,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "void"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "void"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16604,
									"name": "useAdminGetSession",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16605,
											"name": "useAdminGetSession",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook is used to get the currently logged in user's details. Can also be used to check if there is an authenticated user.\n\nThis hook requires "
													},
													{
														"kind": "inline-tag",
														"tag": "@link",
														"text": "user authentication",
														"target": 16619
													},
													{
														"kind": "text",
														"text": "."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminGetSession } from \"medusa-react\"\n\nconst Profile = () => {\n  const { user, isLoading } = useAdminGetSession()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {user && <span>{user.email}</span>}\n    </div>\n  )\n}\n\nexport default Profile\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16606,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/auth/index.d.ts",
																			"qualifiedName": "AdminAuthRes"
																		},
																		"name": "AdminAuthRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_auth"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 16607,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16609,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16608,
																	"name": "user",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa/dist/models/user.d.ts",
																					"qualifiedName": "User"
																				},
																				"name": "User",
																				"package": "@medusajs/medusa"
																			},
																			{
																				"type": "literal",
																				"value": "password_hash"
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16609,
																		16608
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16610,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16612,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16611,
																	"name": "user",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa/dist/models/user.d.ts",
																					"qualifiedName": "User"
																				},
																				"name": "User",
																				"package": "@medusajs/medusa"
																			},
																			{
																				"type": "literal",
																				"value": "password_hash"
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16612,
																		16611
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16613,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16615,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16614,
																	"name": "user",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa/dist/models/user.d.ts",
																					"qualifiedName": "User"
																				},
																				"name": "User",
																				"package": "@medusajs/medusa"
																			},
																			{
																				"type": "literal",
																				"value": "password_hash"
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16615,
																		16614
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16616,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16618,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16617,
																	"name": "user",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa/dist/models/user.d.ts",
																					"qualifiedName": "User"
																				},
																				"name": "User",
																				"package": "@medusajs/medusa"
																			},
																			{
																				"type": "literal",
																				"value": "password_hash"
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16618,
																		16617
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										16619,
										16622,
										16604
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										16604
									]
								},
								{
									"title": "Mutations",
									"children": [
										16619,
										16622
									]
								}
							]
						},
						{
							"id": 16392,
							"name": "Batch Jobs",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and mutations listed here are used to send requests to the [Admin Batch Job API Routes](https://docs.medusajs.com/api/admin#batch-jobs).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 16619
									},
									{
										"kind": "text",
										"text": ".\n\nA batch job is a task that is performed by the Medusa backend asynchronusly. For example, the Import Product feature is implemented using batch jobs.\nThe methods in this class allow admins to manage the batch jobs and their state.\n\nRelated Guide: [How to import products](https://docs.medusajs.com/modules/products/admin/import-products)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 16672,
									"name": "useAdminCreateBatchJob",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16673,
											"name": "useAdminCreateBatchJob",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a Batch Job to be executed asynchronously in the Medusa backend. If "
													},
													{
														"kind": "code",
														"text": "`dry_run`"
													},
													{
														"kind": "text",
														"text": " is set to "
													},
													{
														"kind": "code",
														"text": "`true`"
													},
													{
														"kind": "text",
														"text": ", the batch job will not be executed until the it is confirmed,\nwhich can be done using the "
													},
													{
														"kind": "inline-tag",
														"tag": "@link",
														"text": "useAdminConfirmBatchJob",
														"target": 16679,
														"tsLinkText": ""
													},
													{
														"kind": "text",
														"text": " hook."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateBatchJob } from \"medusa-react\"\n\nconst CreateBatchJob = () => {\n  const createBatchJob = useAdminCreateBatchJob()\n  // ...\n\n  const handleCreateBatchJob = () => {\n    createBatchJob.mutate({\n      type: \"publish-products\",\n      context: {},\n      dry_run: true\n    }, {\n      onSuccess: ({ batch_job }) => {\n        console.log(batch_job)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CreateBatchJob\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16674,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/batch/index.d.ts",
																			"qualifiedName": "AdminBatchJobRes"
																		},
																		"name": "AdminBatchJobRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/batch/create-batch-job.d.ts",
																	"qualifiedName": "AdminPostBatchesReq"
																},
																"name": "AdminPostBatchesReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/batch/index.d.ts",
																	"qualifiedName": "AdminBatchJobRes"
																},
																"name": "AdminBatchJobRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/batch/create-batch-job.d.ts",
															"qualifiedName": "AdminPostBatchesReq"
														},
														"name": "AdminPostBatchesReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16675,
									"name": "useAdminCancelBatchJob",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16676,
											"name": "useAdminCancelBatchJob",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook marks a batch job as canceled. When a batch job is canceled, the processing of the batch job doesn’t automatically stop."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCancelBatchJob } from \"medusa-react\"\n\ntype Props = {\n  batchJobId: string\n}\n\nconst BatchJob = ({ batchJobId }: Props) => {\n  const cancelBatchJob = useAdminCancelBatchJob(batchJobId)\n  // ...\n\n  const handleCancel = () => {\n    cancelBatchJob.mutate(undefined, {\n      onSuccess: ({ batch_job }) => {\n        console.log(batch_job)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default BatchJob\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16677,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The ID of the batch job."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16678,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/batch/index.d.ts",
																			"qualifiedName": "AdminBatchJobRes"
																		},
																		"name": "AdminBatchJobRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/batch/index.d.ts",
																	"qualifiedName": "AdminBatchJobRes"
																},
																"name": "AdminBatchJobRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16626,
									"name": "useAdminBatchJobs",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16627,
											"name": "useAdminBatchJobs",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of Batch Jobs. The batch jobs can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`type`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`confirmed_at`"
													},
													{
														"kind": "text",
														"text": ". The batch jobs can also be sorted or paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list batch jobs:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminBatchJobs } from \"medusa-react\"\n\nconst BatchJobs = () => {\n  const { \n    batch_jobs, \n    limit,\n    offset,\n    count,\n    isLoading\n  } = useAdminBatchJobs()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {batch_jobs?.length && (\n        <ul>\n          {batch_jobs.map((batchJob) => (\n            <li key={batchJob.id}>\n              {batchJob.id}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default BatchJobs\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify relations that should be retrieved within the batch jobs:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminBatchJobs } from \"medusa-react\"\n\nconst BatchJobs = () => {\n  const { \n    batch_jobs, \n    limit,\n    offset,\n    count,\n    isLoading\n  } = useAdminBatchJobs({\n    expand: \"created_by_user\",\n    limit: 10,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {batch_jobs?.length && (\n        <ul>\n          {batch_jobs.map((batchJob) => (\n            <li key={batchJob.id}>\n              {batchJob.id}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default BatchJobs\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`10`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminBatchJobs } from \"medusa-react\"\n\nconst BatchJobs = () => {\n  const { \n    batch_jobs, \n    limit,\n    offset,\n    count,\n    isLoading\n  } = useAdminBatchJobs({\n    expand: \"created_by_user\",\n    limit: 20,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {batch_jobs?.length && (\n        <ul>\n          {batch_jobs.map((batchJob) => (\n            <li key={batchJob.id}>\n              {batchJob.id}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default BatchJobs\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16628,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations to apply on the retrieved batch jobs."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/batch/list-batch-jobs.d.ts",
															"qualifiedName": "AdminGetBatchParams"
														},
														"name": "AdminGetBatchParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 16629,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/batch/index.d.ts",
																			"qualifiedName": "AdminBatchJobListRes"
																		},
																		"name": "AdminBatchJobListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_batches"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 16630,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 16631,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						16631
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 16632,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16637,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16636,
																	"name": "batch_jobs",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/batch-job.d.ts",
																				"qualifiedName": "BatchJob"
																			},
																			"name": "BatchJob",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 16633,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16634,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16635,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16637,
																		16636,
																		16633,
																		16634,
																		16635
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16638,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16643,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16642,
																	"name": "batch_jobs",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/batch-job.d.ts",
																				"qualifiedName": "BatchJob"
																			},
																			"name": "BatchJob",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 16639,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16640,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16641,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16643,
																		16642,
																		16639,
																		16640,
																		16641
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16644,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16649,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16648,
																	"name": "batch_jobs",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/batch-job.d.ts",
																				"qualifiedName": "BatchJob"
																			},
																			"name": "BatchJob",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 16645,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16646,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16647,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16649,
																		16648,
																		16645,
																		16646,
																		16647
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16650,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16655,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16654,
																	"name": "batch_jobs",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/batch-job.d.ts",
																				"qualifiedName": "BatchJob"
																			},
																			"name": "BatchJob",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 16651,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16652,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16653,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16655,
																		16654,
																		16651,
																		16652,
																		16653
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 16656,
									"name": "useAdminBatchJob",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16657,
											"name": "useAdminBatchJob",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves the details of a batch job."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminBatchJob } from \"medusa-react\"\n\ntype Props = {\n  batchJobId: string\n}\n\nconst BatchJob = ({ batchJobId }: Props) => {\n  const { batch_job, isLoading } = useAdminBatchJob(batchJobId)\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {batch_job && <span>{batch_job.created_by}</span>}\n    </div>\n  )\n}\n\nexport default BatchJob\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16658,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The ID of the batch job."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16659,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/batch/index.d.ts",
																			"qualifiedName": "AdminBatchJobRes"
																		},
																		"name": "AdminBatchJobRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_batches"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 16660,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16662,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16661,
																	"name": "batch_job",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/batch-job.d.ts",
																			"qualifiedName": "BatchJob"
																		},
																		"name": "BatchJob",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16662,
																		16661
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16663,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16665,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16664,
																	"name": "batch_job",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/batch-job.d.ts",
																			"qualifiedName": "BatchJob"
																		},
																		"name": "BatchJob",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16665,
																		16664
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16666,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16668,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16667,
																	"name": "batch_job",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/batch-job.d.ts",
																			"qualifiedName": "BatchJob"
																		},
																		"name": "BatchJob",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16668,
																		16667
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16669,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16671,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16670,
																	"name": "batch_job",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/batch-job.d.ts",
																			"qualifiedName": "BatchJob"
																		},
																		"name": "BatchJob",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16671,
																		16670
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										16672,
										16675,
										16626,
										16656
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										16626,
										16656
									]
								},
								{
									"title": "Mutations",
									"children": [
										16672,
										16675
									]
								}
							]
						},
						{
							"id": 16393,
							"name": "Claims",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Mutations listed here are used to send requests to the [Admin Order API Routes related to claims](https://docs.medusajs.com/api/admin#orders).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 16619
									},
									{
										"kind": "text",
										"text": ".\n\nA claim represents a return or replacement request of order items. It allows refunding the customer or replacing some or all of its\norder items with new items.\n\nRelated Guide: [How to manage claims](https://docs.medusajs.com/modules/orders/admin/manage-claims)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 16683,
									"name": "useAdminCreateClaim",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16684,
											"name": "useAdminCreateClaim",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a claim for an order. If a return shipping method is specified, a return will also be created and associated with the claim. If the claim's type is "
													},
													{
														"kind": "code",
														"text": "`refund`"
													},
													{
														"kind": "text",
														"text": ",\nthe refund is processed as well."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateClaim } from \"medusa-react\"\n\ntype Props = {\n  orderId: string\n}\n\nconst CreateClaim = ({ orderId }: Props) => {\n  const createClaim = useAdminCreateClaim(orderId)\n  // ...\n\n  const handleCreate = (itemId: string) => {\n    createClaim.mutate({\n      type: \"refund\",\n      claim_items: [\n        {\n          item_id: itemId,\n          quantity: 1,\n        },\n      ],\n    }, {\n      onSuccess: ({ order }) => {\n        console.log(order.claims)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CreateClaim\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16685,
													"name": "orderId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The ID of the order the claim is associated with."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16686,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																			"qualifiedName": "AdminOrdersRes"
																		},
																		"name": "AdminOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/create-claim.d.ts",
																	"qualifiedName": "AdminPostOrdersOrderClaimsReq"
																},
																"name": "AdminPostOrdersOrderClaimsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																	"qualifiedName": "AdminOrdersRes"
																},
																"name": "AdminOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/create-claim.d.ts",
															"qualifiedName": "AdminPostOrdersOrderClaimsReq"
														},
														"name": "AdminPostOrdersOrderClaimsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16690,
									"name": "useAdminUpdateClaim",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16691,
											"name": "useAdminUpdateClaim",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a claim's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateClaim } from \"medusa-react\"\n\ntype Props = {\n  orderId: string\n  claimId: string\n}\n\nconst Claim = ({ orderId, claimId }: Props) => {\n  const updateClaim = useAdminUpdateClaim(orderId)\n  // ...\n\n  const handleUpdate = () => {\n    updateClaim.mutate({\n      claim_id: claimId,\n      no_notification: false\n    }, {\n      onSuccess: ({ order }) => {\n        console.log(order.claims)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Claim\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16692,
													"name": "orderId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The ID of the order the claim is associated with."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16693,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																			"qualifiedName": "AdminOrdersRes"
																		},
																		"name": "AdminOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": 16687,
																"name": "AdminUpdateClaimReq",
																"package": "medusa-react"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																	"qualifiedName": "AdminOrdersRes"
																},
																"name": "AdminOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": 16687,
														"name": "AdminUpdateClaimReq",
														"package": "medusa-react"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16694,
									"name": "useAdminCancelClaim",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16695,
											"name": "useAdminCancelClaim",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook cancels a claim and change its status. A claim can't be canceled if it has a refund, if its fulfillments haven't been canceled, \nof if its associated return hasn't been canceled."
													}
												],
												"blockTags": [
													{
														"tag": "@typeParamDefinition",
														"content": [
															{
																"kind": "text",
																"text": "string - The claim's ID."
															}
														]
													},
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCancelClaim } from \"medusa-react\"\n\ntype Props = {\n  orderId: string\n  claimId: string\n}\n\nconst Claim = ({ orderId, claimId }: Props) => {\n  const cancelClaim = useAdminCancelClaim(orderId)\n  // ...\n\n  const handleCancel = () => {\n    cancelClaim.mutate(claimId)\n  }\n\n  // ...\n}\n\nexport default Claim\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16696,
													"name": "orderId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The ID of the order the claim is associated with."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16697,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																			"qualifiedName": "AdminOrdersRes"
																		},
																		"name": "AdminOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																	"qualifiedName": "AdminOrdersRes"
																},
																"name": "AdminOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16701,
									"name": "useAdminFulfillClaim",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16702,
											"name": "useAdminFulfillClaim",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a Fulfillment for a Claim, and change its fulfillment status to "
													},
													{
														"kind": "code",
														"text": "`partially_fulfilled`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`fulfilled`"
													},
													{
														"kind": "text",
														"text": " depending on whether all the items were fulfilled.\nIt may also change the status to "
													},
													{
														"kind": "code",
														"text": "`requires_action`"
													},
													{
														"kind": "text",
														"text": " if any actions are required."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminFulfillClaim } from \"medusa-react\"\n\ntype Props = {\n  orderId: string\n  claimId: string\n}\n\nconst Claim = ({ orderId, claimId }: Props) => {\n  const fulfillClaim = useAdminFulfillClaim(orderId)\n  // ...\n\n  const handleFulfill = () => {\n    fulfillClaim.mutate({\n      claim_id: claimId,\n    }, {\n      onSuccess: ({ order }) => {\n        console.log(order.claims)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Claim\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16703,
													"name": "orderId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The ID of the order the claim is associated with."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16704,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																			"qualifiedName": "AdminOrdersRes"
																		},
																		"name": "AdminOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": 16698,
																"name": "AdminFulfillClaimReq",
																"package": "medusa-react"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																	"qualifiedName": "AdminOrdersRes"
																},
																"name": "AdminOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": 16698,
														"name": "AdminFulfillClaimReq",
														"package": "medusa-react"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16709,
									"name": "useAdminCancelClaimFulfillment",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16710,
											"name": "useAdminCancelClaimFulfillment",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook cancels a claim's fulfillment and change its fulfillment status to "
													},
													{
														"kind": "code",
														"text": "`canceled`"
													},
													{
														"kind": "text",
														"text": "."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCancelClaimFulfillment } from \"medusa-react\"\n\ntype Props = {\n  orderId: string\n  claimId: string\n}\n\nconst Claim = ({ orderId, claimId }: Props) => {\n  const cancelFulfillment = useAdminCancelClaimFulfillment(\n    orderId\n  )\n  // ...\n\n  const handleCancel = (fulfillmentId: string) => {\n    cancelFulfillment.mutate({\n      claim_id: claimId,\n      fulfillment_id: fulfillmentId,\n    }, {\n      onSuccess: ({ order }) => {\n        console.log(order.claims)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Claim\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16711,
													"name": "orderId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The ID of the order the claim is associated with."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16712,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																			"qualifiedName": "AdminOrdersRes"
																		},
																		"name": "AdminOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": 16705,
																"name": "AdminCancelClaimFulfillmentReq",
																"package": "medusa-react"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																	"qualifiedName": "AdminOrdersRes"
																},
																"name": "AdminOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": 16705,
														"name": "AdminCancelClaimFulfillmentReq",
														"package": "medusa-react"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16713,
									"name": "useAdminCreateClaimShipment",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16714,
											"name": "useAdminCreateClaimShipment",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a shipment for the claim and mark its fulfillment as shipped. If the shipment is created successfully, this changes the claim's fulfillment status\nto either "
													},
													{
														"kind": "code",
														"text": "`partially_shipped`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`shipped`"
													},
													{
														"kind": "text",
														"text": ", depending on whether all the items were shipped."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateClaimShipment } from \"medusa-react\"\n\ntype Props = {\n  orderId: string\n  claimId: string\n}\n\nconst Claim = ({ orderId, claimId }: Props) => {\n  const createShipment = useAdminCreateClaimShipment(orderId)\n  // ...\n\n  const handleCreateShipment = (fulfillmentId: string) => {\n    createShipment.mutate({\n      claim_id: claimId,\n      fulfillment_id: fulfillmentId,\n    }, {\n      onSuccess: ({ order }) => {\n        console.log(order.claims)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Claim\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16715,
													"name": "orderId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The ID of the order the claim is associated with."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16716,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																			"qualifiedName": "AdminOrdersRes"
																		},
																		"name": "AdminOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intersection",
																"types": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/create-claim-shipment.d.ts",
																			"qualifiedName": "AdminPostOrdersOrderClaimsClaimShipmentsReq"
																		},
																		"name": "AdminPostOrdersOrderClaimsClaimShipmentsReq",
																		"package": "@medusajs/medusa"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 16717,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 16718,
																					"name": "claim_id",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"comment": {
																						"summary": [
																							{
																								"kind": "text",
																								"text": "The claim's ID."
																							}
																						]
																					},
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						16718
																					]
																				}
																			]
																		}
																	}
																]
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																	"qualifiedName": "AdminOrdersRes"
																},
																"name": "AdminOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intersection",
														"types": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/create-claim-shipment.d.ts",
																	"qualifiedName": "AdminPostOrdersOrderClaimsClaimShipmentsReq"
																},
																"name": "AdminPostOrdersOrderClaimsClaimShipmentsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 16719,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 16720,
																			"name": "claim_id",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "The claim's ID."
																					}
																				]
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				16720
																			]
																		}
																	]
																}
															}
														]
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										16683,
										16690,
										16694,
										16701,
										16709,
										16713
									]
								}
							],
							"categories": [
								{
									"title": "Mutations",
									"children": [
										16683,
										16690,
										16694,
										16701,
										16709,
										16713
									]
								}
							]
						},
						{
							"id": 16394,
							"name": "Product Collections",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Product Collection API Routes](https://docs.medusajs.com/api/admin#product-collections).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 16619
									},
									{
										"kind": "text",
										"text": ".\n\nA product collection is used to organize products for different purposes such as marketing or discount purposes. For example, you can create a Summer Collection."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 16768,
									"name": "useAdminCreateCollection",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16769,
											"name": "useAdminCreateCollection",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a product collection."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateCollection } from \"medusa-react\"\n\nconst CreateCollection = () => {\n  const createCollection = useAdminCreateCollection()\n  // ...\n\n  const handleCreate = (title: string) => {\n    createCollection.mutate({\n      title\n    }, {\n      onSuccess: ({ collection }) => {\n        console.log(collection.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CreateCollection\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16770,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/index.d.ts",
																			"qualifiedName": "AdminCollectionsRes"
																		},
																		"name": "AdminCollectionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/create-collection.d.ts",
																	"qualifiedName": "AdminPostCollectionsReq"
																},
																"name": "AdminPostCollectionsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/index.d.ts",
																	"qualifiedName": "AdminCollectionsRes"
																},
																"name": "AdminCollectionsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/create-collection.d.ts",
															"qualifiedName": "AdminPostCollectionsReq"
														},
														"name": "AdminPostCollectionsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16771,
									"name": "useAdminUpdateCollection",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16772,
											"name": "useAdminUpdateCollection",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a product collection's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateCollection } from \"medusa-react\"\n\ntype Props = {\n  collectionId: string\n}\n\nconst Collection = ({ collectionId }: Props) => {\n  const updateCollection = useAdminUpdateCollection(collectionId)\n  // ...\n\n  const handleUpdate = (title: string) => {\n    updateCollection.mutate({\n      title\n    }, {\n      onSuccess: ({ collection }) => {\n        console.log(collection.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Collection\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16773,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product collection's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16774,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/index.d.ts",
																			"qualifiedName": "AdminCollectionsRes"
																		},
																		"name": "AdminCollectionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/update-collection.d.ts",
																	"qualifiedName": "AdminPostCollectionsCollectionReq"
																},
																"name": "AdminPostCollectionsCollectionReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/index.d.ts",
																	"qualifiedName": "AdminCollectionsRes"
																},
																"name": "AdminCollectionsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/update-collection.d.ts",
															"qualifiedName": "AdminPostCollectionsCollectionReq"
														},
														"name": "AdminPostCollectionsCollectionReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16775,
									"name": "useAdminDeleteCollection",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16776,
											"name": "useAdminDeleteCollection",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a product collection. This does not delete associated products."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteCollection } from \"medusa-react\"\n\ntype Props = {\n  collectionId: string\n}\n\nconst Collection = ({ collectionId }: Props) => {\n  const deleteCollection = useAdminDeleteCollection(collectionId)\n  // ...\n\n  const handleDelete = (title: string) => {\n    deleteCollection.mutate(void 0, {\n      onSuccess: ({ id, object, deleted }) => {\n        console.log(id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Collection\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16777,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product collection's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16778,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																			"qualifiedName": "DeleteResponse"
																		},
																		"name": "DeleteResponse",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																	"qualifiedName": "DeleteResponse"
																},
																"name": "DeleteResponse",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16779,
									"name": "useAdminAddProductsToCollection",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16780,
											"name": "useAdminAddProductsToCollection",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook adds products to a collection."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminAddProductsToCollection } from \"medusa-react\"\n\ntype Props = {\n  collectionId: string\n}\n\nconst Collection = ({ collectionId }: Props) => {\n  const addProducts = useAdminAddProductsToCollection(collectionId)\n  // ...\n\n  const handleAddProducts = (productIds: string[]) => {\n    addProducts.mutate({\n      product_ids: productIds\n    }, {\n      onSuccess: ({ collection }) => {\n        console.log(collection.products)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Collection\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16781,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product collection's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16782,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/index.d.ts",
																			"qualifiedName": "AdminCollectionsRes"
																		},
																		"name": "AdminCollectionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/add-products.d.ts",
																	"qualifiedName": "AdminPostProductsToCollectionReq"
																},
																"name": "AdminPostProductsToCollectionReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/index.d.ts",
																	"qualifiedName": "AdminCollectionsRes"
																},
																"name": "AdminCollectionsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/add-products.d.ts",
															"qualifiedName": "AdminPostProductsToCollectionReq"
														},
														"name": "AdminPostProductsToCollectionReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16783,
									"name": "useAdminRemoveProductsFromCollection",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16784,
											"name": "useAdminRemoveProductsFromCollection",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook removes a list of products from a collection. This would not delete the product, \nonly the association between the product and the collection."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminRemoveProductsFromCollection } from \"medusa-react\"\n\ntype Props = {\n  collectionId: string\n}\n\nconst Collection = ({ collectionId }: Props) => {\n  const removeProducts = useAdminRemoveProductsFromCollection(collectionId)\n  // ...\n\n  const handleRemoveProducts = (productIds: string[]) => {\n    removeProducts.mutate({\n      product_ids: productIds\n    }, {\n      onSuccess: ({ id, object, removed_products }) => {\n        console.log(removed_products)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Collection\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16785,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product collection's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16786,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/index.d.ts",
																			"qualifiedName": "AdminDeleteProductsFromCollectionRes"
																		},
																		"name": "AdminDeleteProductsFromCollectionRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/remove-products.d.ts",
																	"qualifiedName": "AdminDeleteProductsFromCollectionReq"
																},
																"name": "AdminDeleteProductsFromCollectionReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/index.d.ts",
																	"qualifiedName": "AdminDeleteProductsFromCollectionRes"
																},
																"name": "AdminDeleteProductsFromCollectionRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/remove-products.d.ts",
															"qualifiedName": "AdminDeleteProductsFromCollectionReq"
														},
														"name": "AdminDeleteProductsFromCollectionReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16722,
									"name": "useAdminCollections",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16723,
											"name": "useAdminCollections",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of product collections. The product collections can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`handle`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`title`"
													},
													{
														"kind": "text",
														"text": ".\nThe collections can also be sorted or paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list product collections:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminCollections } from \"medusa-react\"\n\nconst Collections = () => {\n  const { collections, isLoading } = useAdminCollections()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {collections && !collections.length && <span>\n        No Product Collections\n      </span>}\n      {collections && collections.length > 0 && (\n        <ul>\n          {collections.map((collection) => (\n            <li key={collection.id}>{collection.title}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Collections\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`10`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminCollections } from \"medusa-react\"\n\nconst Collections = () => {\n  const { collections, limit, offset, isLoading } = useAdminCollections({\n    limit: 15,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {collections && !collections.length && <span>\n        No Product Collections\n      </span>}\n      {collections && collections.length > 0 && (\n        <ul>\n          {collections.map((collection) => (\n            <li key={collection.id}>{collection.title}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Collections\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16724,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations to apply on the retrieved product collections."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/list-collections.d.ts",
															"qualifiedName": "AdminGetCollectionsParams"
														},
														"name": "AdminGetCollectionsParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 16725,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/index.d.ts",
																			"qualifiedName": "AdminCollectionsListRes"
																		},
																		"name": "AdminCollectionsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_collections"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 16726,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 16727,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						16727
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 16728,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16733,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16732,
																	"name": "collections",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-collection.d.ts",
																				"qualifiedName": "ProductCollection"
																			},
																			"name": "ProductCollection",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 16729,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16730,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16731,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16733,
																		16732,
																		16729,
																		16730,
																		16731
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16734,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16739,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16738,
																	"name": "collections",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-collection.d.ts",
																				"qualifiedName": "ProductCollection"
																			},
																			"name": "ProductCollection",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 16735,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16736,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16737,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16739,
																		16738,
																		16735,
																		16736,
																		16737
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16740,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16745,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16744,
																	"name": "collections",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-collection.d.ts",
																				"qualifiedName": "ProductCollection"
																			},
																			"name": "ProductCollection",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 16741,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16742,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16743,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16745,
																		16744,
																		16741,
																		16742,
																		16743
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16746,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16751,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16750,
																	"name": "collections",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-collection.d.ts",
																				"qualifiedName": "ProductCollection"
																			},
																			"name": "ProductCollection",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 16747,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16748,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16749,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16751,
																		16750,
																		16747,
																		16748,
																		16749
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 16752,
									"name": "useAdminCollection",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16753,
											"name": "useAdminCollection",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a product collection by its ID. The products associated with it are expanded and returned as well."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCollection } from \"medusa-react\"\n\ntype Props = {\n  collectionId: string\n}\n\nconst Collection = ({ collectionId }: Props) => {\n  const { collection, isLoading } = useAdminCollection(collectionId)\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {collection && <span>{collection.title}</span>}\n    </div>\n  )\n}\n\nexport default Collection\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16754,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product collection's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16755,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/index.d.ts",
																			"qualifiedName": "AdminCollectionsRes"
																		},
																		"name": "AdminCollectionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_collections"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 16756,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16758,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16757,
																	"name": "collection",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/product-collection.d.ts",
																			"qualifiedName": "ProductCollection"
																		},
																		"name": "ProductCollection",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16758,
																		16757
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16759,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16761,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16760,
																	"name": "collection",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/product-collection.d.ts",
																			"qualifiedName": "ProductCollection"
																		},
																		"name": "ProductCollection",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16761,
																		16760
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16762,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16764,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16763,
																	"name": "collection",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/product-collection.d.ts",
																			"qualifiedName": "ProductCollection"
																		},
																		"name": "ProductCollection",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16764,
																		16763
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16765,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16767,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16766,
																	"name": "collection",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/product-collection.d.ts",
																			"qualifiedName": "ProductCollection"
																		},
																		"name": "ProductCollection",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16767,
																		16766
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										16768,
										16771,
										16775,
										16779,
										16783,
										16722,
										16752
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										16722,
										16752
									]
								},
								{
									"title": "Mutations",
									"children": [
										16768,
										16771,
										16775,
										16779,
										16783
									]
								}
							]
						},
						{
							"id": 16395,
							"name": "Currencies",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Currency API Routes](https://docs.medusajs.com/api/admin#currencies).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 16619
									},
									{
										"kind": "text",
										"text": ".\n\nA store can use unlimited currencies, and each region must be associated with at least one currency.\nCurrencies are defined within the Medusa backend. The methods in this class allow admins to list and update currencies.\n\nRelated Guide: [How to manage currencies](https://docs.medusajs.com/modules/regions-and-currencies/admin/manage-currencies)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 16787,
									"name": "useAdminUpdateCurrency",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16788,
											"name": "useAdminUpdateCurrency",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a currency's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateCurrency } from \"medusa-react\"\n\ntype Props = {\n  currencyCode: string\n}\n\nconst Currency = ({ currencyCode }: Props) => {\n  const updateCurrency = useAdminUpdateCurrency(currencyCode)\n  // ...\n\n  const handleUpdate = (includes_tax: boolean) => {\n    updateCurrency.mutate({\n      includes_tax,\n    }, {\n      onSuccess: ({ currency }) => {\n        console.log(currency)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Currency\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16789,
													"name": "code",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The currency's code."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16790,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/currencies/index.d.ts",
																			"qualifiedName": "AdminCurrenciesRes"
																		},
																		"name": "AdminCurrenciesRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/currencies/update-currency.d.ts",
																	"qualifiedName": "AdminPostCurrenciesCurrencyReq"
																},
																"name": "AdminPostCurrenciesCurrencyReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/currencies/index.d.ts",
																	"qualifiedName": "AdminCurrenciesRes"
																},
																"name": "AdminCurrenciesRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/currencies/update-currency.d.ts",
															"qualifiedName": "AdminPostCurrenciesCurrencyReq"
														},
														"name": "AdminPostCurrenciesCurrencyReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16792,
									"name": "useAdminCurrencies",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16793,
											"name": "useAdminCurrencies",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of currencies. The currencies can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`code`"
													},
													{
														"kind": "text",
														"text": ". \nThe currencies can also be sorted or paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list currencies:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCurrencies } from \"medusa-react\"\n\nconst Currencies = () => {\n  const { currencies, isLoading } = useAdminCurrencies()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {currencies && !currencies.length && (\n        <span>No Currencies</span>\n      )}\n      {currencies && currencies.length > 0 && (\n        <ul>\n          {currencies.map((currency) => (\n            <li key={currency.code}>{currency.name}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Currencies\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`20`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCurrencies } from \"medusa-react\"\n\nconst Currencies = () => {\n  const { currencies, limit, offset, isLoading } = useAdminCurrencies({\n    limit: 10,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {currencies && !currencies.length && (\n        <span>No Currencies</span>\n      )}\n      {currencies && currencies.length > 0 && (\n        <ul>\n          {currencies.map((currency) => (\n            <li key={currency.code}>{currency.name}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Currencies\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16794,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations to apply on retrieved currencies."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/currencies/list-currencies.d.ts",
															"qualifiedName": "AdminGetCurrenciesParams"
														},
														"name": "AdminGetCurrenciesParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 16795,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/currencies/index.d.ts",
																			"qualifiedName": "AdminCurrenciesListRes"
																		},
																		"name": "AdminCurrenciesListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_currencies"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 16796,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 16797,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						16797
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 16798,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16803,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16802,
																	"name": "currencies",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/currency.d.ts",
																				"qualifiedName": "Currency"
																			},
																			"name": "Currency",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 16799,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16800,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16801,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16803,
																		16802,
																		16799,
																		16800,
																		16801
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16804,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16809,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16808,
																	"name": "currencies",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/currency.d.ts",
																				"qualifiedName": "Currency"
																			},
																			"name": "Currency",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 16805,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16806,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16807,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16809,
																		16808,
																		16805,
																		16806,
																		16807
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16810,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16815,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16814,
																	"name": "currencies",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/currency.d.ts",
																				"qualifiedName": "Currency"
																			},
																			"name": "Currency",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 16811,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16812,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16813,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16815,
																		16814,
																		16811,
																		16812,
																		16813
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16816,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16821,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16820,
																	"name": "currencies",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/currency.d.ts",
																				"qualifiedName": "Currency"
																			},
																			"name": "Currency",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 16817,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16818,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16819,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16821,
																		16820,
																		16817,
																		16818,
																		16819
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										16787,
										16792
									]
								}
							],
							"categories": [
								{
									"title": "Mutations",
									"children": [
										16787
									]
								},
								{
									"title": "Queries",
									"children": [
										16792
									]
								}
							]
						},
						{
							"id": 16396,
							"name": "Custom",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This class is used to send requests custom API Routes. All its method\nare available in the JS Client under the "
									},
									{
										"kind": "code",
										"text": "`medusa.admin.custom`"
									},
									{
										"kind": "text",
										"text": " property."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 16829,
									"name": "useAdminCustomPost",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16830,
											"name": "useAdminCustomPost",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook sends a "
													},
													{
														"kind": "code",
														"text": "`POST`"
													},
													{
														"kind": "text",
														"text": " request to a custom API Route."
													}
												],
												"blockTags": [
													{
														"tag": "@typeParamDefinition",
														"content": [
															{
																"kind": "text",
																"text": "TResponse - The response based on the specified type for "
															},
															{
																"kind": "code",
																"text": "`TResponse`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													{
														"tag": "@typeParamDefinition",
														"content": [
															{
																"kind": "text",
																"text": "TPayload - The payload based on the specified type for "
															},
															{
																"kind": "code",
																"text": "`TPayload`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCustomPost } from \"medusa-react\"\nimport Post from \"./models/Post\"\n\ntype PostRequest = {\n  title: string\n}\ntype PostResponse = {\n  post: Post\n}\n\nconst Custom = () => {\n  const customPost = useAdminCustomPost\n  <PostRequest, PostResponse>(\n    \"/blog/posts\",\n    [\"posts\"]\n  )\n\n  // ...\n\n  const handleAction = (title: string) => {\n    customPost.mutate({\n      title\n    }, {\n      onSuccess: ({ post }) => {\n        console.log(post)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Custom\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"typeParameter": [
												{
													"id": 16831,
													"name": "TPayload",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The type of accepted body parameters which defaults to "
															},
															{
																"kind": "code",
																"text": "`Record<string, any>`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												},
												{
													"id": 16832,
													"name": "TResponse",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The type of response, which defaults to "
															},
															{
																"kind": "code",
																"text": "`any`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													}
												}
											],
											"parameters": [
												{
													"id": 16833,
													"name": "path",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The path to the custom endpoint."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16834,
													"name": "queryKey",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "A list of query keys, used to invalidate data."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../node_modules/@tanstack/query-core/build/lib/types.d.ts",
															"qualifiedName": "QueryKey"
														},
														"name": "QueryKey",
														"package": "@tanstack/query-core"
													}
												},
												{
													"id": 16835,
													"name": "relatedDomains",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "A list of related domains that should be invalidated and refetch when the mutation\nfunction is invoked."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/mutations.ts",
															"qualifiedName": "RelatedDomains"
														},
														"name": "RelatedDomains",
														"package": "medusa-react"
													}
												},
												{
													"id": 16836,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": 16832,
																		"name": "TResponse",
																		"package": "medusa-react",
																		"refersToTypeParameter": true
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": 16831,
																"name": "TPayload",
																"package": "medusa-react",
																"refersToTypeParameter": true
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 16832,
																"name": "TResponse",
																"package": "medusa-react",
																"refersToTypeParameter": true
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": 16831,
														"name": "TPayload",
														"package": "medusa-react",
														"refersToTypeParameter": true
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16822,
									"name": "useAdminCustomDelete",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16823,
											"name": "useAdminCustomDelete",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook sends a "
													},
													{
														"kind": "code",
														"text": "`DELETE`"
													},
													{
														"kind": "text",
														"text": " request to a custom API Route."
													}
												],
												"blockTags": [
													{
														"tag": "@typeParamDefinition",
														"content": [
															{
																"kind": "text",
																"text": "TResponse - The response based on the type provided for "
															},
															{
																"kind": "code",
																"text": "`TResponse`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCustomDelete } from \"medusa-react\"\n\ntype Props = {\n  customId: string\n}\n\nconst Custom = ({ customId }: Props) => {\n  const customDelete = useAdminCustomDelete(\n    `/blog/posts/${customId}`,\n    [\"posts\"]\n  )\n\n  // ...\n\n  const handleAction = (title: string) => {\n    customDelete.mutate(void 0, {\n      onSuccess: () => {\n        // Delete action successful\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Custom\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"typeParameter": [
												{
													"id": 16824,
													"name": "TResponse",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The response's type which defaults to "
															},
															{
																"kind": "code",
																"text": "`any`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													}
												}
											],
											"parameters": [
												{
													"id": 16825,
													"name": "path",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The path to the custom endpoint."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16826,
													"name": "queryKey",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "A list of query keys, used to invalidate data."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../node_modules/@tanstack/query-core/build/lib/types.d.ts",
															"qualifiedName": "QueryKey"
														},
														"name": "QueryKey",
														"package": "@tanstack/query-core"
													}
												},
												{
													"id": 16827,
													"name": "relatedDomains",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "A list of related domains that should be invalidated and refetch when the mutation\nfunction is invoked."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/mutations.ts",
															"qualifiedName": "RelatedDomains"
														},
														"name": "RelatedDomains",
														"package": "medusa-react"
													}
												},
												{
													"id": 16828,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": 16824,
																		"name": "TResponse",
																		"package": "medusa-react",
																		"refersToTypeParameter": true
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 16824,
																"name": "TResponse",
																"package": "medusa-react",
																"refersToTypeParameter": true
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16837,
									"name": "useAdminCustomQuery",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16838,
											"name": "useAdminCustomQuery",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook sends a "
													},
													{
														"kind": "code",
														"text": "`GET`"
													},
													{
														"kind": "text",
														"text": " request to a custom API Route."
													}
												],
												"blockTags": [
													{
														"tag": "@typeParamDefinition",
														"content": [
															{
																"kind": "text",
																"text": "TQuery - The query parameters based on the type specified for "
															},
															{
																"kind": "code",
																"text": "`TQuery`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													{
														"tag": "@typeParamDefinition",
														"content": [
															{
																"kind": "text",
																"text": "TResponse - The response based on the type specified for "
															},
															{
																"kind": "code",
																"text": "`TResponse`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCustomQuery } from \"medusa-react\"\nimport Post from \"./models/Post\"\n\ntype RequestQuery = {\n  title: string\n}\n\ntype ResponseData = {\n  posts: Post\n}\n\nconst Custom = () => {\n  const { data, isLoading } = useAdminCustomQuery\n    <RequestQuery, ResponseData>(\n      \"/blog/posts\",\n      [\"posts\"],\n      {\n        title: \"My post\"\n      }\n    )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {data?.posts && !data.posts.length && (\n        <span>No Post</span>\n      )}\n      {data?.posts && data.posts?.length > 0 && (\n        <ul>\n          {data.posts.map((post) => (\n            <li key={post.id}>{post.title}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Custom\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"typeParameter": [
												{
													"id": 16839,
													"name": "TQuery",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The type of accepted query parameters which defaults to "
															},
															{
																"kind": "code",
																"text": "`Record<string, any>`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												},
												{
													"id": 16840,
													"name": "TResponse",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The type of response which defaults to "
															},
															{
																"kind": "code",
																"text": "`any`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"default": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"parameters": [
												{
													"id": 16841,
													"name": "path",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The path to the custom endpoint."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16842,
													"name": "queryKey",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "A list of query keys, used to invalidate data."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../node_modules/@tanstack/query-core/build/lib/types.d.ts",
															"qualifiedName": "QueryKey"
														},
														"name": "QueryKey",
														"package": "@tanstack/query-core"
													}
												},
												{
													"id": 16843,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Query parameters to pass to the request."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": 16839,
														"name": "TQuery",
														"package": "medusa-react",
														"refersToTypeParameter": true
													}
												},
												{
													"id": 16844,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": 16840,
																		"name": "TResponse",
																		"package": "medusa-react",
																		"refersToTypeParameter": true
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "union",
																	"types": [
																		{
																			"type": "intrinsic",
																			"name": "undefined"
																		},
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../node_modules/@tanstack/query-core/build/lib/types.d.ts",
																				"qualifiedName": "QueryKey"
																			},
																			"name": "QueryKey",
																			"package": "@tanstack/query-core"
																		},
																		{
																			"type": "reference",
																			"target": 16839,
																			"name": "TQuery",
																			"package": "medusa-react",
																			"refersToTypeParameter": true
																		}
																	]
																}
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 16845,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16846,
																	"name": "data",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																					"qualifiedName": "Response"
																				},
																				"typeArguments": [
																					{
																						"type": "reference",
																						"target": 16840,
																						"name": "TResponse",
																						"package": "medusa-react",
																						"refersToTypeParameter": true
																					}
																				],
																				"name": "Response",
																				"package": "@medusajs/medusa-js"
																			}
																		]
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16846
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16847,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16848,
																	"name": "data",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																					"qualifiedName": "Response"
																				},
																				"typeArguments": [
																					{
																						"type": "reference",
																						"target": 16840,
																						"name": "TResponse",
																						"package": "medusa-react",
																						"refersToTypeParameter": true
																					}
																				],
																				"name": "Response",
																				"package": "@medusajs/medusa-js"
																			}
																		]
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16848
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16849,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16850,
																	"name": "data",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																					"qualifiedName": "Response"
																				},
																				"typeArguments": [
																					{
																						"type": "reference",
																						"target": 16840,
																						"name": "TResponse",
																						"package": "medusa-react",
																						"refersToTypeParameter": true
																					}
																				],
																				"name": "Response",
																				"package": "@medusajs/medusa-js"
																			}
																		]
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16850
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16851,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16852,
																	"name": "data",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																					"qualifiedName": "Response"
																				},
																				"typeArguments": [
																					{
																						"type": "reference",
																						"target": 16840,
																						"name": "TResponse",
																						"package": "medusa-react",
																						"refersToTypeParameter": true
																					}
																				],
																				"name": "Response",
																				"package": "@medusajs/medusa-js"
																			}
																		]
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16852
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										16829,
										16822,
										16837
									]
								}
							],
							"categories": [
								{
									"title": "Mutations",
									"children": [
										16822,
										16829,
										16837
									]
								}
							]
						},
						{
							"id": 16397,
							"name": "Customer Groups",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Customer Group API Routes](https://docs.medusajs.com/api/admin#customer-groups).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 16619
									},
									{
										"kind": "text",
										"text": ".\n\nCustomer Groups can be used to organize customers that share similar data or attributes into dedicated groups.\nThis can be useful for different purposes such as setting a different price for a specific customer group.\n\nRelated Guide: [How to manage customer groups](https://docs.medusajs.com/modules/customers/admin/manage-customer-groups)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 16974,
									"name": "useAdminCreateCustomerGroup",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16975,
											"name": "useAdminCreateCustomerGroup",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a customer group."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateCustomerGroup } from \"medusa-react\"\n\nconst CreateCustomerGroup = () => {\n  const createCustomerGroup = useAdminCreateCustomerGroup()\n  // ...\n\n  const handleCreate = (name: string) => {\n    createCustomerGroup.mutate({\n      name,\n    })\n  }\n\n  // ...\n}\n\nexport default CreateCustomerGroup\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16976,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/index.d.ts",
																			"qualifiedName": "AdminCustomerGroupsRes"
																		},
																		"name": "AdminCustomerGroupsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/create-customer-group.d.ts",
																	"qualifiedName": "AdminPostCustomerGroupsReq"
																},
																"name": "AdminPostCustomerGroupsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/index.d.ts",
																	"qualifiedName": "AdminCustomerGroupsRes"
																},
																"name": "AdminCustomerGroupsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/create-customer-group.d.ts",
															"qualifiedName": "AdminPostCustomerGroupsReq"
														},
														"name": "AdminPostCustomerGroupsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16977,
									"name": "useAdminUpdateCustomerGroup",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16978,
											"name": "useAdminUpdateCustomerGroup",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a customer group's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateCustomerGroup } from \"medusa-react\"\n\ntype Props = {\n  customerGroupId: string\n}\n\nconst CustomerGroup = ({ customerGroupId }: Props) => {\n  const updateCustomerGroup = useAdminUpdateCustomerGroup(\n    customerGroupId\n  )\n  // ..\n\n  const handleUpdate = (name: string) => {\n    updateCustomerGroup.mutate({\n      name,\n    })\n  }\n\n  // ...\n}\n\nexport default CustomerGroup\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16979,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The customer group's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16980,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/index.d.ts",
																			"qualifiedName": "AdminCustomerGroupsRes"
																		},
																		"name": "AdminCustomerGroupsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/update-customer-group.d.ts",
																	"qualifiedName": "AdminPostCustomerGroupsGroupReq"
																},
																"name": "AdminPostCustomerGroupsGroupReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/index.d.ts",
																	"qualifiedName": "AdminCustomerGroupsRes"
																},
																"name": "AdminCustomerGroupsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/update-customer-group.d.ts",
															"qualifiedName": "AdminPostCustomerGroupsGroupReq"
														},
														"name": "AdminPostCustomerGroupsGroupReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16981,
									"name": "useAdminDeleteCustomerGroup",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16982,
											"name": "useAdminDeleteCustomerGroup",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a customer group. This doesn't delete the customers associated with the customer group."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteCustomerGroup } from \"medusa-react\"\n\ntype Props = {\n  customerGroupId: string\n}\n\nconst CustomerGroup = ({ customerGroupId }: Props) => {\n  const deleteCustomerGroup = useAdminDeleteCustomerGroup(\n    customerGroupId\n  )\n  // ...\n\n  const handleDeleteCustomerGroup = () => {\n    deleteCustomerGroup.mutate()\n  }\n\n  // ...\n}\n\nexport default CustomerGroup\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16983,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The customer group's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16984,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																			"qualifiedName": "DeleteResponse"
																		},
																		"name": "DeleteResponse",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																	"qualifiedName": "DeleteResponse"
																},
																"name": "DeleteResponse",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16985,
									"name": "useAdminAddCustomersToCustomerGroup",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16986,
											"name": "useAdminAddCustomersToCustomerGroup",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The hook adds a list of customers to a customer group."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { \n  useAdminAddCustomersToCustomerGroup,\n} from \"medusa-react\"\n\ntype Props = {\n  customerGroupId: string\n}\n\nconst CustomerGroup = ({ customerGroupId }: Props) => {\n  const addCustomers = useAdminAddCustomersToCustomerGroup(\n    customerGroupId\n  )\n  // ...\n\n  const handleAddCustomers= (customerId: string) => {\n    addCustomers.mutate({\n      customer_ids: [\n        {\n          id: customerId,\n        },\n      ],\n    })\n  }\n\n  // ...\n}\n\nexport default CustomerGroup\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16987,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The customer group's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16988,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/index.d.ts",
																			"qualifiedName": "AdminCustomerGroupsRes"
																		},
																		"name": "AdminCustomerGroupsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/add-customers-batch.d.ts",
																	"qualifiedName": "AdminPostCustomerGroupsGroupCustomersBatchReq"
																},
																"name": "AdminPostCustomerGroupsGroupCustomersBatchReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/index.d.ts",
																	"qualifiedName": "AdminCustomerGroupsRes"
																},
																"name": "AdminCustomerGroupsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/add-customers-batch.d.ts",
															"qualifiedName": "AdminPostCustomerGroupsGroupCustomersBatchReq"
														},
														"name": "AdminPostCustomerGroupsGroupCustomersBatchReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16989,
									"name": "useAdminRemoveCustomersFromCustomerGroup",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16990,
											"name": "useAdminRemoveCustomersFromCustomerGroup",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook removes a list of customers from a customer group. This doesn't delete the customer, \nonly the association between the customer and the customer group."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { \n  useAdminRemoveCustomersFromCustomerGroup,\n} from \"medusa-react\"\n\ntype Props = {\n  customerGroupId: string\n}\n\nconst CustomerGroup = ({ customerGroupId }: Props) => {\n  const removeCustomers = \n    useAdminRemoveCustomersFromCustomerGroup(\n      customerGroupId\n    )\n  // ...\n\n  const handleRemoveCustomer = (customerId: string) => {\n    removeCustomers.mutate({\n      customer_ids: [\n        {\n          id: customerId,\n        },\n      ],\n    })\n  }\n\n  // ...\n}\n\nexport default CustomerGroup\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16991,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The customer group's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16992,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/index.d.ts",
																			"qualifiedName": "AdminCustomerGroupsRes"
																		},
																		"name": "AdminCustomerGroupsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/delete-customers-batch.d.ts",
																	"qualifiedName": "AdminDeleteCustomerGroupsGroupCustomerBatchReq"
																},
																"name": "AdminDeleteCustomerGroupsGroupCustomerBatchReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/index.d.ts",
																	"qualifiedName": "AdminCustomerGroupsRes"
																},
																"name": "AdminCustomerGroupsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/delete-customers-batch.d.ts",
															"qualifiedName": "AdminDeleteCustomerGroupsGroupCustomerBatchReq"
														},
														"name": "AdminDeleteCustomerGroupsGroupCustomerBatchReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16887,
									"name": "useAdminCustomerGroup",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16888,
											"name": "useAdminCustomerGroup",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a customer group by its ID. You can expand the customer group's relations or \nselect the fields that should be returned."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCustomerGroup } from \"medusa-react\"\n\ntype Props = {\n  customerGroupId: string\n}\n\nconst CustomerGroup = ({ customerGroupId }: Props) => {\n  const { customer_group, isLoading } = useAdminCustomerGroup(\n    customerGroupId\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {customer_group && <span>{customer_group.name}</span>}\n    </div>\n  )\n}\n\nexport default CustomerGroup\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16889,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The customer group's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16890,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Configurations to apply on the retrieved customer group."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/get-customer-group.d.ts",
															"qualifiedName": "AdminGetCustomerGroupsGroupParams"
														},
														"name": "AdminGetCustomerGroupsGroupParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 16891,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/index.d.ts",
																			"qualifiedName": "AdminCustomerGroupsRes"
																		},
																		"name": "AdminCustomerGroupsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_customer_groups"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 16892,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16894,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16893,
																	"name": "customer_group",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/customer-group.d.ts",
																			"qualifiedName": "CustomerGroup"
																		},
																		"name": "CustomerGroup",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16894,
																		16893
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16895,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16897,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16896,
																	"name": "customer_group",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/customer-group.d.ts",
																			"qualifiedName": "CustomerGroup"
																		},
																		"name": "CustomerGroup",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16897,
																		16896
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16898,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16900,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16899,
																	"name": "customer_group",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/customer-group.d.ts",
																			"qualifiedName": "CustomerGroup"
																		},
																		"name": "CustomerGroup",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16900,
																		16899
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16901,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16903,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16902,
																	"name": "customer_group",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/customer-group.d.ts",
																			"qualifiedName": "CustomerGroup"
																		},
																		"name": "CustomerGroup",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16903,
																		16902
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 16904,
									"name": "useAdminCustomerGroups",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16905,
											"name": "useAdminCustomerGroups",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of customer groups. The customer groups can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`name`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`id`"
													},
													{
														"kind": "text",
														"text": ". \nThe customer groups can also be sorted or paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list customer groups:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminCustomerGroups } from \"medusa-react\"\n\nconst CustomerGroups = () => {\n  const { \n    customer_groups,\n    isLoading,\n  } = useAdminCustomerGroups()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {customer_groups && !customer_groups.length && (\n        <span>No Customer Groups</span>\n      )}\n      {customer_groups && customer_groups.length > 0 && (\n        <ul>\n          {customer_groups.map(\n            (customerGroup) => (\n              <li key={customerGroup.id}>\n                {customerGroup.name}\n              </li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default CustomerGroups\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify relations that should be retrieved within the customer groups:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminCustomerGroups } from \"medusa-react\"\n\nconst CustomerGroups = () => {\n  const { \n    customer_groups,\n    isLoading,\n  } = useAdminCustomerGroups({\n    expand: \"customers\"\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {customer_groups && !customer_groups.length && (\n        <span>No Customer Groups</span>\n      )}\n      {customer_groups && customer_groups.length > 0 && (\n        <ul>\n          {customer_groups.map(\n            (customerGroup) => (\n              <li key={customerGroup.id}>\n                {customerGroup.name}\n              </li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default CustomerGroups\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`10`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminCustomerGroups } from \"medusa-react\"\n\nconst CustomerGroups = () => {\n  const { \n    customer_groups,\n    limit,\n    offset,\n    isLoading,\n  } = useAdminCustomerGroups({\n    expand: \"customers\",\n    limit: 15,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {customer_groups && !customer_groups.length && (\n        <span>No Customer Groups</span>\n      )}\n      {customer_groups && customer_groups.length > 0 && (\n        <ul>\n          {customer_groups.map(\n            (customerGroup) => (\n              <li key={customerGroup.id}>\n                {customerGroup.name}\n              </li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default CustomerGroups\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16906,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations to apply on the retrieved customer groups."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/list-customer-groups.d.ts",
															"qualifiedName": "AdminGetCustomerGroupsParams"
														},
														"name": "AdminGetCustomerGroupsParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 16907,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/index.d.ts",
																			"qualifiedName": "AdminCustomerGroupsListRes"
																		},
																		"name": "AdminCustomerGroupsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_customer_groups"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 16908,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 16909,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						16909
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 16910,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16915,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16914,
																	"name": "customer_groups",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/customer-group.d.ts",
																				"qualifiedName": "CustomerGroup"
																			},
																			"name": "CustomerGroup",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 16911,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16912,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16913,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16915,
																		16914,
																		16911,
																		16912,
																		16913
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16916,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16921,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16920,
																	"name": "customer_groups",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/customer-group.d.ts",
																				"qualifiedName": "CustomerGroup"
																			},
																			"name": "CustomerGroup",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 16917,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16918,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16919,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16921,
																		16920,
																		16917,
																		16918,
																		16919
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16922,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16927,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16926,
																	"name": "customer_groups",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/customer-group.d.ts",
																				"qualifiedName": "CustomerGroup"
																			},
																			"name": "CustomerGroup",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 16923,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16924,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16925,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16927,
																		16926,
																		16923,
																		16924,
																		16925
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16928,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16933,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16932,
																	"name": "customer_groups",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/customer-group.d.ts",
																				"qualifiedName": "CustomerGroup"
																			},
																			"name": "CustomerGroup",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 16929,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16930,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16931,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16933,
																		16932,
																		16929,
																		16930,
																		16931
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 16934,
									"name": "useAdminCustomerGroupCustomers",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16935,
											"name": "useAdminCustomerGroupCustomers",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of customers in a customer group. The customers can be filtered \nby the "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " field. The customers can also be paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCustomerGroupCustomers } from \"medusa-react\"\n\ntype Props = {\n  customerGroupId: string\n}\n\nconst CustomerGroup = ({ customerGroupId }: Props) => {\n  const { \n    customers, \n    isLoading,\n  } = useAdminCustomerGroupCustomers(\n    customerGroupId\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {customers && !customers.length && (\n        <span>No customers</span>\n      )}\n      {customers && customers.length > 0 && (\n        <ul>\n          {customers.map((customer) => (\n            <li key={customer.id}>{customer.first_name}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default CustomerGroup\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16936,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The customer group's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16937,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations to apply on the retrieved customers."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/list-customers.d.ts",
															"qualifiedName": "AdminGetCustomersParams"
														},
														"name": "AdminGetCustomersParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 16938,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/index.d.ts",
																			"qualifiedName": "AdminCustomersListRes"
																		},
																		"name": "AdminCustomersListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "union",
																	"types": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "reflection",
																			"declaration": {
																				"id": 16939,
																				"name": "__type",
																				"variant": "declaration",
																				"kind": 65536,
																				"flags": {},
																				"children": [
																					{
																						"id": 16940,
																						"name": "limit",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"comment": {
																							"summary": [
																								{
																									"kind": "inline-tag",
																									"tag": "@inheritDoc",
																									"text": "FindPaginationParams.limit"
																								}
																							],
																							"blockTags": [
																								{
																									"tag": "@defaultValue",
																									"content": [
																										{
																											"kind": "code",
																											"text": "```ts\n50\n```"
																										}
																									]
																								}
																							]
																						},
																						"type": {
																							"type": "intrinsic",
																							"name": "number"
																						}
																					},
																					{
																						"id": 16941,
																						"name": "offset",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"comment": {
																							"summary": [
																								{
																									"kind": "inline-tag",
																									"tag": "@inheritDoc",
																									"text": "FindPaginationParams.offset"
																								}
																							],
																							"blockTags": [
																								{
																									"tag": "@defaultValue",
																									"content": [
																										{
																											"kind": "code",
																											"text": "```ts\n0\n```"
																										}
																									]
																								}
																							]
																						},
																						"type": {
																							"type": "intrinsic",
																							"name": "number"
																						}
																					},
																					{
																						"id": 16942,
																						"name": "expand",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"comment": {
																							"summary": [
																								{
																									"kind": "inline-tag",
																									"tag": "@inheritDoc",
																									"text": "FindParams.expand"
																								}
																							]
																						},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						}
																					},
																					{
																						"id": 16943,
																						"name": "fields",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"comment": {
																							"summary": [
																								{
																									"kind": "inline-tag",
																									"tag": "@inheritDoc",
																									"text": "FindParams.fields"
																								}
																							]
																						},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						}
																					},
																					{
																						"id": 16944,
																						"name": "q",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"comment": {
																							"summary": [
																								{
																									"kind": "text",
																									"text": "Search term used to search customers' email, first name, last name."
																								}
																							]
																						},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						}
																					},
																					{
																						"id": 16945,
																						"name": "has_account",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"comment": {
																							"summary": [
																								{
																									"kind": "text",
																									"text": "Filter customers by whether they have an account."
																								}
																							]
																						},
																						"type": {
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					},
																					{
																						"id": 16946,
																						"name": "groups",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"comment": {
																							"summary": [
																								{
																									"kind": "text",
																									"text": "Filter customers by the customer's customer groups."
																								}
																							]
																						},
																						"type": {
																							"type": "array",
																							"elementType": {
																								"type": "intrinsic",
																								"name": "string"
																							}
																						}
																					},
																					{
																						"id": 16947,
																						"name": "order",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"comment": {
																							"summary": [
																								{
																									"kind": "text",
																									"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
																								},
																								{
																									"kind": "code",
																									"text": "`-`"
																								},
																								{
																									"kind": "text",
																									"text": "."
																								}
																							]
																						},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						}
																					},
																					{
																						"id": 16948,
																						"name": "created_at",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"comment": {
																							"summary": [
																								{
																									"kind": "text",
																									"text": "Date filters to apply on the customers' "
																								},
																								{
																									"kind": "code",
																									"text": "`created_at`"
																								},
																								{
																									"kind": "text",
																									"text": " date."
																								}
																							]
																						},
																						"type": {
																							"type": "reference",
																							"target": {
																								"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																								"qualifiedName": "DateComparisonOperator"
																							},
																							"name": "DateComparisonOperator",
																							"package": "@medusajs/medusa"
																						}
																					},
																					{
																						"id": 16949,
																						"name": "updated_at",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"comment": {
																							"summary": [
																								{
																									"kind": "text",
																									"text": "Date filters to apply on the customers' "
																								},
																								{
																									"kind": "code",
																									"text": "`updated_at`"
																								},
																								{
																									"kind": "text",
																									"text": " date."
																								}
																							]
																						},
																						"type": {
																							"type": "reference",
																							"target": {
																								"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																								"qualifiedName": "DateComparisonOperator"
																							},
																							"name": "DateComparisonOperator",
																							"package": "@medusajs/medusa"
																						}
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"children": [
																							16940,
																							16941,
																							16942,
																							16943,
																							16944,
																							16945,
																							16946,
																							16947,
																							16948,
																							16949
																						]
																					}
																				]
																			}
																		}
																	]
																}
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 16950,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16955,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16954,
																	"name": "customers",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/customer.d.ts",
																				"qualifiedName": "Customer"
																			},
																			"name": "Customer",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 16951,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16952,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16953,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16955,
																		16954,
																		16951,
																		16952,
																		16953
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16956,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16961,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16960,
																	"name": "customers",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/customer.d.ts",
																				"qualifiedName": "Customer"
																			},
																			"name": "Customer",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 16957,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16958,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16959,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16961,
																		16960,
																		16957,
																		16958,
																		16959
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16962,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16967,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16966,
																	"name": "customers",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/customer.d.ts",
																				"qualifiedName": "Customer"
																			},
																			"name": "Customer",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 16963,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16964,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16965,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16967,
																		16966,
																		16963,
																		16964,
																		16965
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 16968,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 16973,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 16972,
																	"name": "customers",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/customer.d.ts",
																				"qualifiedName": "Customer"
																			},
																			"name": "Customer",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 16969,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16970,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 16971,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		16973,
																		16972,
																		16969,
																		16970,
																		16971
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										16974,
										16977,
										16981,
										16985,
										16989,
										16887,
										16904,
										16934
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										16887,
										16904,
										16934
									]
								},
								{
									"title": "Mutations",
									"children": [
										16974,
										16977,
										16981,
										16985,
										16989
									]
								}
							]
						},
						{
							"id": 16398,
							"name": "Customers",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Customer API Routes](https://docs.medusajs.com/api/admin#customers).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 16619
									},
									{
										"kind": "text",
										"text": ".\n\nRelated Guide: [How to manage customers](https://docs.medusajs.com/modules/customers/admin/manage-customers)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 17040,
									"name": "useAdminCreateCustomer",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17041,
											"name": "useAdminCreateCustomer",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a customer as an admin."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateCustomer } from \"medusa-react\"\n\ntype CustomerData = {\n  first_name: string\n  last_name: string\n  email: string\n  password: string\n}\n\nconst CreateCustomer = () => {\n  const createCustomer = useAdminCreateCustomer()\n  // ...\n\n  const handleCreate = (customerData: CustomerData) => {\n    createCustomer.mutate(customerData, {\n      onSuccess: ({ customer }) => {\n        console.log(customer.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CreateCustomer\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17042,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/index.d.ts",
																			"qualifiedName": "AdminCustomersRes"
																		},
																		"name": "AdminCustomersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/create-customer.d.ts",
																	"qualifiedName": "AdminPostCustomersReq"
																},
																"name": "AdminPostCustomersReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/index.d.ts",
																	"qualifiedName": "AdminCustomersRes"
																},
																"name": "AdminCustomersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/create-customer.d.ts",
															"qualifiedName": "AdminPostCustomersReq"
														},
														"name": "AdminPostCustomersReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17043,
									"name": "useAdminUpdateCustomer",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17044,
											"name": "useAdminUpdateCustomer",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a customer's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateCustomer } from \"medusa-react\"\n\ntype CustomerData = {\n  first_name: string\n  last_name: string\n  email: string\n  password: string\n}\n\ntype Props = {\n  customerId: string\n}\n\nconst Customer = ({ customerId }: Props) => {\n  const updateCustomer = useAdminUpdateCustomer(customerId)\n  // ...\n\n  const handleUpdate = (customerData: CustomerData) => {\n    updateCustomer.mutate(customerData)\n  }\n\n  // ...\n}\n\nexport default Customer\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17045,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The customer's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17046,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/index.d.ts",
																			"qualifiedName": "AdminCustomersRes"
																		},
																		"name": "AdminCustomersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/update-customer.d.ts",
																	"qualifiedName": "AdminPostCustomersCustomerReq"
																},
																"name": "AdminPostCustomersCustomerReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/index.d.ts",
																	"qualifiedName": "AdminCustomersRes"
																},
																"name": "AdminCustomersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/update-customer.d.ts",
															"qualifiedName": "AdminPostCustomersCustomerReq"
														},
														"name": "AdminPostCustomersCustomerReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 16994,
									"name": "useAdminCustomers",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 16995,
											"name": "useAdminCustomers",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of Customers. The customers can be filtered by fields such as \n"
													},
													{
														"kind": "code",
														"text": "`q`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`groups`"
													},
													{
														"kind": "text",
														"text": ". The customers can also be paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list customers:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminCustomers } from \"medusa-react\"\n\nconst Customers = () => {\n  const { customers, isLoading } = useAdminCustomers()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {customers && !customers.length && (\n        <span>No customers</span>\n      )}\n      {customers && customers.length > 0 && (\n        <ul>\n          {customers.map((customer) => (\n            <li key={customer.id}>{customer.first_name}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Customers\n```"
															},
															{
																"kind": "text",
																"text": "\n\nYou can specify relations to be retrieved within each customer. In addition, by default, only the first "
															},
															{
																"kind": "code",
																"text": "`50`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. \nYou can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminCustomers } from \"medusa-react\"\n\nconst Customers = () => {\n  const { \n    customers, \n    limit,\n    offset,\n    isLoading\n  } = useAdminCustomers({\n    expand: \"billing_address\",\n    limit: 20,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {customers && !customers.length && (\n        <span>No customers</span>\n      )}\n      {customers && customers.length > 0 && (\n        <ul>\n          {customers.map((customer) => (\n            <li key={customer.id}>{customer.first_name}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Customers\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 16996,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations to apply on the retrieved customers."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/list-customers.d.ts",
															"qualifiedName": "AdminGetCustomersParams"
														},
														"name": "AdminGetCustomersParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 16997,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/index.d.ts",
																			"qualifiedName": "AdminCustomersListRes"
																		},
																		"name": "AdminCustomersListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_customers"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 16998,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 16999,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						16999
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 17000,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17005,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17004,
																	"name": "customers",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/customer.d.ts",
																				"qualifiedName": "Customer"
																			},
																			"name": "Customer",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 17001,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17002,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17003,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17005,
																		17004,
																		17001,
																		17002,
																		17003
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17006,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17011,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17010,
																	"name": "customers",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/customer.d.ts",
																				"qualifiedName": "Customer"
																			},
																			"name": "Customer",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 17007,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17008,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17009,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17011,
																		17010,
																		17007,
																		17008,
																		17009
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17012,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17017,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17016,
																	"name": "customers",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/customer.d.ts",
																				"qualifiedName": "Customer"
																			},
																			"name": "Customer",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 17013,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17014,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17015,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17017,
																		17016,
																		17013,
																		17014,
																		17015
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17018,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17023,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17022,
																	"name": "customers",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/customer.d.ts",
																				"qualifiedName": "Customer"
																			},
																			"name": "Customer",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 17019,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17020,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17021,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17023,
																		17022,
																		17019,
																		17020,
																		17021
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 17024,
									"name": "useAdminCustomer",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17025,
											"name": "useAdminCustomer",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves the details of a customer."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCustomer } from \"medusa-react\"\n\ntype Props = {\n  customerId: string\n}\n\nconst Customer = ({ customerId }: Props) => {\n  const { customer, isLoading } = useAdminCustomer(\n    customerId\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {customer && <span>{customer.first_name}</span>}\n    </div>\n  )\n}\n\nexport default Customer\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17026,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The customer's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17027,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/index.d.ts",
																			"qualifiedName": "AdminCustomersRes"
																		},
																		"name": "AdminCustomersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_customers"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 17028,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17030,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17029,
																	"name": "customer",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/customer.d.ts",
																			"qualifiedName": "Customer"
																		},
																		"name": "Customer",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17030,
																		17029
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17031,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17033,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17032,
																	"name": "customer",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/customer.d.ts",
																			"qualifiedName": "Customer"
																		},
																		"name": "Customer",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17033,
																		17032
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17034,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17036,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17035,
																	"name": "customer",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/customer.d.ts",
																			"qualifiedName": "Customer"
																		},
																		"name": "Customer",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17036,
																		17035
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17037,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17039,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17038,
																	"name": "customer",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/customer.d.ts",
																			"qualifiedName": "Customer"
																		},
																		"name": "Customer",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17039,
																		17038
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										17040,
										17043,
										16994,
										17024
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										16994,
										17024
									]
								},
								{
									"title": "Mutations",
									"children": [
										17040,
										17043
									]
								}
							]
						},
						{
							"id": 16399,
							"name": "Discounts",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Discount API Routes](https://docs.medusajs.com/api/admin#discounts).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 16619
									},
									{
										"kind": "text",
										"text": ".\n\nAdmins can create discounts with conditions and rules, providing them with advanced settings for variety of cases.\nThe methods in this class can be used to manage discounts, their conditions, resources, and more.\n\nRelated Guide: [How to manage discounts](https://docs.medusajs.com/modules/discounts/admin/manage-discounts)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 17151,
									"name": "useAdminAddDiscountConditionResourceBatch",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17152,
											"name": "useAdminAddDiscountConditionResourceBatch",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook adds a batch of resources to a discount condition. The type of resource depends on the type of discount condition. \nFor example, if the discount condition's type is "
													},
													{
														"kind": "code",
														"text": "`products`"
													},
													{
														"kind": "text",
														"text": ", the resources being added should be products."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To add resources to a discount condition:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { \n  useAdminAddDiscountConditionResourceBatch\n} from \"medusa-react\"\n\ntype Props = {\n  discountId: string\n  conditionId: string\n}\n\nconst DiscountCondition = ({\n  discountId,\n  conditionId\n}: Props) => {\n  const addConditionResources = useAdminAddDiscountConditionResourceBatch(\n    discountId,\n    conditionId\n  )\n  // ...\n\n  const handleAdd = (itemId: string) => {\n    addConditionResources.mutate({\n      resources: [\n        {\n          id: itemId\n        }\n      ]\n    }, {\n      onSuccess: ({ discount }) => {\n        console.log(discount.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default DiscountCondition\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify relations to include in the returned discount:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { \n  useAdminAddDiscountConditionResourceBatch\n} from \"medusa-react\"\n\ntype Props = {\n  discountId: string\n  conditionId: string\n}\n\nconst DiscountCondition = ({\n  discountId,\n  conditionId\n}: Props) => {\n  const addConditionResources = useAdminAddDiscountConditionResourceBatch(\n    discountId,\n    conditionId,\n    {\n      expand: \"rule\"\n    }\n  )\n  // ...\n\n  const handleAdd = (itemId: string) => {\n    addConditionResources.mutate({\n      resources: [\n        {\n          id: itemId\n        }\n      ]\n    }, {\n      onSuccess: ({ discount }) => {\n        console.log(discount.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default DiscountCondition\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17153,
													"name": "discountId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The ID of the discount the condition belongs to."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17154,
													"name": "conditionId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The discount condition's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17155,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Configurations to apply on the retrieved discount."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/add-resources-to-condition-batch.d.ts",
															"qualifiedName": "AdminPostDiscountsDiscountConditionsConditionBatchParams"
														},
														"name": "AdminPostDiscountsDiscountConditionsConditionBatchParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 17156,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
																			"qualifiedName": "AdminDiscountsRes"
																		},
																		"name": "AdminDiscountsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/add-resources-to-condition-batch.d.ts",
																	"qualifiedName": "AdminPostDiscountsDiscountConditionsConditionBatchReq"
																},
																"name": "AdminPostDiscountsDiscountConditionsConditionBatchReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
																	"qualifiedName": "AdminDiscountsRes"
																},
																"name": "AdminDiscountsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/add-resources-to-condition-batch.d.ts",
															"qualifiedName": "AdminPostDiscountsDiscountConditionsConditionBatchReq"
														},
														"name": "AdminPostDiscountsDiscountConditionsConditionBatchReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17157,
									"name": "useAdminDeleteDiscountConditionResourceBatch",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17158,
											"name": "useAdminDeleteDiscountConditionResourceBatch",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook remove a batch of resources from a discount condition. This will only remove the association between the resource and \nthe discount condition, not the resource itself."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { \n  useAdminDeleteDiscountConditionResourceBatch\n} from \"medusa-react\"\n\ntype Props = {\n  discountId: string\n  conditionId: string\n}\n\nconst DiscountCondition = ({\n  discountId,\n  conditionId\n}: Props) => {\n  const deleteConditionResource = useAdminDeleteDiscountConditionResourceBatch(\n    discountId,\n    conditionId,\n  )\n  // ...\n\n  const handleDelete = (itemId: string) => {\n    deleteConditionResource.mutate({\n      resources: [\n        {\n          id: itemId\n        }\n      ]\n    }, {\n      onSuccess: ({ discount }) => {\n        console.log(discount.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default DiscountCondition\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17159,
													"name": "discountId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The ID of the discount the condition belongs to."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17160,
													"name": "conditionId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The discount condition's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17161,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
																			"qualifiedName": "AdminDiscountsRes"
																		},
																		"name": "AdminDiscountsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/delete-resources-from-condition-batch.d.ts",
																	"qualifiedName": "AdminDeleteDiscountsDiscountConditionsConditionBatchReq"
																},
																"name": "AdminDeleteDiscountsDiscountConditionsConditionBatchReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
																	"qualifiedName": "AdminDiscountsRes"
																},
																"name": "AdminDiscountsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/delete-resources-from-condition-batch.d.ts",
															"qualifiedName": "AdminDeleteDiscountsDiscountConditionsConditionBatchReq"
														},
														"name": "AdminDeleteDiscountsDiscountConditionsConditionBatchReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17162,
									"name": "useAdminCreateDiscount",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17163,
											"name": "useAdminCreateDiscount",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a discount with a given set of rules that defines how the discount is applied."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { \n  useAdminCreateDiscount,\n} from \"medusa-react\"\nimport { \n  AllocationType, \n  DiscountRuleType,\n} from \"@medusajs/medusa\"\n\nconst CreateDiscount = () => {\n  const createDiscount = useAdminCreateDiscount()\n  // ...\n\n  const handleCreate = (\n    currencyCode: string,\n    regionId: string\n  ) => {\n    // ...\n    createDiscount.mutate({\n      code: currencyCode,\n      rule: {\n        type: DiscountRuleType.FIXED,\n        value: 10,\n        allocation: AllocationType.ITEM,\n      },\n      regions: [\n          regionId,\n      ],\n      is_dynamic: false,\n      is_disabled: false,\n    })\n  }\n\n  // ...\n}\n\nexport default CreateDiscount\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17164,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
																			"qualifiedName": "AdminDiscountsRes"
																		},
																		"name": "AdminDiscountsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/create-discount.d.ts",
																	"qualifiedName": "AdminPostDiscountsReq"
																},
																"name": "AdminPostDiscountsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
																	"qualifiedName": "AdminDiscountsRes"
																},
																"name": "AdminDiscountsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/create-discount.d.ts",
															"qualifiedName": "AdminPostDiscountsReq"
														},
														"name": "AdminPostDiscountsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17165,
									"name": "useAdminUpdateDiscount",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17166,
											"name": "useAdminUpdateDiscount",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a discount with a given set of rules that define how the discount is applied."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateDiscount } from \"medusa-react\"\n\ntype Props = {\n  discountId: string\n}\n\nconst Discount = ({ discountId }: Props) => {\n  const updateDiscount = useAdminUpdateDiscount(discountId)\n  // ...\n\n  const handleUpdate = (isDisabled: boolean) => {\n    updateDiscount.mutate({\n      is_disabled: isDisabled,\n    })\n  }\n\n  // ...\n}\n\nexport default Discount\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17167,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The discount's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17168,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
																			"qualifiedName": "AdminDiscountsRes"
																		},
																		"name": "AdminDiscountsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/update-discount.d.ts",
																	"qualifiedName": "AdminPostDiscountsDiscountReq"
																},
																"name": "AdminPostDiscountsDiscountReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
																	"qualifiedName": "AdminDiscountsRes"
																},
																"name": "AdminDiscountsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/update-discount.d.ts",
															"qualifiedName": "AdminPostDiscountsDiscountReq"
														},
														"name": "AdminPostDiscountsDiscountReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17169,
									"name": "useAdminDeleteDiscount",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17170,
											"name": "useAdminDeleteDiscount",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a discount. Deleting the discount will make it unavailable for customers to use."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteDiscount } from \"medusa-react\"\n\nconst Discount = () => {\n  const deleteDiscount = useAdminDeleteDiscount(discount_id)\n  // ...\n\n  const handleDelete = () => {\n    deleteDiscount.mutate()\n  }\n\n  // ...\n}\n\nexport default Discount\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17171,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The discount's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17172,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																			"qualifiedName": "DeleteResponse"
																		},
																		"name": "DeleteResponse",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																	"qualifiedName": "DeleteResponse"
																},
																"name": "DeleteResponse",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17173,
									"name": "useAdminDiscountAddRegion",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17174,
											"name": "useAdminDiscountAddRegion",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook adds a Region to the list of Regions a Discount can be used in."
													}
												],
												"blockTags": [
													{
														"tag": "@typeParamDefinition",
														"content": [
															{
																"kind": "text",
																"text": "string - The ID of the region to add."
															}
														]
													},
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDiscountAddRegion } from \"medusa-react\"\n\ntype Props = {\n  discountId: string\n}\n\nconst Discount = ({ discountId }: Props) => {\n  const addRegion = useAdminDiscountAddRegion(discountId)\n  // ...\n\n  const handleAdd = (regionId: string) => {\n    addRegion.mutate(regionId, {\n      onSuccess: ({ discount }) => {\n        console.log(discount.regions)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Discount\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17175,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The discount's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17176,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
																			"qualifiedName": "AdminDiscountsRes"
																		},
																		"name": "AdminDiscountsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
																	"qualifiedName": "AdminDiscountsRes"
																},
																"name": "AdminDiscountsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17177,
									"name": "useAdminDiscountRemoveRegion",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17178,
											"name": "useAdminDiscountRemoveRegion",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook removes a Region from the list of Regions that a Discount can be used in. \nThis does not delete a region, only the association between it and the discount."
													}
												],
												"blockTags": [
													{
														"tag": "@typeParamDefinition",
														"content": [
															{
																"kind": "text",
																"text": "string - The ID of the region to remove."
															}
														]
													},
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDiscountRemoveRegion } from \"medusa-react\"\n\ntype Props = {\n  discountId: string\n}\n\nconst Discount = ({ discountId }: Props) => {\n  const deleteRegion = useAdminDiscountRemoveRegion(discountId)\n  // ...\n\n  const handleDelete = (regionId: string) => {\n    deleteRegion.mutate(regionId, {\n      onSuccess: ({ discount }) => {\n        console.log(discount.regions)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Discount\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17179,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The discount's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17180,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
																			"qualifiedName": "AdminDiscountsRes"
																		},
																		"name": "AdminDiscountsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
																	"qualifiedName": "AdminDiscountsRes"
																},
																"name": "AdminDiscountsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17181,
									"name": "useAdminCreateDynamicDiscountCode",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17182,
											"name": "useAdminCreateDynamicDiscountCode",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a dynamic unique code that can map to a parent discount. This is useful if you want to \nautomatically generate codes with the same rules and conditions."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateDynamicDiscountCode } from \"medusa-react\"\n\ntype Props = {\n  discountId: string\n}\n\nconst Discount = ({ discountId }: Props) => {\n  const createDynamicDiscount = useAdminCreateDynamicDiscountCode(discountId)\n  // ...\n\n  const handleCreate = (\n    code: string,\n    usageLimit: number\n  ) => {\n    createDynamicDiscount.mutate({\n      code,\n      usage_limit: usageLimit\n    }, {\n      onSuccess: ({ discount }) => {\n        console.log(discount.is_dynamic)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Discount\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17183,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The discount's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17184,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
																			"qualifiedName": "AdminDiscountsRes"
																		},
																		"name": "AdminDiscountsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/create-dynamic-code.d.ts",
																	"qualifiedName": "AdminPostDiscountsDiscountDynamicCodesReq"
																},
																"name": "AdminPostDiscountsDiscountDynamicCodesReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
																	"qualifiedName": "AdminDiscountsRes"
																},
																"name": "AdminDiscountsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/create-dynamic-code.d.ts",
															"qualifiedName": "AdminPostDiscountsDiscountDynamicCodesReq"
														},
														"name": "AdminPostDiscountsDiscountDynamicCodesReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17185,
									"name": "useAdminDeleteDynamicDiscountCode",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17186,
											"name": "useAdminDeleteDynamicDiscountCode",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a dynamic code from a discount."
													}
												],
												"blockTags": [
													{
														"tag": "@typeParamDefinition",
														"content": [
															{
																"kind": "text",
																"text": "string - The code of the dynamic discount to delete."
															}
														]
													},
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteDynamicDiscountCode } from \"medusa-react\"\n\ntype Props = {\n  discountId: string\n}\n\nconst Discount = ({ discountId }: Props) => {\n  const deleteDynamicDiscount = useAdminDeleteDynamicDiscountCode(discountId)\n  // ...\n\n  const handleDelete = (code: string) => {\n    deleteDynamicDiscount.mutate(code, {\n      onSuccess: ({ discount }) => {\n        console.log(discount.is_dynamic)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Discount\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17187,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The discount's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17188,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
																			"qualifiedName": "AdminDiscountsRes"
																		},
																		"name": "AdminDiscountsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
																	"qualifiedName": "AdminDiscountsRes"
																},
																"name": "AdminDiscountsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17189,
									"name": "useAdminDiscountCreateCondition",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17190,
											"name": "useAdminDiscountCreateCondition",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a discount condition. Only one of "
													},
													{
														"kind": "code",
														"text": "`products`"
													},
													{
														"kind": "text",
														"text": ", "
													},
													{
														"kind": "code",
														"text": "`product_types`"
													},
													{
														"kind": "text",
														"text": ", "
													},
													{
														"kind": "code",
														"text": "`product_collections`"
													},
													{
														"kind": "text",
														"text": ", "
													},
													{
														"kind": "code",
														"text": "`product_tags`"
													},
													{
														"kind": "text",
														"text": ", and "
													},
													{
														"kind": "code",
														"text": "`customer_groups`"
													},
													{
														"kind": "text",
														"text": " \nshould be provided in the "
													},
													{
														"kind": "code",
														"text": "`payload`"
													},
													{
														"kind": "text",
														"text": " parameter, based on the type of discount condition. For example, if the discount condition's type is "
													},
													{
														"kind": "code",
														"text": "`products`"
													},
													{
														"kind": "text",
														"text": ", \nthe "
													},
													{
														"kind": "code",
														"text": "`products`"
													},
													{
														"kind": "text",
														"text": " field should be provided in the "
													},
													{
														"kind": "code",
														"text": "`payload`"
													},
													{
														"kind": "text",
														"text": " parameter."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { DiscountConditionOperator } from \"@medusajs/medusa\"\nimport { useAdminDiscountCreateCondition } from \"medusa-react\"\n\ntype Props = {\n  discountId: string\n}\n\nconst Discount = ({ discountId }: Props) => {\n  const createCondition = useAdminDiscountCreateCondition(discountId)\n  // ...\n\n  const handleCreateCondition = (\n    operator: DiscountConditionOperator,\n    products: string[]\n  ) => {\n    createCondition.mutate({\n      operator,\n      products\n    }, {\n      onSuccess: ({ discount }) => {\n        console.log(discount.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Discount\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17191,
													"name": "discountId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The discount's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17192,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
																			"qualifiedName": "AdminDiscountsRes"
																		},
																		"name": "AdminDiscountsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/create-condition.d.ts",
																	"qualifiedName": "AdminPostDiscountsDiscountConditions"
																},
																"name": "AdminPostDiscountsDiscountConditions",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
																	"qualifiedName": "AdminDiscountsRes"
																},
																"name": "AdminDiscountsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/create-condition.d.ts",
															"qualifiedName": "AdminPostDiscountsDiscountConditions"
														},
														"name": "AdminPostDiscountsDiscountConditions",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17193,
									"name": "useAdminDiscountUpdateCondition",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17194,
											"name": "useAdminDiscountUpdateCondition",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Update a discount condition. Only one of "
													},
													{
														"kind": "code",
														"text": "`products`"
													},
													{
														"kind": "text",
														"text": ", "
													},
													{
														"kind": "code",
														"text": "`product_types`"
													},
													{
														"kind": "text",
														"text": ", "
													},
													{
														"kind": "code",
														"text": "`product_collections`"
													},
													{
														"kind": "text",
														"text": ", "
													},
													{
														"kind": "code",
														"text": "`product_tags`"
													},
													{
														"kind": "text",
														"text": ", and "
													},
													{
														"kind": "code",
														"text": "`customer_groups`"
													},
													{
														"kind": "text",
														"text": " \nshould be provided in the "
													},
													{
														"kind": "code",
														"text": "`payload`"
													},
													{
														"kind": "text",
														"text": " parameter, based on the type of discount condition. For example, if the discount condition's \ntype is "
													},
													{
														"kind": "code",
														"text": "`products`"
													},
													{
														"kind": "text",
														"text": ", the "
													},
													{
														"kind": "code",
														"text": "`products`"
													},
													{
														"kind": "text",
														"text": " field should be provided in the "
													},
													{
														"kind": "code",
														"text": "`payload`"
													},
													{
														"kind": "text",
														"text": " parameter."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDiscountUpdateCondition } from \"medusa-react\"\n\ntype Props = {\n  discountId: string\n  conditionId: string\n}\n\nconst DiscountCondition = ({\n  discountId,\n  conditionId\n}: Props) => {\n  const update = useAdminDiscountUpdateCondition(\n    discountId,\n    conditionId\n  )\n  // ...\n\n  const handleUpdate = (\n    products: string[]\n  ) => {\n    update.mutate({\n      products\n    }, {\n      onSuccess: ({ discount }) => {\n        console.log(discount.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default DiscountCondition\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17195,
													"name": "discountId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The discount's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17196,
													"name": "conditionId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The discount condition's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17197,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
																			"qualifiedName": "AdminDiscountsRes"
																		},
																		"name": "AdminDiscountsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/update-condition.d.ts",
																	"qualifiedName": "AdminPostDiscountsDiscountConditionsCondition"
																},
																"name": "AdminPostDiscountsDiscountConditionsCondition",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
																	"qualifiedName": "AdminDiscountsRes"
																},
																"name": "AdminDiscountsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/update-condition.d.ts",
															"qualifiedName": "AdminPostDiscountsDiscountConditionsCondition"
														},
														"name": "AdminPostDiscountsDiscountConditionsCondition",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17198,
									"name": "useAdminDiscountRemoveCondition",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17199,
											"name": "useAdminDiscountRemoveCondition",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a discount condition. This doesn't delete resources associated to the discount condition."
													}
												],
												"blockTags": [
													{
														"tag": "@typeParamDefinition",
														"content": [
															{
																"kind": "text",
																"text": "string - The ID of the condition to delete."
															}
														]
													},
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDiscountRemoveCondition } from \"medusa-react\"\n\ntype Props = {\n  discountId: string\n}\n\nconst Discount = ({ discountId }: Props) => {\n  const deleteCondition = useAdminDiscountRemoveCondition(\n    discountId\n  )\n  // ...\n\n  const handleDelete = (\n    conditionId: string\n  ) => {\n    deleteCondition.mutate(conditionId, {\n      onSuccess: ({ id, object, deleted }) => {\n        console.log(deleted)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Discount\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17200,
													"name": "discountId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The discount's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17201,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																			"qualifiedName": "DeleteResponse"
																		},
																		"name": "DeleteResponse",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																	"qualifiedName": "DeleteResponse"
																},
																"name": "DeleteResponse",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17070,
									"name": "useAdminDiscounts",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17071,
											"name": "useAdminDiscounts",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of Discounts. The discounts can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`rule`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`is_dynamic`"
													},
													{
														"kind": "text",
														"text": ".\nThe discounts can also be paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list discounts:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminDiscounts } from \"medusa-react\"\n\nconst Discounts = () => {\n  const { discounts, isLoading } = useAdminDiscounts()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {discounts && !discounts.length && (\n        <span>No customers</span>\n      )}\n      {discounts && discounts.length > 0 && (\n        <ul>\n          {discounts.map((discount) => (\n            <li key={discount.id}>{discount.code}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Discounts\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify relations that should be retrieved within the discounts:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminDiscounts } from \"medusa-react\"\n\nconst Discounts = () => {\n  const { discounts, isLoading } = useAdminDiscounts({\n    expand: \"rule\"\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {discounts && !discounts.length && (\n        <span>No customers</span>\n      )}\n      {discounts && discounts.length > 0 && (\n        <ul>\n          {discounts.map((discount) => (\n            <li key={discount.id}>{discount.code}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Discounts\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`20`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminDiscounts } from \"medusa-react\"\n\nconst Discounts = () => {\n  const {\n    discounts,\n    limit,\n    offset,\n    isLoading\n  } = useAdminDiscounts({\n    expand: \"rule\",\n    limit: 10,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {discounts && !discounts.length && (\n        <span>No customers</span>\n      )}\n      {discounts && discounts.length > 0 && (\n        <ul>\n          {discounts.map((discount) => (\n            <li key={discount.id}>{discount.code}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Discounts\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17072,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations to apply on the retrieved discounts."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/list-discounts.d.ts",
															"qualifiedName": "AdminGetDiscountsParams"
														},
														"name": "AdminGetDiscountsParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 17073,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
																			"qualifiedName": "AdminDiscountsListRes"
																		},
																		"name": "AdminDiscountsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_discounts"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 17074,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 17075,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						17075
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 17076,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17081,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17080,
																	"name": "discounts",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/discount.d.ts",
																				"qualifiedName": "Discount"
																			},
																			"name": "Discount",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 17077,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17078,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17079,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17081,
																		17080,
																		17077,
																		17078,
																		17079
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17082,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17087,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17086,
																	"name": "discounts",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/discount.d.ts",
																				"qualifiedName": "Discount"
																			},
																			"name": "Discount",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 17083,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17084,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17085,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17087,
																		17086,
																		17083,
																		17084,
																		17085
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17088,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17093,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17092,
																	"name": "discounts",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/discount.d.ts",
																				"qualifiedName": "Discount"
																			},
																			"name": "Discount",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 17089,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17090,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17091,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17093,
																		17092,
																		17089,
																		17090,
																		17091
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17094,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17099,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17098,
																	"name": "discounts",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/discount.d.ts",
																				"qualifiedName": "Discount"
																			},
																			"name": "Discount",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 17095,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17096,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17097,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17099,
																		17098,
																		17095,
																		17096,
																		17097
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 17100,
									"name": "useAdminDiscount",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17101,
											"name": "useAdminDiscount",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a discount."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDiscount } from \"medusa-react\"\n\ntype Props = {\n  discountId: string\n}\n\nconst Discount = ({ discountId }: Props) => {\n  const { discount, isLoading } = useAdminDiscount(\n    discountId\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {discount && <span>{discount.code}</span>}\n    </div>\n  )\n}\n\nexport default Discount\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17102,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The discount's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17103,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Configurations to apply on the retrieved discount."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/get-discount.d.ts",
															"qualifiedName": "AdminGetDiscountParams"
														},
														"name": "AdminGetDiscountParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 17104,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
																			"qualifiedName": "AdminDiscountsRes"
																		},
																		"name": "AdminDiscountsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_discounts"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 17105,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17107,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17106,
																	"name": "discount",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/discount.d.ts",
																			"qualifiedName": "Discount"
																		},
																		"name": "Discount",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17107,
																		17106
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17108,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17110,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17109,
																	"name": "discount",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/discount.d.ts",
																			"qualifiedName": "Discount"
																		},
																		"name": "Discount",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17110,
																		17109
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17111,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17113,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17112,
																	"name": "discount",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/discount.d.ts",
																			"qualifiedName": "Discount"
																		},
																		"name": "Discount",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17113,
																		17112
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17114,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17116,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17115,
																	"name": "discount",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/discount.d.ts",
																			"qualifiedName": "Discount"
																		},
																		"name": "Discount",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17116,
																		17115
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 17117,
									"name": "useAdminGetDiscountByCode",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17118,
											"name": "useAdminGetDiscountByCode",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook adds a batch of resources to a discount condition. The type of resource depends on the type of discount condition. For example, if the discount condition's type is "
													},
													{
														"kind": "code",
														"text": "`products`"
													},
													{
														"kind": "text",
														"text": ",\nthe resources being added should be products."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminGetDiscountByCode } from \"medusa-react\"\n\ntype Props = {\n  discountCode: string\n}\n\nconst Discount = ({ discountCode }: Props) => {\n  const { discount, isLoading } = useAdminGetDiscountByCode(\n    discountCode\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {discount && <span>{discount.code}</span>}\n    </div>\n  )\n}\n\nexport default Discount\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17119,
													"name": "code",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The code of the discount."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17120,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
																			"qualifiedName": "AdminDiscountsRes"
																		},
																		"name": "AdminDiscountsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_discounts"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 17121,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17123,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17122,
																	"name": "discount",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/discount.d.ts",
																			"qualifiedName": "Discount"
																		},
																		"name": "Discount",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17123,
																		17122
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17124,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17126,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17125,
																	"name": "discount",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/discount.d.ts",
																			"qualifiedName": "Discount"
																		},
																		"name": "Discount",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17126,
																		17125
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17127,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17129,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17128,
																	"name": "discount",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/discount.d.ts",
																			"qualifiedName": "Discount"
																		},
																		"name": "Discount",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17129,
																		17128
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17130,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17132,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17131,
																	"name": "discount",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/discount.d.ts",
																			"qualifiedName": "Discount"
																		},
																		"name": "Discount",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17132,
																		17131
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 17133,
									"name": "useAdminGetDiscountCondition",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17134,
											"name": "useAdminGetDiscountCondition",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retries a Discount Condition's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminGetDiscountCondition } from \"medusa-react\"\n\ntype Props = {\n  discountId: string\n  discountConditionId: string\n}\n\nconst DiscountCondition = ({\n  discountId,\n  discountConditionId\n}: Props) => {\n  const {\n    discount_condition,\n    isLoading\n  } = useAdminGetDiscountCondition(\n    discountId,\n    discountConditionId\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {discount_condition && (\n        <span>{discount_condition.type}</span>\n      )}\n    </div>\n  )\n}\n\nexport default DiscountCondition\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17135,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The ID of the discount the condition belongs to."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17136,
													"name": "conditionId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The discount condition's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17137,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Configurations to apply on the retrieved discount condition."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/get-condition.d.ts",
															"qualifiedName": "AdminGetDiscountsDiscountConditionsConditionParams"
														},
														"name": "AdminGetDiscountsDiscountConditionsConditionParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 17138,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
																			"qualifiedName": "AdminDiscountConditionsRes"
																		},
																		"name": "AdminDiscountConditionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "typeOperator",
																"operator": "readonly",
																"target": {
																	"type": "tuple",
																	"elements": [
																		{
																			"type": "literal",
																			"value": "admin_discounts"
																		},
																		{
																			"type": "literal",
																			"value": "detail"
																		},
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "literal",
																			"value": "condition"
																		},
																		{
																			"type": "intrinsic",
																			"name": "any"
																		}
																	]
																}
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 17139,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17141,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17140,
																	"name": "discount_condition",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/discount-condition.d.ts",
																			"qualifiedName": "DiscountCondition"
																		},
																		"name": "DiscountCondition",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17141,
																		17140
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17142,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17144,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17143,
																	"name": "discount_condition",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/discount-condition.d.ts",
																			"qualifiedName": "DiscountCondition"
																		},
																		"name": "DiscountCondition",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17144,
																		17143
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17145,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17147,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17146,
																	"name": "discount_condition",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/discount-condition.d.ts",
																			"qualifiedName": "DiscountCondition"
																		},
																		"name": "DiscountCondition",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17147,
																		17146
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17148,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17150,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17149,
																	"name": "discount_condition",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/discount-condition.d.ts",
																			"qualifiedName": "DiscountCondition"
																		},
																		"name": "DiscountCondition",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17150,
																		17149
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										17151,
										17157,
										17162,
										17165,
										17169,
										17173,
										17177,
										17181,
										17185,
										17189,
										17193,
										17198,
										17070,
										17100,
										17117,
										17133
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										17070,
										17100,
										17117,
										17133
									]
								},
								{
									"title": "Mutations",
									"children": [
										17151,
										17157,
										17162,
										17165,
										17169,
										17173,
										17177,
										17181,
										17185,
										17189,
										17193,
										17198
									]
								}
							]
						},
						{
							"id": 16400,
							"name": "Draft Orders",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Draft Order API Routes](https://docs.medusajs.com/api/admin#draft-orders).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 16619
									},
									{
										"kind": "text",
										"text": ".\n\nA draft order is an order created manually by the admin. It allows admins to create orders without direct involvement from the customer.\n\nRelated Guide: [How to manage draft orders](https://docs.medusajs.com/modules/orders/admin/manage-draft-orders)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 17249,
									"name": "useAdminCreateDraftOrder",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17250,
											"name": "useAdminCreateDraftOrder",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a Draft Order. A draft order is not transformed into an order until payment is captured."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateDraftOrder } from \"medusa-react\"\n\ntype DraftOrderData = {\n  email: string\n  region_id: string\n  items: {\n    quantity: number,\n    variant_id: string\n  }[]\n  shipping_methods: {\n    option_id: string\n    price: number\n  }[]\n}\n\nconst CreateDraftOrder = () => {\n  const createDraftOrder = useAdminCreateDraftOrder()\n  // ...\n\n  const handleCreate = (data: DraftOrderData) => {\n    createDraftOrder.mutate(data, {\n      onSuccess: ({ draft_order }) => {\n        console.log(draft_order.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CreateDraftOrder\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17251,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/index.d.ts",
																			"qualifiedName": "AdminDraftOrdersRes"
																		},
																		"name": "AdminDraftOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/create-draft-order.d.ts",
																	"qualifiedName": "AdminPostDraftOrdersReq"
																},
																"name": "AdminPostDraftOrdersReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/index.d.ts",
																	"qualifiedName": "AdminDraftOrdersRes"
																},
																"name": "AdminDraftOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/create-draft-order.d.ts",
															"qualifiedName": "AdminPostDraftOrdersReq"
														},
														"name": "AdminPostDraftOrdersReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17252,
									"name": "useAdminUpdateDraftOrder",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17253,
											"name": "useAdminUpdateDraftOrder",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a Draft Order's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateDraftOrder } from \"medusa-react\"\n\ntype Props = {\n  draftOrderId: string\n}\n\nconst DraftOrder = ({ draftOrderId }: Props) => {\n  const updateDraftOrder = useAdminUpdateDraftOrder(\n    draftOrderId\n  )\n  // ...\n\n  const handleUpdate = (email: string) => {\n    updateDraftOrder.mutate({\n      email,\n    }, {\n      onSuccess: ({ draft_order }) => {\n        console.log(draft_order.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default DraftOrder\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17254,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The draft order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17255,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/index.d.ts",
																			"qualifiedName": "AdminDraftOrdersRes"
																		},
																		"name": "AdminDraftOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/update-draft-order.d.ts",
																	"qualifiedName": "AdminPostDraftOrdersDraftOrderReq"
																},
																"name": "AdminPostDraftOrdersDraftOrderReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/index.d.ts",
																	"qualifiedName": "AdminDraftOrdersRes"
																},
																"name": "AdminDraftOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/update-draft-order.d.ts",
															"qualifiedName": "AdminPostDraftOrdersDraftOrderReq"
														},
														"name": "AdminPostDraftOrdersDraftOrderReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17256,
									"name": "useAdminDeleteDraftOrder",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17257,
											"name": "useAdminDeleteDraftOrder",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a Draft Order."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteDraftOrder } from \"medusa-react\"\n\ntype Props = {\n  draftOrderId: string\n}\n\nconst DraftOrder = ({ draftOrderId }: Props) => {\n  const deleteDraftOrder = useAdminDeleteDraftOrder(\n    draftOrderId\n  )\n  // ...\n\n  const handleDelete = () => {\n    deleteDraftOrder.mutate(void 0, {\n      onSuccess: ({ id, object, deleted }) => {\n        console.log(id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default DraftOrder\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17258,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The draft order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17259,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																			"qualifiedName": "DeleteResponse"
																		},
																		"name": "DeleteResponse",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																	"qualifiedName": "DeleteResponse"
																},
																"name": "DeleteResponse",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17260,
									"name": "useAdminDraftOrderRegisterPayment",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17261,
											"name": "useAdminDraftOrderRegisterPayment",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook capture the draft order's payment. This will also set the draft order's status to "
													},
													{
														"kind": "code",
														"text": "`completed`"
													},
													{
														"kind": "text",
														"text": " and create an order from the draft order. The payment is captured through Medusa's system payment,\nwhich is manual payment that isn't integrated with any third-party payment provider. It is assumed that the payment capturing is handled manually by the admin."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDraftOrderRegisterPayment } from \"medusa-react\"\n\ntype Props = {\n  draftOrderId: string\n}\n\nconst DraftOrder = ({ draftOrderId }: Props) => {\n  const registerPayment = useAdminDraftOrderRegisterPayment(\n    draftOrderId\n  )\n  // ...\n\n  const handlePayment = () => {\n    registerPayment.mutate(void 0, {\n      onSuccess: ({ order }) => {\n        console.log(order.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default DraftOrder\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17262,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The draft order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17263,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/index.d.ts",
																			"qualifiedName": "AdminPostDraftOrdersDraftOrderRegisterPaymentRes"
																		},
																		"name": "AdminPostDraftOrdersDraftOrderRegisterPaymentRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/index.d.ts",
																	"qualifiedName": "AdminPostDraftOrdersDraftOrderRegisterPaymentRes"
																},
																"name": "AdminPostDraftOrdersDraftOrderRegisterPaymentRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17264,
									"name": "useAdminDraftOrderAddLineItem",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17265,
											"name": "useAdminDraftOrderAddLineItem",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a Line Item in the Draft Order."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDraftOrderAddLineItem } from \"medusa-react\"\n\ntype Props = {\n  draftOrderId: string\n}\n\nconst DraftOrder = ({ draftOrderId }: Props) => {\n  const addLineItem = useAdminDraftOrderAddLineItem(\n    draftOrderId\n  )\n  // ...\n\n  const handleAdd = (quantity: number) => {\n    addLineItem.mutate({\n      quantity,\n    }, {\n      onSuccess: ({ draft_order }) => {\n        console.log(draft_order.cart)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default DraftOrder\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17266,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The draft order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17267,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/index.d.ts",
																			"qualifiedName": "AdminDraftOrdersRes"
																		},
																		"name": "AdminDraftOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/create-line-item.d.ts",
																	"qualifiedName": "AdminPostDraftOrdersDraftOrderLineItemsReq"
																},
																"name": "AdminPostDraftOrdersDraftOrderLineItemsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/index.d.ts",
																	"qualifiedName": "AdminDraftOrdersRes"
																},
																"name": "AdminDraftOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/create-line-item.d.ts",
															"qualifiedName": "AdminPostDraftOrdersDraftOrderLineItemsReq"
														},
														"name": "AdminPostDraftOrdersDraftOrderLineItemsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17268,
									"name": "useAdminDraftOrderRemoveLineItem",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17269,
											"name": "useAdminDraftOrderRemoveLineItem",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a Line Item from a Draft Order."
													}
												],
												"blockTags": [
													{
														"tag": "@typeParamDefinition",
														"content": [
															{
																"kind": "text",
																"text": "string - The ID of the line item to remove."
															}
														]
													},
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDraftOrderRemoveLineItem } from \"medusa-react\"\n\ntype Props = {\n  draftOrderId: string\n}\n\nconst DraftOrder = ({ draftOrderId }: Props) => {\n  const deleteLineItem = useAdminDraftOrderRemoveLineItem(\n    draftOrderId\n  )\n  // ...\n\n  const handleDelete = (itemId: string) => {\n    deleteLineItem.mutate(itemId, {\n      onSuccess: ({ draft_order }) => {\n        console.log(draft_order.cart)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default DraftOrder\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17270,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The draft order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17271,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/index.d.ts",
																			"qualifiedName": "AdminDraftOrdersRes"
																		},
																		"name": "AdminDraftOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/index.d.ts",
																	"qualifiedName": "AdminDraftOrdersRes"
																},
																"name": "AdminDraftOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17275,
									"name": "useAdminDraftOrderUpdateLineItem",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17276,
											"name": "useAdminDraftOrderUpdateLineItem",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a Line Item in a Draft Order."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDraftOrderUpdateLineItem } from \"medusa-react\"\n\ntype Props = {\n  draftOrderId: string\n}\n\nconst DraftOrder = ({ draftOrderId }: Props) => {\n  const updateLineItem = useAdminDraftOrderUpdateLineItem(\n    draftOrderId\n  )\n  // ...\n\n  const handleUpdate = (\n    itemId: string,\n    quantity: number\n  ) => {\n    updateLineItem.mutate({\n      item_id: itemId,\n      quantity,\n    })\n  }\n\n  // ...\n}\n\nexport default DraftOrder\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17277,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The draft order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17278,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/index.d.ts",
																			"qualifiedName": "AdminDraftOrdersRes"
																		},
																		"name": "AdminDraftOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": 17272,
																"name": "AdminDraftOrderUpdateLineItemReq",
																"package": "medusa-react"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/index.d.ts",
																	"qualifiedName": "AdminDraftOrdersRes"
																},
																"name": "AdminDraftOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": 17272,
														"name": "AdminDraftOrderUpdateLineItemReq",
														"package": "medusa-react"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17203,
									"name": "useAdminDraftOrders",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17204,
											"name": "useAdminDraftOrders",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves an list of Draft Orders. The draft orders can be filtered by parameters such as "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": ". The draft orders can also paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list draft orders:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminDraftOrders } from \"medusa-react\"\n\nconst DraftOrders = () => {\n  const { draft_orders, isLoading } = useAdminDraftOrders()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {draft_orders && !draft_orders.length && (\n        <span>No Draft Orders</span>\n      )}\n      {draft_orders && draft_orders.length > 0 && (\n        <ul>\n          {draft_orders.map((order) => (\n            <li key={order.id}>{order.display_id}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default DraftOrders\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`50`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminDraftOrders } from \"medusa-react\"\n\nconst DraftOrders = () => {\n  const { \n    draft_orders, \n    limit,\n    offset,\n    isLoading\n  } = useAdminDraftOrders({\n    limit: 20,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {draft_orders && !draft_orders.length && (\n        <span>No Draft Orders</span>\n      )}\n      {draft_orders && draft_orders.length > 0 && (\n        <ul>\n          {draft_orders.map((order) => (\n            <li key={order.id}>{order.display_id}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default DraftOrders\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17205,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations to apply on the retrieved draft orders."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/list-draft-orders.d.ts",
															"qualifiedName": "AdminGetDraftOrdersParams"
														},
														"name": "AdminGetDraftOrdersParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 17206,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/index.d.ts",
																			"qualifiedName": "AdminDraftOrdersListRes"
																		},
																		"name": "AdminDraftOrdersListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_draft_orders"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 17207,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 17208,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						17208
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 17209,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17214,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17213,
																	"name": "draft_orders",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/draft-order.d.ts",
																				"qualifiedName": "DraftOrder"
																			},
																			"name": "DraftOrder",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 17210,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17211,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17212,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17214,
																		17213,
																		17210,
																		17211,
																		17212
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17215,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17220,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17219,
																	"name": "draft_orders",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/draft-order.d.ts",
																				"qualifiedName": "DraftOrder"
																			},
																			"name": "DraftOrder",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 17216,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17217,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17218,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17220,
																		17219,
																		17216,
																		17217,
																		17218
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17221,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17226,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17225,
																	"name": "draft_orders",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/draft-order.d.ts",
																				"qualifiedName": "DraftOrder"
																			},
																			"name": "DraftOrder",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 17222,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17223,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17224,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17226,
																		17225,
																		17222,
																		17223,
																		17224
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17227,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17232,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17231,
																	"name": "draft_orders",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/draft-order.d.ts",
																				"qualifiedName": "DraftOrder"
																			},
																			"name": "DraftOrder",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 17228,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17229,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17230,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17232,
																		17231,
																		17228,
																		17229,
																		17230
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 17233,
									"name": "useAdminDraftOrder",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17234,
											"name": "useAdminDraftOrder",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a Draft Order's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDraftOrder } from \"medusa-react\"\n\ntype Props = {\n  draftOrderId: string\n}\n\nconst DraftOrder = ({ draftOrderId }: Props) => {\n  const { \n    draft_order, \n    isLoading, \n  } = useAdminDraftOrder(draftOrderId)\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {draft_order && <span>{draft_order.display_id}</span>}\n      \n    </div>\n  )\n}\n\nexport default DraftOrder\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17235,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The draft order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17236,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/index.d.ts",
																			"qualifiedName": "AdminDraftOrdersRes"
																		},
																		"name": "AdminDraftOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_draft_orders"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 17237,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17239,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17238,
																	"name": "draft_order",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/draft-order.d.ts",
																			"qualifiedName": "DraftOrder"
																		},
																		"name": "DraftOrder",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17239,
																		17238
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17240,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17242,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17241,
																	"name": "draft_order",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/draft-order.d.ts",
																			"qualifiedName": "DraftOrder"
																		},
																		"name": "DraftOrder",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17242,
																		17241
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17243,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17245,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17244,
																	"name": "draft_order",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/draft-order.d.ts",
																			"qualifiedName": "DraftOrder"
																		},
																		"name": "DraftOrder",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17245,
																		17244
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17246,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17248,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17247,
																	"name": "draft_order",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/draft-order.d.ts",
																			"qualifiedName": "DraftOrder"
																		},
																		"name": "DraftOrder",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17248,
																		17247
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										17249,
										17252,
										17256,
										17260,
										17264,
										17268,
										17275,
										17203,
										17233
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										17203,
										17233
									]
								},
								{
									"title": "Mutations",
									"children": [
										17249,
										17252,
										17256,
										17260,
										17264,
										17268,
										17275
									]
								}
							]
						},
						{
							"id": 16401,
							"name": "Gift Cards",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Gift Card API Routes](https://docs.medusajs.com/api/admin#gift-cards).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 16619
									},
									{
										"kind": "text",
										"text": ".\n\nAdmins can create gift cards and send them directly to customers, specifying options like their balance, region, and more.\nThese gift cards are different than the saleable gift cards in a store, which are created and managed through "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "useAdminCreateProduct",
										"target": 18209
									},
									{
										"kind": "text",
										"text": ".\n\nRelated Guide: [How to manage gift cards](https://docs.medusajs.com/modules/gift-cards/admin/manage-gift-cards#manage-custom-gift-cards)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 17326,
									"name": "useAdminCreateGiftCard",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17327,
											"name": "useAdminCreateGiftCard",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a gift card that can redeemed by its unique code. The Gift Card is only valid within one region."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateGiftCard } from \"medusa-react\"\n\nconst CreateCustomGiftCards = () => {\n  const createGiftCard = useAdminCreateGiftCard()\n  // ...\n  \n  const handleCreate = (\n    regionId: string, \n    value: number\n  ) => {\n    createGiftCard.mutate({\n      region_id: regionId,\n      value,\n    }, {\n      onSuccess: ({ gift_card }) => {\n        console.log(gift_card.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CreateCustomGiftCards\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17328,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/gift-cards/index.d.ts",
																			"qualifiedName": "AdminGiftCardsRes"
																		},
																		"name": "AdminGiftCardsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/gift-cards/create-gift-card.d.ts",
																	"qualifiedName": "AdminPostGiftCardsReq"
																},
																"name": "AdminPostGiftCardsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/gift-cards/index.d.ts",
																	"qualifiedName": "AdminGiftCardsRes"
																},
																"name": "AdminGiftCardsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/gift-cards/create-gift-card.d.ts",
															"qualifiedName": "AdminPostGiftCardsReq"
														},
														"name": "AdminPostGiftCardsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17329,
									"name": "useAdminUpdateGiftCard",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17330,
											"name": "useAdminUpdateGiftCard",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a gift card's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateGiftCard } from \"medusa-react\"\n\ntype Props = {\n  customGiftCardId: string\n}\n\nconst CustomGiftCard = ({ customGiftCardId }: Props) => {\n  const updateGiftCard = useAdminUpdateGiftCard(\n    customGiftCardId\n  )\n  // ...\n  \n  const handleUpdate = (regionId: string) => {\n    updateGiftCard.mutate({\n      region_id: regionId,\n    }, {\n      onSuccess: ({ gift_card }) => {\n        console.log(gift_card.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CustomGiftCard\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17331,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The gift card's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17332,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/gift-cards/index.d.ts",
																			"qualifiedName": "AdminGiftCardsRes"
																		},
																		"name": "AdminGiftCardsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/gift-cards/update-gift-card.d.ts",
																	"qualifiedName": "AdminPostGiftCardsGiftCardReq"
																},
																"name": "AdminPostGiftCardsGiftCardReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/gift-cards/index.d.ts",
																	"qualifiedName": "AdminGiftCardsRes"
																},
																"name": "AdminGiftCardsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/gift-cards/update-gift-card.d.ts",
															"qualifiedName": "AdminPostGiftCardsGiftCardReq"
														},
														"name": "AdminPostGiftCardsGiftCardReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17333,
									"name": "useAdminDeleteGiftCard",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17334,
											"name": "useAdminDeleteGiftCard",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a gift card. Once deleted, it can't be used by customers."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteGiftCard } from \"medusa-react\"\n\ntype Props = {\n  customGiftCardId: string\n}\n\nconst CustomGiftCard = ({ customGiftCardId }: Props) => {\n  const deleteGiftCard = useAdminDeleteGiftCard(\n    customGiftCardId\n  )\n  // ...\n  \n  const handleDelete = () => {\n    deleteGiftCard.mutate(void 0, {\n      onSuccess: ({ id, object, deleted}) => {\n        console.log(id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CustomGiftCard\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17335,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The gift card's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17336,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																			"qualifiedName": "DeleteResponse"
																		},
																		"name": "DeleteResponse",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																	"qualifiedName": "DeleteResponse"
																},
																"name": "DeleteResponse",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17280,
									"name": "useAdminGiftCards",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17281,
											"name": "useAdminGiftCards",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of gift cards. The gift cards can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`q`"
													},
													{
														"kind": "text",
														"text": " passed in the "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " \nparameter. The gift cards can also paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list gift cards:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminGiftCards } from \"medusa-react\"\n\nconst CustomGiftCards = () => {\n  const { gift_cards, isLoading } = useAdminGiftCards()\n  \n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {gift_cards && !gift_cards.length && (\n        <span>No custom gift cards...</span>\n      )}\n      {gift_cards && gift_cards.length > 0 && (\n        <ul>\n          {gift_cards.map((giftCard) => (\n            <li key={giftCard.id}>{giftCard.code}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default CustomGiftCards\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`50`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminGiftCards } from \"medusa-react\"\n\nconst CustomGiftCards = () => {\n  const { \n    gift_cards, \n    limit,\n    offset,\n    isLoading\n  } = useAdminGiftCards({\n    limit: 20,\n    offset: 0\n  })\n  \n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {gift_cards && !gift_cards.length && (\n        <span>No custom gift cards...</span>\n      )}\n      {gift_cards && gift_cards.length > 0 && (\n        <ul>\n          {gift_cards.map((giftCard) => (\n            <li key={giftCard.id}>{giftCard.code}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default CustomGiftCards\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17282,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations to apply on the retrieved gift cards."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/gift-cards/list-gift-cards.d.ts",
															"qualifiedName": "AdminGetGiftCardsParams"
														},
														"name": "AdminGetGiftCardsParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 17283,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/gift-cards/index.d.ts",
																			"qualifiedName": "AdminGiftCardsListRes"
																		},
																		"name": "AdminGiftCardsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_gift_cards"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 17284,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 17285,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						17285
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 17286,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17291,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17290,
																	"name": "gift_cards",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/gift-card.d.ts",
																				"qualifiedName": "GiftCard"
																			},
																			"name": "GiftCard",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 17287,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17288,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17289,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17291,
																		17290,
																		17287,
																		17288,
																		17289
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17292,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17297,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17296,
																	"name": "gift_cards",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/gift-card.d.ts",
																				"qualifiedName": "GiftCard"
																			},
																			"name": "GiftCard",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 17293,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17294,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17295,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17297,
																		17296,
																		17293,
																		17294,
																		17295
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17298,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17303,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17302,
																	"name": "gift_cards",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/gift-card.d.ts",
																				"qualifiedName": "GiftCard"
																			},
																			"name": "GiftCard",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 17299,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17300,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17301,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17303,
																		17302,
																		17299,
																		17300,
																		17301
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17304,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17309,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17308,
																	"name": "gift_cards",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/gift-card.d.ts",
																				"qualifiedName": "GiftCard"
																			},
																			"name": "GiftCard",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 17305,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17306,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17307,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17309,
																		17308,
																		17305,
																		17306,
																		17307
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 17310,
									"name": "useAdminGiftCard",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17311,
											"name": "useAdminGiftCard",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a gift card's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminGiftCard } from \"medusa-react\"\n\ntype Props = {\n  giftCardId: string\n}\n\nconst CustomGiftCard = ({ giftCardId }: Props) => {\n  const { gift_card, isLoading } = useAdminGiftCard(giftCardId)\n  \n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {gift_card && <span>{gift_card.code}</span>}\n    </div>\n  )\n}\n\nexport default CustomGiftCard\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17312,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The gift card's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17313,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/gift-cards/index.d.ts",
																			"qualifiedName": "AdminGiftCardsRes"
																		},
																		"name": "AdminGiftCardsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_gift_cards"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 17314,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17316,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17315,
																	"name": "gift_card",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/gift-card.d.ts",
																			"qualifiedName": "GiftCard"
																		},
																		"name": "GiftCard",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17316,
																		17315
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17317,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17319,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17318,
																	"name": "gift_card",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/gift-card.d.ts",
																			"qualifiedName": "GiftCard"
																		},
																		"name": "GiftCard",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17319,
																		17318
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17320,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17322,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17321,
																	"name": "gift_card",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/gift-card.d.ts",
																			"qualifiedName": "GiftCard"
																		},
																		"name": "GiftCard",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17322,
																		17321
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17323,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17325,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17324,
																	"name": "gift_card",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/gift-card.d.ts",
																			"qualifiedName": "GiftCard"
																		},
																		"name": "GiftCard",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17325,
																		17324
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										17326,
										17329,
										17333,
										17280,
										17310
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										17280,
										17310
									]
								},
								{
									"title": "Mutations",
									"children": [
										17326,
										17329,
										17333
									]
								}
							]
						},
						{
							"id": 16402,
							"name": "Inventory Items",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Inventory Item API Routes](https://docs.medusajs.com/api/admin#inventory-items). \nTo use these hooks, make sure to install the\n[@medusajs/inventory](https://docs.medusajs.com/modules/multiwarehouse/install-modules#inventory-module) module in your Medusa backend.\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 16619
									},
									{
										"kind": "text",
										"text": ".\n\nInventory items, provided by the [Inventory Module](https://docs.medusajs.com/modules/multiwarehouse/inventory-module), can be \nused to manage the inventory of saleable items in your store.\n\nRelated Guide: [How to manage inventory items](https://docs.medusajs.com/modules/multiwarehouse/admin/manage-inventory-items)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 17414,
									"name": "useAdminCreateInventoryItem",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17415,
											"name": "useAdminCreateInventoryItem",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates an Inventory Item for a product variant."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateInventoryItem } from \"medusa-react\"\n\nconst CreateInventoryItem = () => {\n  const createInventoryItem = useAdminCreateInventoryItem()\n  // ...\n\n  const handleCreate = (variantId: string) => {\n    createInventoryItem.mutate({\n      variant_id: variantId,\n    }, {\n      onSuccess: ({ inventory_item }) => {\n        console.log(inventory_item.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CreateInventoryItem\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17416,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
																			"qualifiedName": "AdminInventoryItemsRes"
																		},
																		"name": "AdminInventoryItemsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/create-inventory-item.d.ts",
																	"qualifiedName": "AdminPostInventoryItemsReq"
																},
																"name": "AdminPostInventoryItemsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
																	"qualifiedName": "AdminInventoryItemsRes"
																},
																"name": "AdminInventoryItemsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/create-inventory-item.d.ts",
															"qualifiedName": "AdminPostInventoryItemsReq"
														},
														"name": "AdminPostInventoryItemsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17417,
									"name": "useAdminUpdateInventoryItem",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17418,
											"name": "useAdminUpdateInventoryItem",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates an Inventory Item's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateInventoryItem } from \"medusa-react\"\n\ntype Props = {\n  inventoryItemId: string\n}\n\nconst InventoryItem = ({ inventoryItemId }: Props) => {\n  const updateInventoryItem = useAdminUpdateInventoryItem(\n    inventoryItemId\n  )\n  // ...\n\n  const handleUpdate = (origin_country: string) => {\n    updateInventoryItem.mutate({\n      origin_country,\n    }, {\n      onSuccess: ({ inventory_item }) => {\n        console.log(inventory_item.origin_country)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default InventoryItem\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17419,
													"name": "inventoryItemId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The inventory item's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17420,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
																			"qualifiedName": "AdminInventoryItemsRes"
																		},
																		"name": "AdminInventoryItemsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/update-inventory-item.d.ts",
																	"qualifiedName": "AdminPostInventoryItemsInventoryItemReq"
																},
																"name": "AdminPostInventoryItemsInventoryItemReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
																	"qualifiedName": "AdminInventoryItemsRes"
																},
																"name": "AdminInventoryItemsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/update-inventory-item.d.ts",
															"qualifiedName": "AdminPostInventoryItemsInventoryItemReq"
														},
														"name": "AdminPostInventoryItemsInventoryItemReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17421,
									"name": "useAdminDeleteInventoryItem",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17422,
											"name": "useAdminDeleteInventoryItem",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes an Inventory Item. This does not delete the associated product variant."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteInventoryItem } from \"medusa-react\"\n\ntype Props = {\n  inventoryItemId: string\n}\n\nconst InventoryItem = ({ inventoryItemId }: Props) => {\n  const deleteInventoryItem = useAdminDeleteInventoryItem(\n    inventoryItemId\n  )\n  // ...\n\n  const handleDelete = () => {\n    deleteInventoryItem.mutate()\n  }\n\n  // ...\n}\n\nexport default InventoryItem\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17423,
													"name": "inventoryItemId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The inventory item's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17424,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																			"qualifiedName": "DeleteResponse"
																		},
																		"name": "DeleteResponse",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																	"qualifiedName": "DeleteResponse"
																},
																"name": "DeleteResponse",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17428,
									"name": "useAdminUpdateLocationLevel",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17429,
											"name": "useAdminUpdateLocationLevel",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a location level's details for a given inventory item."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateLocationLevel } from \"medusa-react\"\n\ntype Props = {\n  inventoryItemId: string\n}\n\nconst InventoryItem = ({ inventoryItemId }: Props) => {\n  const updateLocationLevel = useAdminUpdateLocationLevel(\n    inventoryItemId\n  )\n  // ...\n\n  const handleUpdate = (\n    stockLocationId: string,\n    stockedQuantity: number\n  ) => {\n    updateLocationLevel.mutate({\n      stockLocationId,\n      stocked_quantity: stockedQuantity,\n    }, {\n      onSuccess: ({ inventory_item }) => {\n        console.log(inventory_item.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default InventoryItem\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17430,
													"name": "inventoryItemId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The inventory item's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17431,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
																			"qualifiedName": "AdminInventoryItemsRes"
																		},
																		"name": "AdminInventoryItemsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": 17425,
																"name": "AdminUpdateLocationLevelReq",
																"package": "medusa-react"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
																	"qualifiedName": "AdminInventoryItemsRes"
																},
																"name": "AdminInventoryItemsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": 17425,
														"name": "AdminUpdateLocationLevelReq",
														"package": "medusa-react"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17432,
									"name": "useAdminDeleteLocationLevel",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17433,
											"name": "useAdminDeleteLocationLevel",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a location level of an Inventory Item."
													}
												],
												"blockTags": [
													{
														"tag": "@typeParamDefinition",
														"content": [
															{
																"kind": "text",
																"text": "string - The ID of the location level to delete."
															}
														]
													},
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteLocationLevel } from \"medusa-react\"\n\ntype Props = {\n  inventoryItemId: string\n}\n\nconst InventoryItem = ({ inventoryItemId }: Props) => {\n  const deleteLocationLevel = useAdminDeleteLocationLevel(\n    inventoryItemId\n  )\n  // ...\n\n  const handleDelete = (\n    locationId: string\n  ) => {\n    deleteLocationLevel.mutate(locationId)\n  }\n\n  // ...\n}\n\nexport default InventoryItem\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17434,
													"name": "inventoryItemId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The inventory item's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17435,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
																			"qualifiedName": "AdminInventoryItemsRes"
																		},
																		"name": "AdminInventoryItemsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
																	"qualifiedName": "AdminInventoryItemsRes"
																},
																"name": "AdminInventoryItemsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17436,
									"name": "useAdminCreateLocationLevel",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17437,
											"name": "useAdminCreateLocationLevel",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a Location Level for a given Inventory Item."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateLocationLevel } from \"medusa-react\"\n\ntype Props = {\n  inventoryItemId: string\n}\n\nconst InventoryItem = ({ inventoryItemId }: Props) => {\n  const createLocationLevel = useAdminCreateLocationLevel(\n    inventoryItemId\n  )\n  // ...\n\n  const handleCreateLocationLevel = (\n    locationId: string,\n    stockedQuantity: number\n  ) => {\n    createLocationLevel.mutate({\n      location_id: locationId,\n      stocked_quantity: stockedQuantity,\n    }, {\n      onSuccess: ({ inventory_item }) => {\n        console.log(inventory_item.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default InventoryItem\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17438,
													"name": "inventoryItemId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The inventory item's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17439,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
																			"qualifiedName": "AdminInventoryItemsRes"
																		},
																		"name": "AdminInventoryItemsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/create-location-level.d.ts",
																	"qualifiedName": "AdminPostInventoryItemsItemLocationLevelsReq"
																},
																"name": "AdminPostInventoryItemsItemLocationLevelsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
																	"qualifiedName": "AdminInventoryItemsRes"
																},
																"name": "AdminInventoryItemsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/create-location-level.d.ts",
															"qualifiedName": "AdminPostInventoryItemsItemLocationLevelsReq"
														},
														"name": "AdminPostInventoryItemsItemLocationLevelsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17338,
									"name": "useAdminInventoryItems",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17339,
											"name": "useAdminInventoryItems",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of inventory items. The inventory items can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`q`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`location_id`"
													},
													{
														"kind": "text",
														"text": " passed in the "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " parameter.\nThe inventory items can also be paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list inventory items:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminInventoryItems } from \"medusa-react\"\n\nfunction InventoryItems() {\n  const { \n    inventory_items,\n    isLoading \n  } = useAdminInventoryItems()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {inventory_items && !inventory_items.length && (\n        <span>No Items</span>\n      )}\n      {inventory_items && inventory_items.length > 0 && (\n        <ul>\n          {inventory_items.map(\n            (item) => (\n              <li key={item.id}>{item.id}</li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default InventoryItems\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`20`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminInventoryItems } from \"medusa-react\"\n\nfunction InventoryItems() {\n  const { \n    inventory_items,\n    limit,\n    offset,\n    isLoading\n  } = useAdminInventoryItems({\n    limit: 10,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {inventory_items && !inventory_items.length && (\n        <span>No Items</span>\n      )}\n      {inventory_items && inventory_items.length > 0 && (\n        <ul>\n          {inventory_items.map(\n            (item) => (\n              <li key={item.id}>{item.id}</li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default InventoryItems\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17340,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations applied on the retrieved inventory items."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/list-inventory-items.d.ts",
															"qualifiedName": "AdminGetInventoryItemsParams"
														},
														"name": "AdminGetInventoryItemsParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 17341,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
																			"qualifiedName": "AdminInventoryItemsListWithVariantsAndLocationLevelsRes"
																		},
																		"name": "AdminInventoryItemsListWithVariantsAndLocationLevelsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_inventory_items"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 17342,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 17343,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						17343
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 17344,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17349,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17348,
																	"name": "inventory_items",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
																				"qualifiedName": "DecoratedInventoryItemDTO"
																			},
																			"name": "DecoratedInventoryItemDTO",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 17345,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17346,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17347,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17349,
																		17348,
																		17345,
																		17346,
																		17347
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17350,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17355,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17354,
																	"name": "inventory_items",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
																				"qualifiedName": "DecoratedInventoryItemDTO"
																			},
																			"name": "DecoratedInventoryItemDTO",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 17351,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17352,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17353,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17355,
																		17354,
																		17351,
																		17352,
																		17353
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17356,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17361,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17360,
																	"name": "inventory_items",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
																				"qualifiedName": "DecoratedInventoryItemDTO"
																			},
																			"name": "DecoratedInventoryItemDTO",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 17357,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17358,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17359,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17361,
																		17360,
																		17357,
																		17358,
																		17359
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17362,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17367,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17366,
																	"name": "inventory_items",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
																				"qualifiedName": "DecoratedInventoryItemDTO"
																			},
																			"name": "DecoratedInventoryItemDTO",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 17363,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17364,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17365,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17367,
																		17366,
																		17363,
																		17364,
																		17365
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 17368,
									"name": "useAdminInventoryItem",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17369,
											"name": "useAdminInventoryItem",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves an Inventory Item's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminInventoryItem } from \"medusa-react\"\n\ntype Props = {\n  inventoryItemId: string\n}\n\nconst InventoryItem = ({ inventoryItemId }: Props) => {\n  const { \n    inventory_item,\n    isLoading\n  } = useAdminInventoryItem(inventoryItemId)\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {inventory_item && (\n        <span>{inventory_item.sku}</span>\n      )}\n    </div>\n  )\n}\n\nexport default InventoryItem\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17370,
													"name": "inventoryItemId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The inventory item's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17371,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Configurations applied on the retrieved inventory item."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/stock-locations/list-stock-locations.d.ts",
															"qualifiedName": "AdminGetStockLocationsParams"
														},
														"name": "AdminGetStockLocationsParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 17372,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
																			"qualifiedName": "AdminInventoryItemsRes"
																		},
																		"name": "AdminInventoryItemsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_inventory_items"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 17373,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17375,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17374,
																	"name": "inventory_item",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
																			"qualifiedName": "InventoryItemDTO"
																		},
																		"name": "InventoryItemDTO",
																		"package": "@medusajs/types"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17375,
																		17374
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17376,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17378,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17377,
																	"name": "inventory_item",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
																			"qualifiedName": "InventoryItemDTO"
																		},
																		"name": "InventoryItemDTO",
																		"package": "@medusajs/types"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17378,
																		17377
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17379,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17381,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17380,
																	"name": "inventory_item",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
																			"qualifiedName": "InventoryItemDTO"
																		},
																		"name": "InventoryItemDTO",
																		"package": "@medusajs/types"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17381,
																		17380
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17382,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17384,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17383,
																	"name": "inventory_item",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
																			"qualifiedName": "InventoryItemDTO"
																		},
																		"name": "InventoryItemDTO",
																		"package": "@medusajs/types"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17384,
																		17383
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 17385,
									"name": "useAdminInventoryItemLocationLevels",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17386,
											"name": "useAdminInventoryItemLocationLevels",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of inventory levels of an inventory item. The inventory levels can be filtered by fields \nsuch as "
													},
													{
														"kind": "code",
														"text": "`location_id`"
													},
													{
														"kind": "text",
														"text": " passed in the "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " parameter."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { \n  useAdminInventoryItemLocationLevels,\n} from \"medusa-react\"\n\ntype Props = {\n  inventoryItemId: string\n}\n\nconst InventoryItem = ({ inventoryItemId }: Props) => {\n  const { \n    inventory_item,\n    isLoading, \n  } = useAdminInventoryItemLocationLevels(inventoryItemId)\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {inventory_item && (\n        <ul>\n          {inventory_item.location_levels.map((level) => (\n            <span key={level.id}>{level.stocked_quantity}</span>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default InventoryItem\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17387,
													"name": "inventoryItemId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The ID of the inventory item that the location levels belong to."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17388,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters to apply on the retrieved location levels."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/list-location-levels.d.ts",
															"qualifiedName": "AdminGetInventoryItemsItemLocationLevelsParams"
														},
														"name": "AdminGetInventoryItemsItemLocationLevelsParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 17389,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
																			"qualifiedName": "AdminInventoryItemsLocationLevelsRes"
																		},
																		"name": "AdminInventoryItemsLocationLevelsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_inventory_items"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 17390,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17395,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17391,
																	"name": "inventory_item",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 17392,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 17393,
																					"name": "id",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				},
																				{
																					"id": 17394,
																					"name": "location_levels",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "array",
																						"elementType": {
																							"type": "reference",
																							"target": {
																								"sourceFileName": "../../../packages/types/src/inventory/common.ts",
																								"qualifiedName": "InventoryLevelDTO"
																							},
																							"name": "InventoryLevelDTO",
																							"package": "@medusajs/types"
																						}
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						17393,
																						17394
																					]
																				}
																			]
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17395,
																		17391
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17396,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17401,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17397,
																	"name": "inventory_item",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 17398,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 17399,
																					"name": "id",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				},
																				{
																					"id": 17400,
																					"name": "location_levels",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "array",
																						"elementType": {
																							"type": "reference",
																							"target": {
																								"sourceFileName": "../../../packages/types/src/inventory/common.ts",
																								"qualifiedName": "InventoryLevelDTO"
																							},
																							"name": "InventoryLevelDTO",
																							"package": "@medusajs/types"
																						}
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						17399,
																						17400
																					]
																				}
																			]
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17401,
																		17397
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17402,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17407,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17403,
																	"name": "inventory_item",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 17404,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 17405,
																					"name": "id",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				},
																				{
																					"id": 17406,
																					"name": "location_levels",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "array",
																						"elementType": {
																							"type": "reference",
																							"target": {
																								"sourceFileName": "../../../packages/types/src/inventory/common.ts",
																								"qualifiedName": "InventoryLevelDTO"
																							},
																							"name": "InventoryLevelDTO",
																							"package": "@medusajs/types"
																						}
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						17405,
																						17406
																					]
																				}
																			]
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17407,
																		17403
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17408,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17413,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17409,
																	"name": "inventory_item",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 17410,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 17411,
																					"name": "id",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				},
																				{
																					"id": 17412,
																					"name": "location_levels",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "array",
																						"elementType": {
																							"type": "reference",
																							"target": {
																								"sourceFileName": "../../../packages/types/src/inventory/common.ts",
																								"qualifiedName": "InventoryLevelDTO"
																							},
																							"name": "InventoryLevelDTO",
																							"package": "@medusajs/types"
																						}
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						17411,
																						17412
																					]
																				}
																			]
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17413,
																		17409
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										17414,
										17417,
										17421,
										17428,
										17432,
										17436,
										17338,
										17368,
										17385
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										17338,
										17368,
										17385
									]
								},
								{
									"title": "Mutations",
									"children": [
										17414,
										17417,
										17421,
										17428,
										17432,
										17436
									]
								}
							]
						},
						{
							"id": 16403,
							"name": "Invites",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Invite API Routes](https://docs.medusajs.com/api/admin#invites).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 16619
									},
									{
										"kind": "text",
										"text": ".\n\nAn admin can invite new users to manage their team. This would allow new users to authenticate as admins and perform admin functionalities.\n\nRelated Guide: [How to manage invites](https://docs.medusajs.com/modules/users/admin/manage-invites)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 17456,
									"name": "useAdminAcceptInvite",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17457,
											"name": "useAdminAcceptInvite",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook accepts an Invite. This will also delete the invite and create a new user that can log in and perform admin functionalities. \nThe user will have the email associated with the invite, and the password provided in the mutation function's parameter."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminAcceptInvite } from \"medusa-react\"\n\nconst AcceptInvite = () => {\n  const acceptInvite = useAdminAcceptInvite()\n  // ...\n\n  const handleAccept = (\n    token: string,\n    firstName: string,\n    lastName: string,\n    password: string\n  ) => {\n    acceptInvite.mutate({\n      token,\n      user: {\n        first_name: firstName,\n        last_name: lastName,\n        password,\n      },\n    }, {\n      onSuccess: () => {\n        // invite accepted successfully.\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default AcceptInvite\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17458,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "void"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/invites/accept-invite.d.ts",
																	"qualifiedName": "AdminPostInvitesInviteAcceptReq"
																},
																"name": "AdminPostInvitesInviteAcceptReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "void"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/invites/accept-invite.d.ts",
															"qualifiedName": "AdminPostInvitesInviteAcceptReq"
														},
														"name": "AdminPostInvitesInviteAcceptReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17459,
									"name": "useAdminResendInvite",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17460,
											"name": "useAdminResendInvite",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook resends an invite. This renews the expiry date by seven days and generates a new token for the invite. It also triggers the "
													},
													{
														"kind": "code",
														"text": "`invite.created`"
													},
													{
														"kind": "text",
														"text": " event, \nso if you have a Notification Provider installed that handles this event, a notification should be sent to the email associated with the \ninvite to allow them to accept the invite."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminResendInvite } from \"medusa-react\"\n\ntype Props = {\n  inviteId: string\n}\n\nconst ResendInvite = ({ inviteId }: Props) => {\n  const resendInvite = useAdminResendInvite(inviteId)\n  // ...\n\n  const handleResend = () => {\n    resendInvite.mutate(void 0, {\n      onSuccess: () => {\n        // invite resent successfully\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default ResendInvite\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17461,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The invite's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17462,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "unknown"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17466,
									"name": "useAdminDeleteInvite",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17467,
											"name": "useAdminDeleteInvite",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes an invite. Only invites that weren't accepted can be deleted."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteInvite } from \"medusa-react\"\n\ntype Props = {\n  inviteId: string\n}\n\nconst DeleteInvite = ({ inviteId }: Props) => {\n  const deleteInvite = useAdminDeleteInvite(inviteId)\n  // ...\n\n  const handleDelete = () => {\n    deleteInvite.mutate(void 0, {\n      onSuccess: ({ id, object, deleted }) => {\n        console.log(id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Invite\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17468,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The invite's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17469,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																			"qualifiedName": "DeleteResponse"
																		},
																		"name": "DeleteResponse",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																	"qualifiedName": "DeleteResponse"
																},
																"name": "DeleteResponse",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17441,
									"name": "useAdminInvites",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17442,
											"name": "useAdminInvites",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of invites."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminInvites } from \"medusa-react\"\n\nconst Invites = () => {\n  const { invites, isLoading } = useAdminInvites()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {invites && !invites.length && (\n        <span>No Invites</span>)\n      }\n      {invites && invites.length > 0 && (\n        <ul>\n          {invites.map((invite) => (\n            <li key={invite.id}>{invite.user_email}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Invites\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17443,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/invites/index.d.ts",
																			"qualifiedName": "AdminListInvitesRes"
																		},
																		"name": "AdminListInvitesRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_invites"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 17444,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17446,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17445,
																	"name": "invites",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/invite.d.ts",
																				"qualifiedName": "Invite"
																			},
																			"name": "Invite",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17446,
																		17445
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17447,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17449,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17448,
																	"name": "invites",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/invite.d.ts",
																				"qualifiedName": "Invite"
																			},
																			"name": "Invite",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17449,
																		17448
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17450,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17452,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17451,
																	"name": "invites",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/invite.d.ts",
																				"qualifiedName": "Invite"
																			},
																			"name": "Invite",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17452,
																		17451
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17453,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17455,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17454,
																	"name": "invites",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/invite.d.ts",
																				"qualifiedName": "Invite"
																			},
																			"name": "Invite",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17455,
																		17454
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										17456,
										17459,
										17466,
										17441
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										17441
									]
								},
								{
									"title": "Mutations",
									"children": [
										17456,
										17459,
										17466
									]
								}
							]
						},
						{
							"id": 16404,
							"name": "Notes",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Note API Routes](https://docs.medusajs.com/api/admin#notes).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 16619
									},
									{
										"kind": "text",
										"text": ".\n\nNotes are created by admins and can be associated with any resource. For example, an admin can add a note to an order for additional details or remarks."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 17517,
									"name": "useAdminCreateNote",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17518,
											"name": "useAdminCreateNote",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a Note which can be associated with any resource."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateNote } from \"medusa-react\"\n\nconst CreateNote = () => {\n  const createNote = useAdminCreateNote()\n  // ...\n\n  const handleCreate = () => {\n    createNote.mutate({\n      resource_id: \"order_123\",\n      resource_type: \"order\",\n      value: \"We delivered this order\"\n    }, {\n      onSuccess: ({ note }) => {\n        console.log(note.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CreateNote\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17519,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notes/index.d.ts",
																			"qualifiedName": "AdminNotesRes"
																		},
																		"name": "AdminNotesRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notes/create-note.d.ts",
																	"qualifiedName": "AdminPostNotesReq"
																},
																"name": "AdminPostNotesReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notes/index.d.ts",
																	"qualifiedName": "AdminNotesRes"
																},
																"name": "AdminNotesRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notes/create-note.d.ts",
															"qualifiedName": "AdminPostNotesReq"
														},
														"name": "AdminPostNotesReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17520,
									"name": "useAdminUpdateNote",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17521,
											"name": "useAdminUpdateNote",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a Note's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateNote } from \"medusa-react\"\n\ntype Props = {\n  noteId: string\n}\n\nconst Note = ({ noteId }: Props) => {\n  const updateNote = useAdminUpdateNote(noteId)\n  // ...\n\n  const handleUpdate = (\n    value: string\n  ) => {\n    updateNote.mutate({\n      value\n    }, {\n      onSuccess: ({ note }) => {\n        console.log(note.value)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Note\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17522,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The note's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17523,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notes/index.d.ts",
																			"qualifiedName": "AdminNotesRes"
																		},
																		"name": "AdminNotesRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notes/update-note.d.ts",
																	"qualifiedName": "AdminPostNotesNoteReq"
																},
																"name": "AdminPostNotesNoteReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notes/index.d.ts",
																	"qualifiedName": "AdminNotesRes"
																},
																"name": "AdminNotesRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notes/update-note.d.ts",
															"qualifiedName": "AdminPostNotesNoteReq"
														},
														"name": "AdminPostNotesNoteReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17524,
									"name": "useAdminDeleteNote",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17525,
											"name": "useAdminDeleteNote",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a Note."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteNote } from \"medusa-react\"\n\ntype Props = {\n  noteId: string\n}\n\nconst Note = ({ noteId }: Props) => {\n  const deleteNote = useAdminDeleteNote(noteId)\n  // ...\n\n  const handleDelete = () => {\n    deleteNote.mutate()\n  }\n\n  // ...\n}\n\nexport default Note\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17526,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The note's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17527,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																			"qualifiedName": "DeleteResponse"
																		},
																		"name": "DeleteResponse",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																	"qualifiedName": "DeleteResponse"
																},
																"name": "DeleteResponse",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17471,
									"name": "useAdminNotes",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17472,
											"name": "useAdminNotes",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of notes. The notes can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`resource_id`"
													},
													{
														"kind": "text",
														"text": " passed in \nthe "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " parameter. The notes can also be paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list notes:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminNotes } from \"medusa-react\"\n\nconst Notes = () => {\n  const { notes, isLoading } = useAdminNotes()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {notes && !notes.length && <span>No Notes</span>}\n      {notes && notes.length > 0 && (\n        <ul>\n          {notes.map((note) => (\n            <li key={note.id}>{note.resource_type}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Notes\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`50`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminNotes } from \"medusa-react\"\n\nconst Notes = () => {\n  const { \n    notes, \n    limit,\n    offset,\n    isLoading\n  } = useAdminNotes({\n    limit: 40,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {notes && !notes.length && <span>No Notes</span>}\n      {notes && notes.length > 0 && (\n        <ul>\n          {notes.map((note) => (\n            <li key={note.id}>{note.resource_type}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Notes\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17473,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations applied on retrieved notes."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notes/list-notes.d.ts",
															"qualifiedName": "AdminGetNotesParams"
														},
														"name": "AdminGetNotesParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 17474,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notes/index.d.ts",
																			"qualifiedName": "AdminNotesListRes"
																		},
																		"name": "AdminNotesListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_notes"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 17475,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 17476,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						17476
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 17477,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17482,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17481,
																	"name": "notes",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/note.d.ts",
																				"qualifiedName": "Note"
																			},
																			"name": "Note",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 17478,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17479,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17480,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17482,
																		17481,
																		17478,
																		17479,
																		17480
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17483,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17488,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17487,
																	"name": "notes",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/note.d.ts",
																				"qualifiedName": "Note"
																			},
																			"name": "Note",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 17484,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17485,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17486,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17488,
																		17487,
																		17484,
																		17485,
																		17486
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17489,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17494,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17493,
																	"name": "notes",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/note.d.ts",
																				"qualifiedName": "Note"
																			},
																			"name": "Note",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 17490,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17491,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17492,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17494,
																		17493,
																		17490,
																		17491,
																		17492
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17495,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17500,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17499,
																	"name": "notes",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/note.d.ts",
																				"qualifiedName": "Note"
																			},
																			"name": "Note",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 17496,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17497,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17498,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17500,
																		17499,
																		17496,
																		17497,
																		17498
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 17501,
									"name": "useAdminNote",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17502,
											"name": "useAdminNote",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a note's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminNote } from \"medusa-react\"\n\ntype Props = {\n  noteId: string\n}\n\nconst Note = ({ noteId }: Props) => {\n  const { note, isLoading } = useAdminNote(noteId)\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {note && <span>{note.resource_type}</span>}\n    </div>\n  )\n}\n\nexport default Note\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17503,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The note's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17504,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notes/index.d.ts",
																			"qualifiedName": "AdminNotesRes"
																		},
																		"name": "AdminNotesRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_notes"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 17505,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17507,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17506,
																	"name": "note",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/note.d.ts",
																			"qualifiedName": "Note"
																		},
																		"name": "Note",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17507,
																		17506
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17508,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17510,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17509,
																	"name": "note",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/note.d.ts",
																			"qualifiedName": "Note"
																		},
																		"name": "Note",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17510,
																		17509
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17511,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17513,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17512,
																	"name": "note",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/note.d.ts",
																			"qualifiedName": "Note"
																		},
																		"name": "Note",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17513,
																		17512
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17514,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17516,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17515,
																	"name": "note",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/note.d.ts",
																			"qualifiedName": "Note"
																		},
																		"name": "Note",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17516,
																		17515
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										17517,
										17520,
										17524,
										17471,
										17501
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										17471,
										17501
									]
								},
								{
									"title": "Mutations",
									"children": [
										17517,
										17520,
										17524
									]
								}
							]
						},
						{
							"id": 16405,
							"name": "Notifications",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Notification API Routes](https://docs.medusajs.com/api/admin#notifications).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 16619
									},
									{
										"kind": "text",
										"text": ".\n\nNotifications are sent to customers to inform them of new updates. For example, a notification can be sent to the customer when their order is place or its state is updated.\nThe notification's type, such as an email or SMS, is determined by the notification provider installed on the Medusa backend."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 17559,
									"name": "useAdminResendNotification",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17560,
											"name": "useAdminResendNotification",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook resends a previously sent notifications, with the same data but optionally to a different address."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminResendNotification } from \"medusa-react\"\n\ntype Props = {\n  notificationId: string\n}\n\nconst Notification = ({ notificationId }: Props) => {\n  const resendNotification = useAdminResendNotification(\n    notificationId\n  )\n  // ...\n\n  const handleResend = () => {\n    resendNotification.mutate({}, {\n      onSuccess: ({ notification }) => {\n        console.log(notification.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Notification\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17561,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The ID of the notification."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17562,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notifications/index.d.ts",
																			"qualifiedName": "AdminNotificationsRes"
																		},
																		"name": "AdminNotificationsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notifications/resend-notification.d.ts",
																	"qualifiedName": "AdminPostNotificationsNotificationResendReq"
																},
																"name": "AdminPostNotificationsNotificationResendReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notifications/index.d.ts",
																	"qualifiedName": "AdminNotificationsRes"
																},
																"name": "AdminNotificationsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notifications/resend-notification.d.ts",
															"qualifiedName": "AdminPostNotificationsNotificationResendReq"
														},
														"name": "AdminPostNotificationsNotificationResendReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17529,
									"name": "useAdminNotifications",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17530,
											"name": "useAdminNotifications",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of notifications. The notifications can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`event_name`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`resource_type`"
													},
													{
														"kind": "text",
														"text": " passed in the "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " parameter.\nThe notifications can also be paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list notifications:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminNotifications } from \"medusa-react\"\n\nconst Notifications = () => {\n  const { notifications, isLoading } = useAdminNotifications()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {notifications && !notifications.length && (\n        <span>No Notifications</span>\n      )}\n      {notifications && notifications.length > 0 && (\n        <ul>\n          {notifications.map((notification) => (\n            <li key={notification.id}>{notification.to}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Notifications\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify relations that should be retrieved within the notifications:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminNotifications } from \"medusa-react\"\n\nconst Notifications = () => {\n  const { notifications, isLoading } = useAdminNotifications({\n    expand: \"provider\"\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {notifications && !notifications.length && (\n        <span>No Notifications</span>\n      )}\n      {notifications && notifications.length > 0 && (\n        <ul>\n          {notifications.map((notification) => (\n            <li key={notification.id}>{notification.to}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Notifications\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`50`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminNotifications } from \"medusa-react\"\n\nconst Notifications = () => {\n  const { \n    notifications, \n    limit,\n    offset,\n    isLoading\n  } = useAdminNotifications({\n    expand: \"provider\",\n    limit: 20,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {notifications && !notifications.length && (\n        <span>No Notifications</span>\n      )}\n      {notifications && notifications.length > 0 && (\n        <ul>\n          {notifications.map((notification) => (\n            <li key={notification.id}>{notification.to}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Notifications\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17531,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations applied to the retrieved notifications."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notifications/list-notifications.d.ts",
															"qualifiedName": "AdminGetNotificationsParams"
														},
														"name": "AdminGetNotificationsParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 17532,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notifications/index.d.ts",
																			"qualifiedName": "AdminNotificationsListRes"
																		},
																		"name": "AdminNotificationsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_notifications"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 17533,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 17534,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						17534
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 17535,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17540,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17539,
																	"name": "notifications",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/notification.d.ts",
																				"qualifiedName": "Notification"
																			},
																			"name": "Notification",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 17536,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The limit applied on the retrieved items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17537,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before retrieving the list of items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17538,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total count of items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17540,
																		17539,
																		17536,
																		17537,
																		17538
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17541,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17546,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17545,
																	"name": "notifications",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/notification.d.ts",
																				"qualifiedName": "Notification"
																			},
																			"name": "Notification",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 17542,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The limit applied on the retrieved items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17543,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before retrieving the list of items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17544,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total count of items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17546,
																		17545,
																		17542,
																		17543,
																		17544
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17547,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17552,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17551,
																	"name": "notifications",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/notification.d.ts",
																				"qualifiedName": "Notification"
																			},
																			"name": "Notification",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 17548,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The limit applied on the retrieved items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17549,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before retrieving the list of items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17550,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total count of items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17552,
																		17551,
																		17548,
																		17549,
																		17550
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17553,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17558,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17557,
																	"name": "notifications",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/notification.d.ts",
																				"qualifiedName": "Notification"
																			},
																			"name": "Notification",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 17554,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The limit applied on the retrieved items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17555,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before retrieving the list of items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17556,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total count of items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17558,
																		17557,
																		17554,
																		17555,
																		17556
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										17559,
										17529
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										17529
									]
								},
								{
									"title": "Mutations",
									"children": [
										17559
									]
								}
							]
						},
						{
							"id": 16406,
							"name": "Order Edits",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Order Edit API Routes](https://docs.medusajs.com/api/admin#order-edits).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 16619
									},
									{
										"kind": "text",
										"text": ".\n\nAn admin can edit an order to remove, add, or update an item's quantity. When an admin edits an order, they're stored as an "
									},
									{
										"kind": "code",
										"text": "`OrderEdit`"
									},
									{
										"kind": "text",
										"text": ".\n\nRelated Guide: [How to edit an order](https://docs.medusajs.com/modules/orders/admin/edit-order)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 17611,
									"name": "useAdminCreateOrderEdit",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17612,
											"name": "useAdminCreateOrderEdit",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates an order edit."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateOrderEdit } from \"medusa-react\"\n\nconst CreateOrderEdit = () => {\n  const createOrderEdit = useAdminCreateOrderEdit()\n\n  const handleCreateOrderEdit = (orderId: string) => {\n    createOrderEdit.mutate({\n      order_id: orderId,\n    }, {\n      onSuccess: ({ order_edit }) => {\n        console.log(order_edit.id)\n      }\n    })\n  }\n  \n  // ...\n}\n\nexport default CreateOrderEdit\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17613,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
																			"qualifiedName": "AdminOrderEditsRes"
																		},
																		"name": "AdminOrderEditsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/create-order-edit.d.ts",
																	"qualifiedName": "AdminPostOrderEditsReq"
																},
																"name": "AdminPostOrderEditsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
																	"qualifiedName": "AdminOrderEditsRes"
																},
																"name": "AdminOrderEditsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/create-order-edit.d.ts",
															"qualifiedName": "AdminPostOrderEditsReq"
														},
														"name": "AdminPostOrderEditsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17614,
									"name": "useAdminDeleteOrderEdit",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17615,
											"name": "useAdminDeleteOrderEdit",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes an order edit. Only order edits that have the status "
													},
													{
														"kind": "code",
														"text": "`created`"
													},
													{
														"kind": "text",
														"text": " can be deleted."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteOrderEdit } from \"medusa-react\"\n\ntype Props = {\n  orderEditId: string\n}\n\nconst OrderEdit = ({ orderEditId }: Props) => {\n  const deleteOrderEdit = useAdminDeleteOrderEdit(\n    orderEditId\n  )\n  \n  const handleDelete = () => {\n    deleteOrderEdit.mutate(void 0, {\n      onSuccess: ({ id, object, deleted }) => {\n        console.log(id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default OrderEdit\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17616,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Order Edit's ID"
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17617,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																			"qualifiedName": "DeleteResponse"
																		},
																		"name": "DeleteResponse",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																	"qualifiedName": "DeleteResponse"
																},
																"name": "DeleteResponse",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17618,
									"name": "useAdminDeleteOrderEditItemChange",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17619,
											"name": "useAdminDeleteOrderEditItemChange",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a line item change that indicates the addition, deletion, or update of a line item in the original order."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteOrderEditItemChange } from \"medusa-react\"\n\ntype Props = {\n  orderEditId: string\n  itemChangeId: string\n}\n\nconst OrderEditItemChange = ({\n  orderEditId,\n  itemChangeId\n}: Props) => {\n  const deleteItemChange = useAdminDeleteOrderEditItemChange(\n    orderEditId, \n    itemChangeId\n  )\n  \n  const handleDeleteItemChange = () => {\n    deleteItemChange.mutate(void 0, {\n      onSuccess: ({ id, object, deleted }) => {\n        console.log(id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default OrderEditItemChange\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17620,
													"name": "orderEditId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The order edit's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17621,
													"name": "itemChangeId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The line item change's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17622,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
																			"qualifiedName": "AdminOrderEditItemChangeDeleteRes"
																		},
																		"name": "AdminOrderEditItemChangeDeleteRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
																	"qualifiedName": "AdminOrderEditItemChangeDeleteRes"
																},
																"name": "AdminOrderEditItemChangeDeleteRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17623,
									"name": "useAdminOrderEditUpdateLineItem",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17624,
											"name": "useAdminOrderEditUpdateLineItem",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates or updates a line item change in the order edit that indicates addition, deletion, or update of a line item \ninto an original order. Line item changes are only reflected on the original order after the order edit is confirmed."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminOrderEditUpdateLineItem } from \"medusa-react\"\n\ntype Props = {\n  orderEditId: string\n  itemId: string\n}\n\nconst OrderEditItemChange = ({\n  orderEditId,\n  itemId\n}: Props) => {\n  const updateLineItem = useAdminOrderEditUpdateLineItem(\n    orderEditId, \n    itemId\n  )\n  \n  const handleUpdateLineItem = (quantity: number) => {\n    updateLineItem.mutate({\n      quantity,\n    }, {\n      onSuccess: ({ order_edit }) => {\n        console.log(order_edit.items)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default OrderEditItemChange\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17625,
													"name": "orderEditId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The order edit's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17626,
													"name": "itemId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The line item's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17627,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
																			"qualifiedName": "AdminOrderEditsRes"
																		},
																		"name": "AdminOrderEditsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/update-order-edit-line-item.d.ts",
																	"qualifiedName": "AdminPostOrderEditsEditLineItemsLineItemReq"
																},
																"name": "AdminPostOrderEditsEditLineItemsLineItemReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
																	"qualifiedName": "AdminOrderEditsRes"
																},
																"name": "AdminOrderEditsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/update-order-edit-line-item.d.ts",
															"qualifiedName": "AdminPostOrderEditsEditLineItemsLineItemReq"
														},
														"name": "AdminPostOrderEditsEditLineItemsLineItemReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17628,
									"name": "useAdminOrderEditDeleteLineItem",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17629,
											"name": "useAdminOrderEditDeleteLineItem",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a line item change in the order edit that indicates deleting an item in the original order. \nThe item in the original order will not be deleted until the order edit is confirmed."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminOrderEditDeleteLineItem } from \"medusa-react\"\n\ntype Props = {\n  orderEditId: string\n  itemId: string\n}\n\nconst OrderEditLineItem = ({\n  orderEditId,\n  itemId\n}: Props) => {\n  const removeLineItem = useAdminOrderEditDeleteLineItem(\n    orderEditId, \n    itemId\n  )\n  \n  const handleRemoveLineItem = () => {\n    removeLineItem.mutate(void 0, {\n      onSuccess: ({ order_edit }) => {\n        console.log(order_edit.changes)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default OrderEditLineItem\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17630,
													"name": "orderEditId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The order edit's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17631,
													"name": "itemId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The line item's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17632,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
																			"qualifiedName": "AdminOrderEditsRes"
																		},
																		"name": "AdminOrderEditsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
																	"qualifiedName": "AdminOrderEditsRes"
																},
																"name": "AdminOrderEditsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17633,
									"name": "useAdminUpdateOrderEdit",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17634,
											"name": "useAdminUpdateOrderEdit",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates an Order Edit's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateOrderEdit } from \"medusa-react\"\n\ntype Props = {\n  orderEditId: string\n}\n\nconst OrderEdit = ({ orderEditId }: Props) => {\n  const updateOrderEdit = useAdminUpdateOrderEdit(\n    orderEditId, \n  )\n  \n  const handleUpdate = (\n    internalNote: string\n  ) => {\n    updateOrderEdit.mutate({\n      internal_note: internalNote\n    }, {\n      onSuccess: ({ order_edit }) => {\n        console.log(order_edit.internal_note)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default OrderEdit\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17635,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The order edit's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17636,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
																			"qualifiedName": "AdminOrderEditsRes"
																		},
																		"name": "AdminOrderEditsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/update-order-edit.d.ts",
																	"qualifiedName": "AdminPostOrderEditsOrderEditReq"
																},
																"name": "AdminPostOrderEditsOrderEditReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
																	"qualifiedName": "AdminOrderEditsRes"
																},
																"name": "AdminOrderEditsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/update-order-edit.d.ts",
															"qualifiedName": "AdminPostOrderEditsOrderEditReq"
														},
														"name": "AdminPostOrderEditsOrderEditReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17637,
									"name": "useAdminOrderEditAddLineItem",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17638,
											"name": "useAdminOrderEditAddLineItem",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a line item change in the order edit that indicates adding an item in the original order. \nThe item will not be added to the original order until the order edit is confirmed."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminOrderEditAddLineItem } from \"medusa-react\"\n\ntype Props = {\n  orderEditId: string\n}\n\nconst OrderEdit = ({ orderEditId }: Props) => {\n  const addLineItem = useAdminOrderEditAddLineItem(\n    orderEditId\n  )\n\n  const handleAddLineItem = \n    (quantity: number, variantId: string) => {\n      addLineItem.mutate({\n        quantity,\n        variant_id: variantId,\n      }, {\n        onSuccess: ({ order_edit }) => {\n          console.log(order_edit.changes)\n        }\n      })\n    }\n  \n  // ...\n}\n\nexport default OrderEdit\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17639,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The order edit's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17640,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
																			"qualifiedName": "AdminOrderEditsRes"
																		},
																		"name": "AdminOrderEditsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/add-line-item.d.ts",
																	"qualifiedName": "AdminPostOrderEditsEditLineItemsReq"
																},
																"name": "AdminPostOrderEditsEditLineItemsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
																	"qualifiedName": "AdminOrderEditsRes"
																},
																"name": "AdminOrderEditsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/add-line-item.d.ts",
															"qualifiedName": "AdminPostOrderEditsEditLineItemsReq"
														},
														"name": "AdminPostOrderEditsEditLineItemsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17641,
									"name": "useAdminRequestOrderEditConfirmation",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17642,
											"name": "useAdminRequestOrderEditConfirmation",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook requests customer confirmation of an order edit. This would emit the event "
													},
													{
														"kind": "code",
														"text": "`order-edit.requested`"
													},
													{
														"kind": "text",
														"text": " which Notification Providers listen to and send\na notification to the customer about the order edit."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { \n  useAdminRequestOrderEditConfirmation,\n} from \"medusa-react\"\n\ntype Props = {\n  orderEditId: string\n}\n\nconst OrderEdit = ({ orderEditId }: Props) => {\n  const requestOrderConfirmation = \n    useAdminRequestOrderEditConfirmation(\n      orderEditId\n    )\n  \n  const handleRequestConfirmation = () => {\n    requestOrderConfirmation.mutate(void 0, {\n      onSuccess: ({ order_edit }) => {\n        console.log(\n          order_edit.requested_at, \n          order_edit.requested_by\n        )\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default OrderEdit\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17643,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The order edit's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17644,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
																			"qualifiedName": "AdminOrderEditsRes"
																		},
																		"name": "AdminOrderEditsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
																	"qualifiedName": "AdminOrderEditsRes"
																},
																"name": "AdminOrderEditsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17645,
									"name": "useAdminCancelOrderEdit",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17646,
											"name": "useAdminCancelOrderEdit",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook cancels an order edit."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { \n  useAdminCancelOrderEdit,\n} from \"medusa-react\"\n\ntype Props = {\n  orderEditId: string\n}\n\nconst OrderEdit = ({ orderEditId }: Props) => {\n  const cancelOrderEdit = \n    useAdminCancelOrderEdit(\n      orderEditId\n    )\n  \n  const handleCancel = () => {\n    cancelOrderEdit.mutate(void 0, {\n      onSuccess: ({ order_edit }) => {\n        console.log(\n          order_edit.id\n        )\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default OrderEdit\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17647,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The order edit's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17648,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
																			"qualifiedName": "AdminOrderEditsRes"
																		},
																		"name": "AdminOrderEditsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
																	"qualifiedName": "AdminOrderEditsRes"
																},
																"name": "AdminOrderEditsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17649,
									"name": "useAdminConfirmOrderEdit",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17650,
											"name": "useAdminConfirmOrderEdit",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook confirms an order edit. This will reflect the changes in the order edit on the associated order."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminConfirmOrderEdit } from \"medusa-react\"\n\ntype Props = {\n  orderEditId: string\n}\n\nconst OrderEdit = ({ orderEditId }: Props) => {\n  const confirmOrderEdit = useAdminConfirmOrderEdit(\n    orderEditId\n  )\n  \n  const handleConfirmOrderEdit = () => {\n    confirmOrderEdit.mutate(void 0, {\n      onSuccess: ({ order_edit }) => {\n        console.log(\n          order_edit.confirmed_at,\n          order_edit.confirmed_by\n        )\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default OrderEdit\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17651,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The order edit's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17652,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
																			"qualifiedName": "AdminOrderEditsRes"
																		},
																		"name": "AdminOrderEditsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
																	"qualifiedName": "AdminOrderEditsRes"
																},
																"name": "AdminOrderEditsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17564,
									"name": "useAdminOrderEdit",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17565,
											"name": "useAdminOrderEdit",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves an order edit's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "A simple example that retrieves an order edit by its ID:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminOrderEdit } from \"medusa-react\"\n\ntype Props = {\n  orderEditId: string\n}\n\nconst OrderEdit = ({ orderEditId }: Props) => {\n  const { \n    order_edit, \n    isLoading, \n  } = useAdminOrderEdit(orderEditId)\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {order_edit && <span>{order_edit.status}</span>}\n    </div>\n  )\n}\n\nexport default OrderEdit\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify relations that should be retrieved:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminOrderEdit } from \"medusa-react\"\n\ntype Props = {\n  orderEditId: string\n}\n\nconst OrderEdit = ({ orderEditId }: Props) => {\n  const { \n    order_edit, \n    isLoading, \n  } = useAdminOrderEdit(\n    orderEditId,\n    {\n      expand: \"order\"\n    }\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {order_edit && <span>{order_edit.status}</span>}\n    </div>\n  )\n}\n\nexport default OrderEdit\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17566,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The order edit's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17567,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Configurations to apply on the retrieved order edit."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/get-order-edit.d.ts",
															"qualifiedName": "GetOrderEditsOrderEditParams"
														},
														"name": "GetOrderEditsOrderEditParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 17568,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
																			"qualifiedName": "AdminOrderEditsRes"
																		},
																		"name": "AdminOrderEditsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_order_edits"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 17569,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17571,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17570,
																	"name": "order_edit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/order-edit.d.ts",
																			"qualifiedName": "OrderEdit"
																		},
																		"name": "OrderEdit",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17571,
																		17570
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17572,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17574,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17573,
																	"name": "order_edit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/order-edit.d.ts",
																			"qualifiedName": "OrderEdit"
																		},
																		"name": "OrderEdit",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17574,
																		17573
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17575,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17577,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17576,
																	"name": "order_edit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/order-edit.d.ts",
																			"qualifiedName": "OrderEdit"
																		},
																		"name": "OrderEdit",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17577,
																		17576
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17578,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17580,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17579,
																	"name": "order_edit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/order-edit.d.ts",
																			"qualifiedName": "OrderEdit"
																		},
																		"name": "OrderEdit",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17580,
																		17579
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 17581,
									"name": "useAdminOrderEdits",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17582,
											"name": "useAdminOrderEdits",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of order edits. The order edits can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`q`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`order_id`"
													},
													{
														"kind": "text",
														"text": " passed to the "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " parameter. \nThe order edits can also be paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list order edits:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminOrderEdits } from \"medusa-react\"\n\nconst OrderEdits = () => {\n  const { order_edits, isLoading } = useAdminOrderEdits()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {order_edits && !order_edits.length && (\n        <span>No Order Edits</span>\n      )}\n      {order_edits && order_edits.length > 0 && (\n        <ul>\n          {order_edits.map((orderEdit) => (\n            <li key={orderEdit.id}>\n              {orderEdit.status}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default OrderEdits\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify relations that should be retrieved within the order edits:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminOrderEdits } from \"medusa-react\"\n\nconst OrderEdits = () => {\n  const { order_edits, isLoading } = useAdminOrderEdits({\n    expand: \"order\"\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {order_edits && !order_edits.length && (\n        <span>No Order Edits</span>\n      )}\n      {order_edits && order_edits.length > 0 && (\n        <ul>\n          {order_edits.map((orderEdit) => (\n            <li key={orderEdit.id}>\n              {orderEdit.status}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default OrderEdits\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`50`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminOrderEdits } from \"medusa-react\"\n\nconst OrderEdits = () => {\n  const { \n    order_edits,\n    limit,\n    offset,\n    isLoading\n  } = useAdminOrderEdits({\n    expand: \"order\",\n    limit: 20,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {order_edits && !order_edits.length && (\n        <span>No Order Edits</span>\n      )}\n      {order_edits && order_edits.length > 0 && (\n        <ul>\n          {order_edits.map((orderEdit) => (\n            <li key={orderEdit.id}>\n              {orderEdit.status}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default OrderEdits\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17583,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations applied to retrieved order edits."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/list-order-edit.d.ts",
															"qualifiedName": "GetOrderEditsParams"
														},
														"name": "GetOrderEditsParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 17584,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
																			"qualifiedName": "AdminOrderEditsListRes"
																		},
																		"name": "AdminOrderEditsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_order_edits"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 17585,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 17586,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						17586
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 17587,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17592,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17591,
																	"name": "order_edits",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/order-edit.d.ts",
																				"qualifiedName": "OrderEdit"
																			},
																			"name": "OrderEdit",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 17588,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17589,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17590,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17592,
																		17591,
																		17588,
																		17589,
																		17590
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17593,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17598,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17597,
																	"name": "order_edits",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/order-edit.d.ts",
																				"qualifiedName": "OrderEdit"
																			},
																			"name": "OrderEdit",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 17594,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17595,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17596,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17598,
																		17597,
																		17594,
																		17595,
																		17596
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17599,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17604,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17603,
																	"name": "order_edits",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/order-edit.d.ts",
																				"qualifiedName": "OrderEdit"
																			},
																			"name": "OrderEdit",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 17600,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17601,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17602,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17604,
																		17603,
																		17600,
																		17601,
																		17602
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17605,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17610,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17609,
																	"name": "order_edits",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/order-edit.d.ts",
																				"qualifiedName": "OrderEdit"
																			},
																			"name": "OrderEdit",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 17606,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17607,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17608,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17610,
																		17609,
																		17606,
																		17607,
																		17608
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										17611,
										17614,
										17618,
										17623,
										17628,
										17633,
										17637,
										17641,
										17645,
										17649,
										17564,
										17581
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										17564,
										17581
									]
								},
								{
									"title": "Mutations",
									"children": [
										17611,
										17614,
										17618,
										17623,
										17628,
										17633,
										17637,
										17641,
										17645,
										17649
									]
								}
							]
						},
						{
							"id": 16407,
							"name": "Orders",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Order API Routes](https://docs.medusajs.com/api/admin#orders).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 16619
									},
									{
										"kind": "text",
										"text": ".\n\nOrders are purchases made by customers, typically through a storefront using cart. Managing orders include managing fulfillment, payment, claims, reservations, and more.\n\nRelated Guide: [How to manage orders](https://docs.medusajs.com/modules/orders/admin/manage-orders)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 17729,
									"name": "useAdminUpdateOrder",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17730,
											"name": "useAdminUpdateOrder",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates an order's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateOrder } from \"medusa-react\"\n\ntype Props = {\n  orderId: string\n}\n\nconst Order = ({ orderId }: Props) => {\n  const updateOrder = useAdminUpdateOrder(\n    orderId\n  )\n\n  const handleUpdate = (\n    email: string\n  ) => {\n    updateOrder.mutate({\n      email,\n    }, {\n      onSuccess: ({ order }) => {\n        console.log(order.email)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Order\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17731,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17732,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																			"qualifiedName": "AdminOrdersRes"
																		},
																		"name": "AdminOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/update-order.d.ts",
																	"qualifiedName": "AdminPostOrdersOrderReq"
																},
																"name": "AdminPostOrdersOrderReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																	"qualifiedName": "AdminOrdersRes"
																},
																"name": "AdminOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/update-order.d.ts",
															"qualifiedName": "AdminPostOrdersOrderReq"
														},
														"name": "AdminPostOrdersOrderReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17733,
									"name": "useAdminCancelOrder",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17734,
											"name": "useAdminCancelOrder",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook cancels an order and change its status. This will also cancel any associated fulfillments and payments, \nand it may fail if the payment or fulfillment Provider is unable to cancel the payment/fulfillment."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCancelOrder } from \"medusa-react\"\n\ntype Props = {\n  orderId: string\n}\n\nconst Order = ({ orderId }: Props) => {\n  const cancelOrder = useAdminCancelOrder(\n    orderId\n  )\n  // ...\n\n  const handleCancel = () => {\n    cancelOrder.mutate(void 0, {\n      onSuccess: ({ order }) => {\n        console.log(order.status)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Order\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17735,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17736,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																			"qualifiedName": "AdminOrdersRes"
																		},
																		"name": "AdminOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																	"qualifiedName": "AdminOrdersRes"
																},
																"name": "AdminOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17737,
									"name": "useAdminCompleteOrder",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17738,
											"name": "useAdminCompleteOrder",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook completes an order and change its status. A canceled order can't be completed."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCompleteOrder } from \"medusa-react\"\n\ntype Props = {\n  orderId: string\n}\n\nconst Order = ({ orderId }: Props) => {\n  const completeOrder = useAdminCompleteOrder(\n    orderId\n  )\n  // ...\n\n  const handleComplete = () => {\n    completeOrder.mutate(void 0, {\n      onSuccess: ({ order }) => {\n        console.log(order.status)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Order\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17739,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17740,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																			"qualifiedName": "AdminOrdersRes"
																		},
																		"name": "AdminOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																	"qualifiedName": "AdminOrdersRes"
																},
																"name": "AdminOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17741,
									"name": "useAdminCapturePayment",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17742,
											"name": "useAdminCapturePayment",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook captures all the payments associated with an order. The payment of canceled orders can't be captured."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCapturePayment } from \"medusa-react\"\n\ntype Props = {\n  orderId: string\n}\n\nconst Order = ({ orderId }: Props) => {\n  const capturePayment = useAdminCapturePayment(\n    orderId\n  )\n  // ...\n\n  const handleCapture = () => {\n    capturePayment.mutate(void 0, {\n      onSuccess: ({ order }) => {\n        console.log(order.status)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Order\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17743,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17744,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																			"qualifiedName": "AdminOrdersRes"
																		},
																		"name": "AdminOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																	"qualifiedName": "AdminOrdersRes"
																},
																"name": "AdminOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17745,
									"name": "useAdminRefundPayment",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17746,
											"name": "useAdminRefundPayment",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook refunds an amount for an order. The amount must be less than or equal the "
													},
													{
														"kind": "code",
														"text": "`refundable_amount`"
													},
													{
														"kind": "text",
														"text": " of the order."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminRefundPayment } from \"medusa-react\"\n\ntype Props = {\n  orderId: string\n}\n\nconst Order = ({ orderId }: Props) => {\n  const refundPayment = useAdminRefundPayment(\n    orderId\n  )\n  // ...\n\n  const handleRefund = (\n    amount: number,\n    reason: string\n  ) => {\n    refundPayment.mutate({\n      amount,\n      reason,\n    }, {\n      onSuccess: ({ order }) => {\n        console.log(order.refunds)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Order\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17747,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17748,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																			"qualifiedName": "AdminOrdersRes"
																		},
																		"name": "AdminOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/refund-payment.d.ts",
																	"qualifiedName": "AdminPostOrdersOrderRefundsReq"
																},
																"name": "AdminPostOrdersOrderRefundsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																	"qualifiedName": "AdminOrdersRes"
																},
																"name": "AdminOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/refund-payment.d.ts",
															"qualifiedName": "AdminPostOrdersOrderRefundsReq"
														},
														"name": "AdminPostOrdersOrderRefundsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17749,
									"name": "useAdminCreateFulfillment",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17750,
											"name": "useAdminCreateFulfillment",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a Fulfillment of an Order using the fulfillment provider, and change the order's \nfulfillment status to either "
													},
													{
														"kind": "code",
														"text": "`partially_fulfilled`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`fulfilled`"
													},
													{
														"kind": "text",
														"text": ", depending on\nwhether all the items were fulfilled."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateFulfillment } from \"medusa-react\"\n\ntype Props = {\n  orderId: string\n}\n\nconst Order = ({ orderId }: Props) => {\n  const createFulfillment = useAdminCreateFulfillment(\n    orderId\n  )\n  // ...\n\n  const handleCreateFulfillment = (\n    itemId: string,\n    quantity: number\n  ) => {\n    createFulfillment.mutate({\n      items: [\n        {\n          item_id: itemId,\n          quantity,\n        },\n      ],\n    }, {\n      onSuccess: ({ order }) => {\n        console.log(order.fulfillments)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Order\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17751,
													"name": "orderId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17752,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																			"qualifiedName": "AdminOrdersRes"
																		},
																		"name": "AdminOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/create-fulfillment.d.ts",
																	"qualifiedName": "AdminPostOrdersOrderFulfillmentsReq"
																},
																"name": "AdminPostOrdersOrderFulfillmentsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																	"qualifiedName": "AdminOrdersRes"
																},
																"name": "AdminOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/create-fulfillment.d.ts",
															"qualifiedName": "AdminPostOrdersOrderFulfillmentsReq"
														},
														"name": "AdminPostOrdersOrderFulfillmentsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17753,
									"name": "useAdminCancelFulfillment",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17754,
											"name": "useAdminCancelFulfillment",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook cancels an order's fulfillment and change its fulfillment status to "
													},
													{
														"kind": "code",
														"text": "`canceled`"
													},
													{
														"kind": "text",
														"text": "."
													}
												],
												"blockTags": [
													{
														"tag": "@typeParamDefinition",
														"content": [
															{
																"kind": "text",
																"text": "string - The fulfillment's ID."
															}
														]
													},
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCancelFulfillment } from \"medusa-react\"\n\ntype Props = {\n  orderId: string\n}\n\nconst Order = ({ orderId }: Props) => {\n  const cancelFulfillment = useAdminCancelFulfillment(\n    orderId\n  )\n  // ...\n\n  const handleCancel = (\n    fulfillmentId: string\n  ) => {\n    cancelFulfillment.mutate(fulfillmentId, {\n      onSuccess: ({ order }) => {\n        console.log(order.fulfillments)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Order\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17755,
													"name": "orderId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17756,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																			"qualifiedName": "AdminOrdersRes"
																		},
																		"name": "AdminOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																	"qualifiedName": "AdminOrdersRes"
																},
																"name": "AdminOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17757,
									"name": "useAdminCreateShipment",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17758,
											"name": "useAdminCreateShipment",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a shipment and mark a fulfillment as shipped. This changes the order's fulfillment status to either \n"
													},
													{
														"kind": "code",
														"text": "`partially_shipped`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`shipped`"
													},
													{
														"kind": "text",
														"text": ", depending on whether all the items were shipped."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateShipment } from \"medusa-react\"\n\ntype Props = {\n  orderId: string\n}\n\nconst Order = ({ orderId }: Props) => {\n  const createShipment = useAdminCreateShipment(\n    orderId\n  )\n  // ...\n\n  const handleCreate = (\n    fulfillmentId: string\n  ) => {\n    createShipment.mutate({\n      fulfillment_id: fulfillmentId,\n    }, {\n      onSuccess: ({ order }) => {\n        console.log(order.fulfillment_status)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Order\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17759,
													"name": "orderId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17760,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																			"qualifiedName": "AdminOrdersRes"
																		},
																		"name": "AdminOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/create-shipment.d.ts",
																	"qualifiedName": "AdminPostOrdersOrderShipmentReq"
																},
																"name": "AdminPostOrdersOrderShipmentReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																	"qualifiedName": "AdminOrdersRes"
																},
																"name": "AdminOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/create-shipment.d.ts",
															"qualifiedName": "AdminPostOrdersOrderShipmentReq"
														},
														"name": "AdminPostOrdersOrderShipmentReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17761,
									"name": "useAdminRequestReturn",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17762,
											"name": "useAdminRequestReturn",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook requests and create a return for items in an order. If the return shipping method is specified, it will be automatically fulfilled."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminRequestReturn } from \"medusa-react\"\n\ntype Props = {\n  orderId: string\n}\n\nconst Order = ({ orderId }: Props) => {\n  const requestReturn = useAdminRequestReturn(\n    orderId\n  )\n  // ...\n\n  const handleRequestingReturn = (\n    itemId: string,\n    quantity: number\n  ) => {\n    requestReturn.mutate({\n      items: [\n        {\n          item_id: itemId,\n          quantity\n        }\n      ]\n    }, {\n      onSuccess: ({ order }) => {\n        console.log(order.returns)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Order\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17763,
													"name": "orderId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17764,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																			"qualifiedName": "AdminOrdersRes"
																		},
																		"name": "AdminOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/request-return.d.ts",
																	"qualifiedName": "AdminPostOrdersOrderReturnsReq"
																},
																"name": "AdminPostOrdersOrderReturnsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																	"qualifiedName": "AdminOrdersRes"
																},
																"name": "AdminOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/request-return.d.ts",
															"qualifiedName": "AdminPostOrdersOrderReturnsReq"
														},
														"name": "AdminPostOrdersOrderReturnsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17765,
									"name": "useAdminAddShippingMethod",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17766,
											"name": "useAdminAddShippingMethod",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook adds a shipping method to an order. If another shipping method exists with the same shipping profile, the previous shipping method will be replaced."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminAddShippingMethod } from \"medusa-react\"\n\ntype Props = {\n  orderId: string\n}\n\nconst Order = ({ orderId }: Props) => {\n  const addShippingMethod = useAdminAddShippingMethod(\n    orderId\n  )\n  // ...\n\n  const handleAddShippingMethod = (\n    optionId: string,\n    price: number\n  ) => {\n    addShippingMethod.mutate({\n      option_id: optionId,\n      price\n    }, {\n      onSuccess: ({ order }) => {\n        console.log(order.shipping_methods)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Order\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17767,
													"name": "orderId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17768,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																			"qualifiedName": "AdminOrdersRes"
																		},
																		"name": "AdminOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/add-shipping-method.d.ts",
																	"qualifiedName": "AdminPostOrdersOrderShippingMethodsReq"
																},
																"name": "AdminPostOrdersOrderShippingMethodsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																	"qualifiedName": "AdminOrdersRes"
																},
																"name": "AdminOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/add-shipping-method.d.ts",
															"qualifiedName": "AdminPostOrdersOrderShippingMethodsReq"
														},
														"name": "AdminPostOrdersOrderShippingMethodsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17769,
									"name": "useAdminArchiveOrder",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17770,
											"name": "useAdminArchiveOrder",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The hook archives an order and change its status."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminArchiveOrder } from \"medusa-react\"\n\ntype Props = {\n  orderId: string\n}\n\nconst Order = ({ orderId }: Props) => {\n  const archiveOrder = useAdminArchiveOrder(\n    orderId\n  )\n  // ...\n\n  const handleArchivingOrder = () => {\n    archiveOrder.mutate(void 0, {\n      onSuccess: ({ order }) => {\n        console.log(order.status)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Order\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17771,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17772,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																			"qualifiedName": "AdminOrdersRes"
																		},
																		"name": "AdminOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																	"qualifiedName": "AdminOrdersRes"
																},
																"name": "AdminOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17679,
									"name": "useAdminOrders",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17680,
											"name": "useAdminOrders",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of orders. The orders can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`status`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`display_id`"
													},
													{
														"kind": "text",
														"text": " passed \nin the "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " parameter. The order can also be paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list orders:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminOrders } from \"medusa-react\"\n\nconst Orders = () => {\n  const { orders, isLoading } = useAdminOrders()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {orders && !orders.length && <span>No Orders</span>}\n      {orders && orders.length > 0 && (\n        <ul>\n          {orders.map((order) => (\n            <li key={order.id}>{order.display_id}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Orders\n```"
															},
															{
																"kind": "text",
																"text": "\n\nYou can use the "
															},
															{
																"kind": "code",
																"text": "`query`"
															},
															{
																"kind": "text",
																"text": " parameter to pass filters and specify relations that should be retrieved within the orders. In addition,\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`50`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminOrders } from \"medusa-react\"\n\nconst Orders = () => {\n  const { \n    orders,\n    limit,\n    offset,\n    isLoading\n  } = useAdminOrders({\n    expand: \"customers\",\n    limit: 20,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {orders && !orders.length && <span>No Orders</span>}\n      {orders && orders.length > 0 && (\n        <ul>\n          {orders.map((order) => (\n            <li key={order.id}>{order.display_id}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Orders\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17681,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations applied on the retrieved orders."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/list-orders.d.ts",
															"qualifiedName": "AdminGetOrdersParams"
														},
														"name": "AdminGetOrdersParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 17682,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																			"qualifiedName": "AdminOrdersListRes"
																		},
																		"name": "AdminOrdersListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_orders"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 17683,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 17684,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						17684
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 17685,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17690,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17689,
																	"name": "orders",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/order.d.ts",
																				"qualifiedName": "Order"
																			},
																			"name": "Order",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 17686,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17687,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17688,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17690,
																		17689,
																		17686,
																		17687,
																		17688
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17691,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17696,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17695,
																	"name": "orders",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/order.d.ts",
																				"qualifiedName": "Order"
																			},
																			"name": "Order",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 17692,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17693,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17694,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17696,
																		17695,
																		17692,
																		17693,
																		17694
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17697,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17702,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17701,
																	"name": "orders",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/order.d.ts",
																				"qualifiedName": "Order"
																			},
																			"name": "Order",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 17698,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17699,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17700,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17702,
																		17701,
																		17698,
																		17699,
																		17700
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17703,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17708,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17707,
																	"name": "orders",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/order.d.ts",
																				"qualifiedName": "Order"
																			},
																			"name": "Order",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 17704,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17705,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17706,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17708,
																		17707,
																		17704,
																		17705,
																		17706
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 17709,
									"name": "useAdminOrder",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17710,
											"name": "useAdminOrder",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieve an order's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "A simple example that retrieves an order by its ID:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminOrder } from \"medusa-react\"\n\ntype Props = {\n  orderId: string\n}\n\nconst Order = ({ orderId }: Props) => {\n  const { \n    order, \n    isLoading, \n  } = useAdminOrder(orderId)\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {order && <span>{order.display_id}</span>}\n      \n    </div>\n  )\n}\n\nexport default Order\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify relations that should be retrieved:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminOrder } from \"medusa-react\"\n\nconst Order = (\n  orderId: string\n) => {\n  const { \n    order, \n    isLoading, \n  } = useAdminOrder(orderId, {\n    expand: \"customer\"\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {order && <span>{order.display_id}</span>}\n      \n    </div>\n  )\n}\n\nexport default Order\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17711,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17712,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Configurations to apply on the retrieved order."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
															"qualifiedName": "FindParams"
														},
														"name": "FindParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 17713,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																			"qualifiedName": "AdminOrdersRes"
																		},
																		"name": "AdminOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "union",
																	"types": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "reflection",
																			"declaration": {
																				"id": 17714,
																				"name": "__type",
																				"variant": "declaration",
																				"kind": 65536,
																				"flags": {},
																				"children": [
																					{
																						"id": 17715,
																						"name": "expand",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"comment": {
																							"summary": [
																								{
																									"kind": "inline-tag",
																									"tag": "@inheritDoc",
																									"text": "RequestQueryFields.expand"
																								}
																							],
																							"blockTags": [
																								{
																									"tag": "@deprecated",
																									"content": []
																								}
																							]
																						},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						}
																					},
																					{
																						"id": 17716,
																						"name": "fields",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"comment": {
																							"summary": [
																								{
																									"kind": "inline-tag",
																									"tag": "@inheritDoc",
																									"text": "RequestQueryFields.fields"
																								}
																							]
																						},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						}
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"children": [
																							17715,
																							17716
																						]
																					}
																				]
																			}
																		}
																	]
																}
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 17717,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17719,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17718,
																	"name": "order",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/order.d.ts",
																			"qualifiedName": "Order"
																		},
																		"name": "Order",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17719,
																		17718
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17720,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17722,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17721,
																	"name": "order",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/order.d.ts",
																			"qualifiedName": "Order"
																		},
																		"name": "Order",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17722,
																		17721
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17723,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17725,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17724,
																	"name": "order",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/order.d.ts",
																			"qualifiedName": "Order"
																		},
																		"name": "Order",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17725,
																		17724
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17726,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17728,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17727,
																	"name": "order",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/order.d.ts",
																			"qualifiedName": "Order"
																		},
																		"name": "Order",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17728,
																		17727
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										17729,
										17733,
										17737,
										17741,
										17745,
										17749,
										17753,
										17757,
										17761,
										17765,
										17769,
										17679,
										17709
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										17679,
										17709
									]
								},
								{
									"title": "Mutations",
									"children": [
										17729,
										17733,
										17737,
										17741,
										17745,
										17749,
										17753,
										17757,
										17761,
										17765,
										17769
									]
								}
							]
						},
						{
							"id": 16408,
							"name": "Payment Collections",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Payment Collection API Routes](https://docs.medusajs.com/api/admin#payment-collections).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 16619
									},
									{
										"kind": "text",
										"text": ".\n\nA payment collection is useful for managing additional payments, such as for Order Edits, or installment payments."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 17790,
									"name": "useAdminDeletePaymentCollection",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17791,
											"name": "useAdminDeletePaymentCollection",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a payment collection. Only payment collections with the statuses "
													},
													{
														"kind": "code",
														"text": "`canceled`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`not_paid`"
													},
													{
														"kind": "text",
														"text": " can be deleted."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeletePaymentCollection } from \"medusa-react\"\n\ntype Props = {\n  paymentCollectionId: string\n}\n\nconst PaymentCollection = ({ paymentCollectionId }: Props) => {\n  const deleteCollection = useAdminDeletePaymentCollection(\n    paymentCollectionId\n  )\n  // ...\n\n  const handleDelete = () => {\n    deleteCollection.mutate(void 0, {\n      onSuccess: ({ id, object, deleted }) => {\n        console.log(id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default PaymentCollection\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17792,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The payment collection's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17793,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/payment-collections/index.d.ts",
																			"qualifiedName": "AdminPaymentCollectionDeleteRes"
																		},
																		"name": "AdminPaymentCollectionDeleteRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/payment-collections/index.d.ts",
																	"qualifiedName": "AdminPaymentCollectionDeleteRes"
																},
																"name": "AdminPaymentCollectionDeleteRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17794,
									"name": "useAdminUpdatePaymentCollection",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17795,
											"name": "useAdminUpdatePaymentCollection",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a payment collection's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdatePaymentCollection } from \"medusa-react\"\n\ntype Props = {\n  paymentCollectionId: string\n}\n\nconst PaymentCollection = ({ paymentCollectionId }: Props) => {\n  const updateCollection = useAdminUpdatePaymentCollection(\n    paymentCollectionId\n  )\n  // ...\n\n  const handleUpdate = (\n    description: string\n  ) => {\n    updateCollection.mutate({\n      description\n    }, {\n      onSuccess: ({ payment_collection }) => {\n        console.log(payment_collection.description)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default PaymentCollection\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17796,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The payment collection's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17797,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/payment-collections/index.d.ts",
																			"qualifiedName": "AdminPaymentCollectionsRes"
																		},
																		"name": "AdminPaymentCollectionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/payment-collections/update-payment-collection.d.ts",
																	"qualifiedName": "AdminUpdatePaymentCollectionsReq"
																},
																"name": "AdminUpdatePaymentCollectionsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/payment-collections/index.d.ts",
																	"qualifiedName": "AdminPaymentCollectionsRes"
																},
																"name": "AdminPaymentCollectionsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/payment-collections/update-payment-collection.d.ts",
															"qualifiedName": "AdminUpdatePaymentCollectionsReq"
														},
														"name": "AdminUpdatePaymentCollectionsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17798,
									"name": "useAdminMarkPaymentCollectionAsAuthorized",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17799,
											"name": "useAdminMarkPaymentCollectionAsAuthorized",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook sets the status of a payment collection as "
													},
													{
														"kind": "code",
														"text": "`authorized`"
													},
													{
														"kind": "text",
														"text": ". This will also change the "
													},
													{
														"kind": "code",
														"text": "`authorized_amount`"
													},
													{
														"kind": "text",
														"text": " of the payment collection."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminMarkPaymentCollectionAsAuthorized } from \"medusa-react\"\n\ntype Props = {\n  paymentCollectionId: string\n}\n\nconst PaymentCollection = ({ paymentCollectionId }: Props) => {\n  const markAsAuthorized = useAdminMarkPaymentCollectionAsAuthorized(\n    paymentCollectionId\n  )\n  // ...\n\n  const handleAuthorization = () => {\n    markAsAuthorized.mutate(void 0, {\n      onSuccess: ({ payment_collection }) => {\n        console.log(payment_collection.status)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default PaymentCollection\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17800,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The payment collection's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17801,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/payment-collections/index.d.ts",
																			"qualifiedName": "AdminPaymentCollectionsRes"
																		},
																		"name": "AdminPaymentCollectionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/payment-collections/index.d.ts",
																	"qualifiedName": "AdminPaymentCollectionsRes"
																},
																"name": "AdminPaymentCollectionsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17774,
									"name": "useAdminPaymentCollection",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17775,
											"name": "useAdminPaymentCollection",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a Payment Collection's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminPaymentCollection } from \"medusa-react\"\n\ntype Props = {\n  paymentCollectionId: string\n}\n\nconst PaymentCollection = ({ paymentCollectionId }: Props) => {\n  const { \n    payment_collection, \n    isLoading, \n  } = useAdminPaymentCollection(paymentCollectionId)\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {payment_collection && (\n        <span>{payment_collection.status}</span>\n      )}\n      \n    </div>\n  )\n}\n\nexport default PaymentCollection\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17776,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The payment collection's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17777,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/payment-collections/index.d.ts",
																			"qualifiedName": "AdminPaymentCollectionsRes"
																		},
																		"name": "AdminPaymentCollectionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "paymentCollection"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 17778,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17780,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17779,
																	"name": "payment_collection",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/payment-collection.d.ts",
																			"qualifiedName": "PaymentCollection"
																		},
																		"name": "PaymentCollection",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17780,
																		17779
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17781,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17783,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17782,
																	"name": "payment_collection",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/payment-collection.d.ts",
																			"qualifiedName": "PaymentCollection"
																		},
																		"name": "PaymentCollection",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17783,
																		17782
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17784,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17786,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17785,
																	"name": "payment_collection",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/payment-collection.d.ts",
																			"qualifiedName": "PaymentCollection"
																		},
																		"name": "PaymentCollection",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17786,
																		17785
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17787,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17789,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17788,
																	"name": "payment_collection",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/payment-collection.d.ts",
																			"qualifiedName": "PaymentCollection"
																		},
																		"name": "PaymentCollection",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17789,
																		17788
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										17790,
										17794,
										17798,
										17774
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										17774
									]
								},
								{
									"title": "Mutations",
									"children": [
										17790,
										17794,
										17798
									]
								}
							]
						},
						{
							"id": 16409,
							"name": "Payments",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Payment API Routes](https://docs.medusajs.com/api/admin#payments).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 16619
									},
									{
										"kind": "text",
										"text": ".\n\nA payment can be related to an order, swap, return, or more. It can be captured or refunded."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 17819,
									"name": "useAdminPaymentsCapturePayment",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17820,
											"name": "useAdminPaymentsCapturePayment",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook captures a payment."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminPaymentsCapturePayment } from \"medusa-react\"\n\ntype Props = {\n  paymentId: string\n}\n\nconst Payment = ({ paymentId }: Props) => {\n  const capture = useAdminPaymentsCapturePayment(\n    paymentId\n  )\n  // ...\n\n  const handleCapture = () => {\n    capture.mutate(void 0, {\n      onSuccess: ({ payment }) => {\n        console.log(payment.amount)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Payment\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17821,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The payment's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17822,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/payments/index.d.ts",
																			"qualifiedName": "AdminPaymentRes"
																		},
																		"name": "AdminPaymentRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/payments/index.d.ts",
																	"qualifiedName": "AdminPaymentRes"
																},
																"name": "AdminPaymentRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17823,
									"name": "useAdminPaymentsRefundPayment",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17824,
											"name": "useAdminPaymentsRefundPayment",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook refunds a payment. The payment must be captured first."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { RefundReason } from \"@medusajs/medusa\"\nimport { useAdminPaymentsRefundPayment } from \"medusa-react\"\n\ntype Props = {\n  paymentId: string\n}\n\nconst Payment = ({ paymentId }: Props) => {\n  const refund = useAdminPaymentsRefundPayment(\n    paymentId\n  )\n  // ...\n\n  const handleRefund = (\n    amount: number,\n    reason: RefundReason,\n    note: string\n  ) => {\n    refund.mutate({\n      amount,\n      reason,\n      note\n    }, {\n      onSuccess: ({ refund }) => {\n        console.log(refund.amount)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Payment\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17825,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The payment's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17826,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/payments/index.d.ts",
																			"qualifiedName": "AdminRefundRes"
																		},
																		"name": "AdminRefundRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/payments/refund-payment.d.ts",
																	"qualifiedName": "AdminPostPaymentRefundsReq"
																},
																"name": "AdminPostPaymentRefundsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/payments/index.d.ts",
																	"qualifiedName": "AdminRefundRes"
																},
																"name": "AdminRefundRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/payments/refund-payment.d.ts",
															"qualifiedName": "AdminPostPaymentRefundsReq"
														},
														"name": "AdminPostPaymentRefundsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17803,
									"name": "useAdminPayment",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17804,
											"name": "useAdminPayment",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a payment's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminPayment } from \"medusa-react\"\n\ntype Props = {\n  paymentId: string\n}\n\nconst Payment = ({ paymentId }: Props) => {\n  const { \n    payment, \n    isLoading, \n  } = useAdminPayment(paymentId)\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {payment && <span>{payment.amount}</span>}\n      \n    </div>\n  )\n}\n\nexport default Payment\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17805,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The payment's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17806,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/payments/index.d.ts",
																			"qualifiedName": "AdminPaymentRes"
																		},
																		"name": "AdminPaymentRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "payment"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 17807,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17809,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17808,
																	"name": "payment",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/payment.d.ts",
																			"qualifiedName": "Payment"
																		},
																		"name": "Payment",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17809,
																		17808
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17810,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17812,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17811,
																	"name": "payment",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/payment.d.ts",
																			"qualifiedName": "Payment"
																		},
																		"name": "Payment",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17812,
																		17811
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17813,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17815,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17814,
																	"name": "payment",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/payment.d.ts",
																			"qualifiedName": "Payment"
																		},
																		"name": "Payment",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17815,
																		17814
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17816,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17818,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17817,
																	"name": "payment",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/payment.d.ts",
																			"qualifiedName": "Payment"
																		},
																		"name": "Payment",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17818,
																		17817
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										17819,
										17823,
										17803
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										17803
									]
								},
								{
									"title": "Mutations",
									"children": [
										17819,
										17823
									]
								}
							]
						},
						{
							"id": 16410,
							"name": "Price Lists",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Price List API Routes](https://docs.medusajs.com/api/admin#price-lists).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 16619
									},
									{
										"kind": "text",
										"text": ".\n\nA price list are special prices applied to products based on a set of conditions, such as customer group.\n\nRelated Guide: [How to manage price lists](https://docs.medusajs.com/modules/price-lists/admin/manage-price-lists)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 17925,
									"name": "useAdminCreatePriceList",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17926,
											"name": "useAdminCreatePriceList",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a price list."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { \n  PriceListStatus, \n  PriceListType, \n} from \"@medusajs/medusa\"\nimport { useAdminCreatePriceList } from \"medusa-react\"\n\ntype CreateData = {\n  name: string\n  description: string\n  type: PriceListType\n  status: PriceListStatus\n  prices: {\n    amount: number\n    variant_id: string\n    currency_code: string\n    max_quantity: number\n  }[]\n}\n\nconst CreatePriceList = () => {\n  const createPriceList = useAdminCreatePriceList()\n  // ...\n\n  const handleCreate = (\n    data: CreateData\n  ) => {\n    createPriceList.mutate(data, {\n      onSuccess: ({ price_list }) => {\n        console.log(price_list.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CreatePriceList\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17927,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/index.d.ts",
																			"qualifiedName": "AdminPriceListRes"
																		},
																		"name": "AdminPriceListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/create-price-list.d.ts",
																	"qualifiedName": "AdminPostPriceListsPriceListReq"
																},
																"name": "AdminPostPriceListsPriceListReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/index.d.ts",
																	"qualifiedName": "AdminPriceListRes"
																},
																"name": "AdminPriceListRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/create-price-list.d.ts",
															"qualifiedName": "AdminPostPriceListsPriceListReq"
														},
														"name": "AdminPostPriceListsPriceListReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17928,
									"name": "useAdminUpdatePriceList",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17929,
											"name": "useAdminUpdatePriceList",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a price list's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdatePriceList } from \"medusa-react\"\n\ntype Props = {\n  priceListId: string\n}\n\nconst PriceList = ({\n  priceListId\n}: Props) => {\n  const updatePriceList = useAdminUpdatePriceList(priceListId)\n  // ...\n\n  const handleUpdate = (\n    endsAt: Date\n  ) => {\n    updatePriceList.mutate({\n      ends_at: endsAt,\n    }, {\n      onSuccess: ({ price_list }) => {\n        console.log(price_list.ends_at)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default PriceList\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17930,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The price list's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17931,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/index.d.ts",
																			"qualifiedName": "AdminPriceListRes"
																		},
																		"name": "AdminPriceListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/update-price-list.d.ts",
																	"qualifiedName": "AdminPostPriceListsPriceListPriceListReq"
																},
																"name": "AdminPostPriceListsPriceListPriceListReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/index.d.ts",
																	"qualifiedName": "AdminPriceListRes"
																},
																"name": "AdminPriceListRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/update-price-list.d.ts",
															"qualifiedName": "AdminPostPriceListsPriceListPriceListReq"
														},
														"name": "AdminPostPriceListsPriceListPriceListReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17932,
									"name": "useAdminDeletePriceList",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17933,
											"name": "useAdminDeletePriceList",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a price list and its associated prices."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeletePriceList } from \"medusa-react\"\n\ntype Props = {\n  priceListId: string\n}\n\nconst PriceList = ({\n  priceListId\n}: Props) => {\n  const deletePriceList = useAdminDeletePriceList(priceListId)\n  // ...\n\n  const handleDelete = () => {\n    deletePriceList.mutate(void 0, {\n      onSuccess: ({ id, object, deleted }) => {\n        console.log(id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default PriceList\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17934,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The price list's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17935,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																			"qualifiedName": "DeleteResponse"
																		},
																		"name": "DeleteResponse",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																	"qualifiedName": "DeleteResponse"
																},
																"name": "DeleteResponse",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17936,
									"name": "useAdminCreatePriceListPrices",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17937,
											"name": "useAdminCreatePriceListPrices",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook adds or updates a list of prices in a price list."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreatePriceListPrices } from \"medusa-react\"\n\ntype PriceData = {\n  amount: number\n  variant_id: string\n  currency_code: string\n}\n\ntype Props = {\n  priceListId: string\n}\n\nconst PriceList = ({\n  priceListId\n}: Props) => {\n  const addPrices = useAdminCreatePriceListPrices(priceListId)\n  // ...\n\n  const handleAddPrices = (prices: PriceData[]) => {\n    addPrices.mutate({\n      prices\n    }, {\n      onSuccess: ({ price_list }) => {\n        console.log(price_list.prices)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default PriceList\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17938,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The price list's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17939,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/index.d.ts",
																			"qualifiedName": "AdminPriceListRes"
																		},
																		"name": "AdminPriceListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/add-prices-batch.d.ts",
																	"qualifiedName": "AdminPostPriceListPricesPricesReq"
																},
																"name": "AdminPostPriceListPricesPricesReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/index.d.ts",
																	"qualifiedName": "AdminPriceListRes"
																},
																"name": "AdminPriceListRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/add-prices-batch.d.ts",
															"qualifiedName": "AdminPostPriceListPricesPricesReq"
														},
														"name": "AdminPostPriceListPricesPricesReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17940,
									"name": "useAdminDeletePriceListPrices",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17941,
											"name": "useAdminDeletePriceListPrices",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a list of prices in a price list."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeletePriceListPrices } from \"medusa-react\"\n\ntype Props = {\n  priceListId: string\n}\n\nconst PriceList = ({\n  priceListId\n}: Props) => {\n  const deletePrices = useAdminDeletePriceListPrices(priceListId)\n  // ...\n\n  const handleDeletePrices = (priceIds: string[]) => {\n    deletePrices.mutate({\n      price_ids: priceIds\n    }, {\n      onSuccess: ({ ids, deleted, object }) => {\n        console.log(ids)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default PriceList\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17942,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The price list's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17943,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/index.d.ts",
																			"qualifiedName": "AdminPriceListDeleteBatchRes"
																		},
																		"name": "AdminPriceListDeleteBatchRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/delete-prices-batch.d.ts",
																	"qualifiedName": "AdminDeletePriceListPricesPricesReq"
																},
																"name": "AdminDeletePriceListPricesPricesReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/index.d.ts",
																	"qualifiedName": "AdminPriceListDeleteBatchRes"
																},
																"name": "AdminPriceListDeleteBatchRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/delete-prices-batch.d.ts",
															"qualifiedName": "AdminDeletePriceListPricesPricesReq"
														},
														"name": "AdminDeletePriceListPricesPricesReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17944,
									"name": "useAdminDeletePriceListProductsPrices",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17945,
											"name": "useAdminDeletePriceListProductsPrices",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes all the prices associated with multiple products in a price list."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeletePriceListProductsPrices } from \"medusa-react\"\n\ntype Props = {\n  priceListId: string\n}\n\nconst PriceList = ({\n  priceListId\n}: Props) => {\n  const deleteProductsPrices = useAdminDeletePriceListProductsPrices(\n    priceListId\n  )\n  // ...\n\n  const handleDeleteProductsPrices = (productIds: string[]) => {\n    deleteProductsPrices.mutate({\n      product_ids: productIds\n    }, {\n      onSuccess: ({ ids, deleted, object }) => {\n        console.log(ids)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default PriceList\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17946,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The price list's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17947,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/index.d.ts",
																			"qualifiedName": "AdminPriceListDeleteBatchRes"
																		},
																		"name": "AdminPriceListDeleteBatchRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/delete-products-prices-batch.d.ts",
																	"qualifiedName": "AdminDeletePriceListsPriceListProductsPricesBatchReq"
																},
																"name": "AdminDeletePriceListsPriceListProductsPricesBatchReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/index.d.ts",
																	"qualifiedName": "AdminPriceListDeleteBatchRes"
																},
																"name": "AdminPriceListDeleteBatchRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/delete-products-prices-batch.d.ts",
															"qualifiedName": "AdminDeletePriceListsPriceListProductsPricesBatchReq"
														},
														"name": "AdminDeletePriceListsPriceListProductsPricesBatchReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17948,
									"name": "useAdminDeletePriceListProductPrices",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17949,
											"name": "useAdminDeletePriceListProductPrices",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes all the prices related to a specific product in a price list."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { \n  useAdminDeletePriceListProductPrices\n} from \"medusa-react\"\n\ntype Props = {\n  priceListId: string\n  productId: string\n}\n\nconst PriceListProduct = ({\n  priceListId,\n  productId\n}: Props) => {\n  const deleteProductPrices = useAdminDeletePriceListProductPrices(\n    priceListId,\n    productId\n  )\n  // ...\n\n  const handleDeleteProductPrices = () => {\n    deleteProductPrices.mutate(void 0, {\n      onSuccess: ({ ids, deleted, object }) => {\n        console.log(ids)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default PriceListProduct\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17950,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The price list's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17951,
													"name": "productId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17952,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/index.d.ts",
																			"qualifiedName": "AdminPriceListDeleteBatchRes"
																		},
																		"name": "AdminPriceListDeleteBatchRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/index.d.ts",
																	"qualifiedName": "AdminPriceListDeleteBatchRes"
																},
																"name": "AdminPriceListDeleteBatchRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17953,
									"name": "useAdminDeletePriceListVariantPrices",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17954,
											"name": "useAdminDeletePriceListVariantPrices",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes all the prices related to a specific product variant in a price list."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { \n  useAdminDeletePriceListVariantPrices\n} from \"medusa-react\"\n\ntype Props = {\n  priceListId: string\n  variantId: string\n}\n\nconst PriceListVariant = ({\n  priceListId,\n  variantId\n}: Props) => {\n  const deleteVariantPrices = useAdminDeletePriceListVariantPrices(\n    priceListId,\n    variantId\n  )\n  // ...\n\n  const handleDeleteVariantPrices = () => {\n    deleteVariantPrices.mutate(void 0, {\n      onSuccess: ({ ids, deleted, object }) => {\n        console.log(ids)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default PriceListVariant\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17955,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The price list's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17956,
													"name": "variantId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product variant's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17957,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/index.d.ts",
																			"qualifiedName": "AdminPriceListDeleteBatchRes"
																		},
																		"name": "AdminPriceListDeleteBatchRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/index.d.ts",
																	"qualifiedName": "AdminPriceListDeleteBatchRes"
																},
																"name": "AdminPriceListDeleteBatchRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17850,
									"name": "useAdminPriceLists",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17851,
											"name": "useAdminPriceLists",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of price lists. The price lists can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`q`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`status`"
													},
													{
														"kind": "text",
														"text": " passed \nin the "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " parameter. The price lists can also be sorted or paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list price lists:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminPriceLists } from \"medusa-react\"\n\nconst PriceLists = () => {\n  const { price_lists, isLoading } = useAdminPriceLists()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {price_lists && !price_lists.length && (\n        <span>No Price Lists</span>\n      )}\n      {price_lists && price_lists.length > 0 && (\n        <ul>\n          {price_lists.map((price_list) => (\n            <li key={price_list.id}>{price_list.name}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default PriceLists\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify relations that should be retrieved within the price lists:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminPriceLists } from \"medusa-react\"\n\nconst PriceLists = () => {\n  const { price_lists, isLoading } = useAdminPriceLists({\n    expand: \"prices\"\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {price_lists && !price_lists.length && (\n        <span>No Price Lists</span>\n      )}\n      {price_lists && price_lists.length > 0 && (\n        <ul>\n          {price_lists.map((price_list) => (\n            <li key={price_list.id}>{price_list.name}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default PriceLists\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`10`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminPriceLists } from \"medusa-react\"\n\nconst PriceLists = () => {\n  const { \n    price_lists, \n    limit,\n    offset,\n    isLoading\n  } = useAdminPriceLists({\n    expand: \"prices\",\n    limit: 20,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {price_lists && !price_lists.length && (\n        <span>No Price Lists</span>\n      )}\n      {price_lists && price_lists.length > 0 && (\n        <ul>\n          {price_lists.map((price_list) => (\n            <li key={price_list.id}>{price_list.name}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default PriceLists\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17852,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations to apply on the retrieved price lists."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/list-price-lists.d.ts",
															"qualifiedName": "AdminGetPriceListPaginationParams"
														},
														"name": "AdminGetPriceListPaginationParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 17853,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/index.d.ts",
																			"qualifiedName": "AdminPriceListsListRes"
																		},
																		"name": "AdminPriceListsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_price_lists"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 17854,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 17855,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						17855
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 17856,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17861,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17860,
																	"name": "price_lists",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/price-list.d.ts",
																				"qualifiedName": "PriceList"
																			},
																			"name": "PriceList",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 17857,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17858,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17859,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17861,
																		17860,
																		17857,
																		17858,
																		17859
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17862,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17867,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17866,
																	"name": "price_lists",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/price-list.d.ts",
																				"qualifiedName": "PriceList"
																			},
																			"name": "PriceList",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 17863,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17864,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17865,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17867,
																		17866,
																		17863,
																		17864,
																		17865
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17868,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17873,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17872,
																	"name": "price_lists",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/price-list.d.ts",
																				"qualifiedName": "PriceList"
																			},
																			"name": "PriceList",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 17869,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17870,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17871,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17873,
																		17872,
																		17869,
																		17870,
																		17871
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17874,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17879,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17878,
																	"name": "price_lists",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/price-list.d.ts",
																				"qualifiedName": "PriceList"
																			},
																			"name": "PriceList",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 17875,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17876,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17877,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17879,
																		17878,
																		17875,
																		17876,
																		17877
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 17880,
									"name": "useAdminPriceListProducts",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17881,
											"name": "useAdminPriceListProducts",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a price list's products. The products can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`q`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`status`"
													},
													{
														"kind": "text",
														"text": " \npassed in the "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " parameter. The products can also be sorted or paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list products in a price list:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminPriceListProducts } from \"medusa-react\"\n\ntype Props = {\n  priceListId: string\n}\n\nconst PriceListProducts = ({\n  priceListId\n}: Props) => {\n  const { products, isLoading } = useAdminPriceListProducts(\n    priceListId\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {products && !products.length && (\n        <span>No Price Lists</span>\n      )}\n      {products && products.length > 0 && (\n        <ul>\n          {products.map((product) => (\n            <li key={product.id}>{product.title}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default PriceListProducts\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify relations that should be retrieved within the products:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminPriceListProducts } from \"medusa-react\"\n\ntype Props = {\n  priceListId: string\n}\n\nconst PriceListProducts = ({\n  priceListId\n}: Props) => {\n  const { products, isLoading } = useAdminPriceListProducts(\n    priceListId,\n    {\n      expand: \"variants\"\n    }\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {products && !products.length && (\n        <span>No Price Lists</span>\n      )}\n      {products && products.length > 0 && (\n        <ul>\n          {products.map((product) => (\n            <li key={product.id}>{product.title}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default PriceListProducts\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`50`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminPriceListProducts } from \"medusa-react\"\n\ntype Props = {\n  priceListId: string\n}\n\nconst PriceListProducts = ({\n  priceListId\n}: Props) => {\n  const { \n    products,\n    limit,\n    offset,\n    isLoading\n  } = useAdminPriceListProducts(\n    priceListId,\n    {\n      expand: \"variants\",\n      limit: 20,\n      offset: 0\n    }\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {products && !products.length && (\n        <span>No Price Lists</span>\n      )}\n      {products && products.length > 0 && (\n        <ul>\n          {products.map((product) => (\n            <li key={product.id}>{product.title}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default PriceListProducts\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17882,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The ID of the associated price list."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17883,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations applied on the retrieved products."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/list-price-list-products.d.ts",
															"qualifiedName": "AdminGetPriceListsPriceListProductsParams"
														},
														"name": "AdminGetPriceListsPriceListProductsParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 17884,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
																			"qualifiedName": "AdminProductsListRes"
																		},
																		"name": "AdminProductsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "typeOperator",
																"operator": "readonly",
																"target": {
																	"type": "tuple",
																	"elements": [
																		{
																			"type": "literal",
																			"value": "admin_price_lists"
																		},
																		{
																			"type": "literal",
																			"value": "detail"
																		},
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "literal",
																			"value": "products"
																		},
																		{
																			"type": "intrinsic",
																			"name": "any"
																		}
																	]
																}
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 17885,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17890,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17889,
																	"name": "products",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "union",
																			"types": [
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../packages/medusa/dist/models/product.d.ts",
																						"qualifiedName": "Product"
																					},
																					"name": "Product",
																					"package": "@medusajs/medusa"
																				},
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																						"qualifiedName": "PricedProduct"
																					},
																					"name": "PricedProduct",
																					"package": "@medusajs/medusa"
																				}
																			]
																		}
																	}
																},
																{
																	"id": 17886,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17887,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17888,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17890,
																		17889,
																		17886,
																		17887,
																		17888
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17891,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17896,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17895,
																	"name": "products",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "union",
																			"types": [
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../packages/medusa/dist/models/product.d.ts",
																						"qualifiedName": "Product"
																					},
																					"name": "Product",
																					"package": "@medusajs/medusa"
																				},
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																						"qualifiedName": "PricedProduct"
																					},
																					"name": "PricedProduct",
																					"package": "@medusajs/medusa"
																				}
																			]
																		}
																	}
																},
																{
																	"id": 17892,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17893,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17894,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17896,
																		17895,
																		17892,
																		17893,
																		17894
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17897,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17902,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17901,
																	"name": "products",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "union",
																			"types": [
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../packages/medusa/dist/models/product.d.ts",
																						"qualifiedName": "Product"
																					},
																					"name": "Product",
																					"package": "@medusajs/medusa"
																				},
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																						"qualifiedName": "PricedProduct"
																					},
																					"name": "PricedProduct",
																					"package": "@medusajs/medusa"
																				}
																			]
																		}
																	}
																},
																{
																	"id": 17898,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17899,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17900,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17902,
																		17901,
																		17898,
																		17899,
																		17900
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17903,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17908,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17907,
																	"name": "products",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "union",
																			"types": [
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../packages/medusa/dist/models/product.d.ts",
																						"qualifiedName": "Product"
																					},
																					"name": "Product",
																					"package": "@medusajs/medusa"
																				},
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																						"qualifiedName": "PricedProduct"
																					},
																					"name": "PricedProduct",
																					"package": "@medusajs/medusa"
																				}
																			]
																		}
																	}
																},
																{
																	"id": 17904,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17905,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17906,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17908,
																		17907,
																		17904,
																		17905,
																		17906
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 17909,
									"name": "useAdminPriceList",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17910,
											"name": "useAdminPriceList",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a price list's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminPriceList } from \"medusa-react\"\n\ntype Props = {\n  priceListId: string\n}\n\nconst PriceList = ({\n  priceListId\n}: Props) => {\n  const { \n    price_list, \n    isLoading, \n  } = useAdminPriceList(priceListId)\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {price_list && <span>{price_list.name}</span>}\n    </div>\n  )\n}\n\nexport default PriceList\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17911,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The price list's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17912,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/index.d.ts",
																			"qualifiedName": "AdminPriceListRes"
																		},
																		"name": "AdminPriceListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_price_lists"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 17913,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17915,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17914,
																	"name": "price_list",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/price-list.d.ts",
																			"qualifiedName": "PriceList"
																		},
																		"name": "PriceList",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17915,
																		17914
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17916,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17918,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17917,
																	"name": "price_list",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/price-list.d.ts",
																			"qualifiedName": "PriceList"
																		},
																		"name": "PriceList",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17918,
																		17917
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17919,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17921,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17920,
																	"name": "price_list",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/price-list.d.ts",
																			"qualifiedName": "PriceList"
																		},
																		"name": "PriceList",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17921,
																		17920
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17922,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17924,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17923,
																	"name": "price_list",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/price-list.d.ts",
																			"qualifiedName": "PriceList"
																		},
																		"name": "PriceList",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17924,
																		17923
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										17925,
										17928,
										17932,
										17936,
										17940,
										17944,
										17948,
										17953,
										17850,
										17880,
										17909
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										17850,
										17880,
										17909
									]
								},
								{
									"title": "Mutations",
									"children": [
										17925,
										17928,
										17932,
										17936,
										17940,
										17944,
										17948,
										17953
									]
								}
							]
						},
						{
							"id": 16411,
							"name": "Product Categories",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Product Category API Routes](https://docs.medusajs.com/api/admin#product-categories).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 16619
									},
									{
										"kind": "text",
										"text": ".\n\nProducts can be categoriezed into categories. A product can be added into more than one category.\n\nRelated Guide: [How to manage product categories](https://docs.medusajs.com/modules/products/admin/manage-categories)."
									}
								],
								"blockTags": [
									{
										"tag": "@featureFlag",
										"content": [
											{
												"kind": "text",
												"text": "product_categories"
											}
										]
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 18006,
									"name": "useAdminCreateProductCategory",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18007,
											"name": "useAdminCreateProductCategory",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a product category."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateProductCategory } from \"medusa-react\"\n\nconst CreateCategory = () => {\n  const createCategory = useAdminCreateProductCategory()\n  // ...\n\n  const handleCreate = (\n    name: string\n  ) => {\n    createCategory.mutate({\n      name,\n    }, {\n      onSuccess: ({ product_category }) => {\n        console.log(product_category.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CreateCategory\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18008,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/index.d.ts",
																			"qualifiedName": "AdminProductCategoriesCategoryRes"
																		},
																		"name": "AdminProductCategoriesCategoryRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/create-product-category.d.ts",
																	"qualifiedName": "AdminPostProductCategoriesReq"
																},
																"name": "AdminPostProductCategoriesReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/index.d.ts",
																	"qualifiedName": "AdminProductCategoriesCategoryRes"
																},
																"name": "AdminProductCategoriesCategoryRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/create-product-category.d.ts",
															"qualifiedName": "AdminPostProductCategoriesReq"
														},
														"name": "AdminPostProductCategoriesReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 18009,
									"name": "useAdminUpdateProductCategory",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18010,
											"name": "useAdminUpdateProductCategory",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a product category."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateProductCategory } from \"medusa-react\"\n\ntype Props = {\n  productCategoryId: string\n}\n\nconst Category = ({\n  productCategoryId\n}: Props) => {\n  const updateCategory = useAdminUpdateProductCategory(\n    productCategoryId\n  )\n  // ...\n\n  const handleUpdate = (\n    name: string\n  ) => {\n    updateCategory.mutate({\n      name,\n    }, {\n      onSuccess: ({ product_category }) => {\n        console.log(product_category.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Category\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18011,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product category's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 18012,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/index.d.ts",
																			"qualifiedName": "AdminProductCategoriesCategoryRes"
																		},
																		"name": "AdminProductCategoriesCategoryRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/update-product-category.d.ts",
																	"qualifiedName": "AdminPostProductCategoriesCategoryReq"
																},
																"name": "AdminPostProductCategoriesCategoryReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/index.d.ts",
																	"qualifiedName": "AdminProductCategoriesCategoryRes"
																},
																"name": "AdminProductCategoriesCategoryRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/update-product-category.d.ts",
															"qualifiedName": "AdminPostProductCategoriesCategoryReq"
														},
														"name": "AdminPostProductCategoriesCategoryReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 18013,
									"name": "useAdminDeleteProductCategory",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18014,
											"name": "useAdminDeleteProductCategory",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a product category. This does not delete associated products."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteProductCategory } from \"medusa-react\"\n\ntype Props = {\n  productCategoryId: string\n}\n\nconst Category = ({\n  productCategoryId\n}: Props) => {\n  const deleteCategory = useAdminDeleteProductCategory(\n    productCategoryId\n  )\n  // ...\n\n  const handleDelete = () => {\n    deleteCategory.mutate(void 0, {\n      onSuccess: ({ id, object, deleted }) => {\n        console.log(id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Category\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18015,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product category's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 18016,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																			"qualifiedName": "DeleteResponse"
																		},
																		"name": "DeleteResponse",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																	"qualifiedName": "DeleteResponse"
																},
																"name": "DeleteResponse",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 18017,
									"name": "useAdminAddProductsToCategory",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18018,
											"name": "useAdminAddProductsToCategory",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook adds a list of products to a product category."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminAddProductsToCategory } from \"medusa-react\"\n\ntype ProductsData = {\n  id: string\n}\n\ntype Props = {\n  productCategoryId: string\n}\n\nconst Category = ({\n  productCategoryId\n}: Props) => {\n  const addProducts = useAdminAddProductsToCategory(\n    productCategoryId\n  )\n  // ...\n\n  const handleAddProducts = (\n    productIds: ProductsData[]\n  ) => {\n    addProducts.mutate({\n      product_ids: productIds\n    }, {\n      onSuccess: ({ product_category }) => {\n        console.log(product_category.products)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Category\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18019,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product category's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 18020,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/index.d.ts",
																			"qualifiedName": "AdminProductCategoriesCategoryRes"
																		},
																		"name": "AdminProductCategoriesCategoryRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/add-products-batch.d.ts",
																	"qualifiedName": "AdminPostProductCategoriesCategoryProductsBatchReq"
																},
																"name": "AdminPostProductCategoriesCategoryProductsBatchReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/index.d.ts",
																	"qualifiedName": "AdminProductCategoriesCategoryRes"
																},
																"name": "AdminProductCategoriesCategoryRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/add-products-batch.d.ts",
															"qualifiedName": "AdminPostProductCategoriesCategoryProductsBatchReq"
														},
														"name": "AdminPostProductCategoriesCategoryProductsBatchReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 18021,
									"name": "useAdminDeleteProductsFromCategory",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18022,
											"name": "useAdminDeleteProductsFromCategory",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook removes a list of products from a product category."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteProductsFromCategory } from \"medusa-react\"\n\ntype ProductsData = {\n  id: string\n}\n\ntype Props = {\n  productCategoryId: string\n}\n\nconst Category = ({\n  productCategoryId\n}: Props) => {\n  const deleteProducts = useAdminDeleteProductsFromCategory(\n    productCategoryId\n  )\n  // ...\n\n  const handleDeleteProducts = (\n    productIds: ProductsData[]\n  ) => {\n    deleteProducts.mutate({\n      product_ids: productIds\n    }, {\n      onSuccess: ({ product_category }) => {\n        console.log(product_category.products)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Category\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18023,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product category's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 18024,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/index.d.ts",
																			"qualifiedName": "AdminProductCategoriesCategoryRes"
																		},
																		"name": "AdminProductCategoriesCategoryRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/delete-products-batch.d.ts",
																	"qualifiedName": "AdminDeleteProductCategoriesCategoryProductsBatchReq"
																},
																"name": "AdminDeleteProductCategoriesCategoryProductsBatchReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/index.d.ts",
																	"qualifiedName": "AdminProductCategoriesCategoryRes"
																},
																"name": "AdminProductCategoriesCategoryRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/delete-products-batch.d.ts",
															"qualifiedName": "AdminDeleteProductCategoriesCategoryProductsBatchReq"
														},
														"name": "AdminDeleteProductCategoriesCategoryProductsBatchReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 17959,
									"name": "useAdminProductCategories",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17960,
											"name": "useAdminProductCategories",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook"
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list product categories:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminProductCategories } from \"medusa-react\"\n\nfunction Categories() {\n  const { \n    product_categories,\n    isLoading \n  } = useAdminProductCategories()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {product_categories && !product_categories.length && (\n        <span>No Categories</span>\n      )}\n      {product_categories && product_categories.length > 0 && (\n        <ul>\n          {product_categories.map(\n            (category) => (\n              <li key={category.id}>{category.name}</li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Categories\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify relations that should be retrieved within the product category:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminProductCategories } from \"medusa-react\"\n\nfunction Categories() {\n  const { \n    product_categories,\n    isLoading \n  } = useAdminProductCategories({\n    expand: \"category_children\"\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {product_categories && !product_categories.length && (\n        <span>No Categories</span>\n      )}\n      {product_categories && product_categories.length > 0 && (\n        <ul>\n          {product_categories.map(\n            (category) => (\n              <li key={category.id}>{category.name}</li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Categories\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`100`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminProductCategories } from \"medusa-react\"\n\nfunction Categories() {\n  const { \n    product_categories,\n    limit,\n    offset,\n    isLoading \n  } = useAdminProductCategories({\n    expand: \"category_children\",\n    limit: 20,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {product_categories && !product_categories.length && (\n        <span>No Categories</span>\n      )}\n      {product_categories && product_categories.length > 0 && (\n        <ul>\n          {product_categories.map(\n            (category) => (\n              <li key={category.id}>{category.name}</li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Categories\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17961,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations to apply on the retrieved product categories."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/list-product-categories.d.ts",
															"qualifiedName": "AdminGetProductCategoriesParams"
														},
														"name": "AdminGetProductCategoriesParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 17962,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/index.d.ts",
																			"qualifiedName": "AdminProductCategoriesListRes"
																		},
																		"name": "AdminProductCategoriesListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "product_categories"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 17963,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 17964,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						17964
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 17965,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17970,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17969,
																	"name": "product_categories",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-category.d.ts",
																				"qualifiedName": "ProductCategory"
																			},
																			"name": "ProductCategory",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 17966,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17967,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17968,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17970,
																		17969,
																		17966,
																		17967,
																		17968
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17971,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17976,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17975,
																	"name": "product_categories",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-category.d.ts",
																				"qualifiedName": "ProductCategory"
																			},
																			"name": "ProductCategory",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 17972,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17973,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17974,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17976,
																		17975,
																		17972,
																		17973,
																		17974
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17977,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17982,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17981,
																	"name": "product_categories",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-category.d.ts",
																				"qualifiedName": "ProductCategory"
																			},
																			"name": "ProductCategory",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 17978,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17979,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17980,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17982,
																		17981,
																		17978,
																		17979,
																		17980
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17983,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17988,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17987,
																	"name": "product_categories",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-category.d.ts",
																				"qualifiedName": "ProductCategory"
																			},
																			"name": "ProductCategory",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 17984,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17985,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 17986,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17988,
																		17987,
																		17984,
																		17985,
																		17986
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 17989,
									"name": "useAdminProductCategory",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 17990,
											"name": "useAdminProductCategory",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a product category's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "A simple example that retrieves an order by its ID:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminProductCategory } from \"medusa-react\"\n\ntype Props = {\n  productCategoryId: string\n}\n\nconst Category = ({\n  productCategoryId\n}: Props) => {\n  const { \n    product_category, \n    isLoading, \n  } = useAdminProductCategory(productCategoryId)\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {product_category && (\n        <span>{product_category.name}</span>\n      )}\n      \n    </div>\n  )\n}\n\nexport default Category\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify relations that should be retrieved:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminProductCategory } from \"medusa-react\"\n\ntype Props = {\n  productCategoryId: string\n}\n\nconst Category = ({\n  productCategoryId\n}: Props) => {\n  const { \n    product_category, \n    isLoading, \n  } = useAdminProductCategory(productCategoryId, {\n    expand: \"category_children\"\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {product_category && (\n        <span>{product_category.name}</span>\n      )}\n      \n    </div>\n  )\n}\n\nexport default Category\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 17991,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product category's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 17992,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Configurations to apply on the retrieved product category."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/get-product-category.d.ts",
															"qualifiedName": "AdminGetProductCategoryParams"
														},
														"name": "AdminGetProductCategoryParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 17993,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/index.d.ts",
																			"qualifiedName": "AdminProductCategoriesCategoryRes"
																		},
																		"name": "AdminProductCategoriesCategoryRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "product_categories"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 17994,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17996,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17995,
																	"name": "product_category",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/product-category.d.ts",
																			"qualifiedName": "ProductCategory"
																		},
																		"name": "ProductCategory",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17996,
																		17995
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17997,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17999,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 17998,
																	"name": "product_category",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/product-category.d.ts",
																			"qualifiedName": "ProductCategory"
																		},
																		"name": "ProductCategory",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17999,
																		17998
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18000,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18002,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18001,
																	"name": "product_category",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/product-category.d.ts",
																			"qualifiedName": "ProductCategory"
																		},
																		"name": "ProductCategory",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18002,
																		18001
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18003,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18005,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18004,
																	"name": "product_category",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/product-category.d.ts",
																			"qualifiedName": "ProductCategory"
																		},
																		"name": "ProductCategory",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18005,
																		18004
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										18006,
										18009,
										18013,
										18017,
										18021,
										17959,
										17989
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										17959,
										17989
									]
								},
								{
									"title": "Mutations",
									"children": [
										18006,
										18009,
										18013,
										18017,
										18021
									]
								}
							]
						},
						{
							"id": 16412,
							"name": "Product Tags",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Product Tag API Routes](https://docs.medusajs.com/api/admin#product-tags).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 16619
									},
									{
										"kind": "text",
										"text": ".\n\nProduct tags are string values created when you create or update a product with a new tag.\nProducts can have more than one tag, and products can share tags. This allows admins to associate products to similar tags that can be used to filter products."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 18026,
									"name": "useAdminProductTags",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18027,
											"name": "useAdminProductTags",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of product tags. The product tags can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`q`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`value`"
													},
													{
														"kind": "text",
														"text": " passed \nin the "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " parameter. The product tags can also be sorted or paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list product tags:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminProductTags } from \"medusa-react\"\n\nfunction ProductTags() {\n  const { \n    product_tags,\n    isLoading \n  } = useAdminProductTags()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {product_tags && !product_tags.length && (\n        <span>No Product Tags</span>\n      )}\n      {product_tags && product_tags.length > 0 && (\n        <ul>\n          {product_tags.map(\n            (tag) => (\n              <li key={tag.id}>{tag.value}</li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default ProductTags\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`10`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminProductTags } from \"medusa-react\"\n\nfunction ProductTags() {\n  const { \n    product_tags,\n    limit,\n    offset,\n    isLoading \n  } = useAdminProductTags({\n    limit: 20,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {product_tags && !product_tags.length && (\n        <span>No Product Tags</span>\n      )}\n      {product_tags && product_tags.length > 0 && (\n        <ul>\n          {product_tags.map(\n            (tag) => (\n              <li key={tag.id}>{tag.value}</li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default ProductTags\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18028,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations to apply on the retrieved product tags."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-tags/list-product-tags.d.ts",
															"qualifiedName": "AdminGetProductTagsParams"
														},
														"name": "AdminGetProductTagsParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 18029,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-tags/index.d.ts",
																			"qualifiedName": "AdminProductTagsListRes"
																		},
																		"name": "AdminProductTagsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_product_tags"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 18030,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 18031,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						18031
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 18032,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18037,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18036,
																	"name": "product_tags",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-tag.d.ts",
																				"qualifiedName": "ProductTag"
																			},
																			"name": "ProductTag",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 18033,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18034,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18035,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18037,
																		18036,
																		18033,
																		18034,
																		18035
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18038,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18043,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18042,
																	"name": "product_tags",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-tag.d.ts",
																				"qualifiedName": "ProductTag"
																			},
																			"name": "ProductTag",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 18039,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18040,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18041,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18043,
																		18042,
																		18039,
																		18040,
																		18041
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18044,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18049,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18048,
																	"name": "product_tags",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-tag.d.ts",
																				"qualifiedName": "ProductTag"
																			},
																			"name": "ProductTag",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 18045,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18046,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18047,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18049,
																		18048,
																		18045,
																		18046,
																		18047
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18050,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18055,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18054,
																	"name": "product_tags",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-tag.d.ts",
																				"qualifiedName": "ProductTag"
																			},
																			"name": "ProductTag",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 18051,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18052,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18053,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18055,
																		18054,
																		18051,
																		18052,
																		18053
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										18026
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										18026
									]
								}
							]
						},
						{
							"id": 16413,
							"name": "Product Types",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Product Type API Routes](https://docs.medusajs.com/api/admin#product-types).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 16619
									},
									{
										"kind": "text",
										"text": ".\n\nProduct types are string values created when you create or update a product with a new type.\nProducts can have one type, and products can share types. This allows admins to associate products with a type that can be used to filter products."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 18057,
									"name": "useAdminProductTypes",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18058,
											"name": "useAdminProductTypes",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of product types. The product types can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`q`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`value`"
													},
													{
														"kind": "text",
														"text": " passed in the "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " parameter.\nThe product types can also be sorted or paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list product types:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminProductTypes } from \"medusa-react\"\n\nfunction ProductTypes() {\n  const { \n    product_types,\n    isLoading \n  } = useAdminProductTypes()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {product_types && !product_types.length && (\n        <span>No Product Tags</span>\n      )}\n      {product_types && product_types.length > 0 && (\n        <ul>\n          {product_types.map(\n            (type) => (\n              <li key={type.id}>{type.value}</li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default ProductTypes\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`20`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminProductTypes } from \"medusa-react\"\n\nfunction ProductTypes() {\n  const { \n    product_types,\n    limit,\n    offset,\n    isLoading \n  } = useAdminProductTypes({\n    limit: 10,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {product_types && !product_types.length && (\n        <span>No Product Tags</span>\n      )}\n      {product_types && product_types.length > 0 && (\n        <ul>\n          {product_types.map(\n            (type) => (\n              <li key={type.id}>{type.value}</li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default ProductTypes\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18059,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations to apply on the retrieved product types."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-types/list-product-types.d.ts",
															"qualifiedName": "AdminGetProductTypesParams"
														},
														"name": "AdminGetProductTypesParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 18060,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-types/index.d.ts",
																			"qualifiedName": "AdminProductTypesListRes"
																		},
																		"name": "AdminProductTypesListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_product_types"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 18061,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 18062,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						18062
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 18063,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18068,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18067,
																	"name": "product_types",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-type.d.ts",
																				"qualifiedName": "ProductType"
																			},
																			"name": "ProductType",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 18064,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18065,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18066,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18068,
																		18067,
																		18064,
																		18065,
																		18066
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18069,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18074,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18073,
																	"name": "product_types",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-type.d.ts",
																				"qualifiedName": "ProductType"
																			},
																			"name": "ProductType",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 18070,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18071,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18072,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18074,
																		18073,
																		18070,
																		18071,
																		18072
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18075,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18080,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18079,
																	"name": "product_types",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-type.d.ts",
																				"qualifiedName": "ProductType"
																			},
																			"name": "ProductType",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 18076,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18077,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18078,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18080,
																		18079,
																		18076,
																		18077,
																		18078
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18081,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18086,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18085,
																	"name": "product_types",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-type.d.ts",
																				"qualifiedName": "ProductType"
																			},
																			"name": "ProductType",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 18082,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18083,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18084,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18086,
																		18085,
																		18082,
																		18083,
																		18084
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										18057
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										18057
									]
								}
							]
						},
						{
							"id": 16414,
							"name": "Products",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Product API Routes](https://docs.medusajs.com/api/admin#products).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 16619
									},
									{
										"kind": "text",
										"text": ".\n\nProducts are saleable items in a store. This also includes [saleable gift cards](https://docs.medusajs.com/modules/gift-cards/admin/manage-gift-cards#manage-gift-card-product) in a store.\n\nRelated Guide: [How to manage products](https://docs.medusajs.com/modules/products/admin/manage-products)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 18209,
									"name": "useAdminCreateProduct",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18210,
											"name": "useAdminCreateProduct",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a new Product. This hook can also be used to create a gift card if the "
													},
													{
														"kind": "code",
														"text": "`is_giftcard`"
													},
													{
														"kind": "text",
														"text": " field is set to "
													},
													{
														"kind": "code",
														"text": "`true`"
													},
													{
														"kind": "text",
														"text": "."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateProduct } from \"medusa-react\"\n\ntype CreateProductData = {\n  title: string\n  is_giftcard: boolean\n  discountable: boolean\n  options: {\n    title: string\n  }[]\n  variants: {\n    title: string\n    prices: {\n      amount: number\n      currency_code :string\n    }[]\n    options: {\n      value: string\n    }[]\n  }[],\n  collection_id: string\n  categories: {\n    id: string\n  }[]\n  type: {\n    value: string\n  }\n  tags: {\n    value: string\n  }[]\n}\n\nconst CreateProduct = () => {\n  const createProduct = useAdminCreateProduct()\n  // ...\n\n  const handleCreate = (productData: CreateProductData) => {\n    createProduct.mutate(productData, {\n      onSuccess: ({ product }) => {\n        console.log(product.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CreateProduct\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18211,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
																			"qualifiedName": "AdminProductsRes"
																		},
																		"name": "AdminProductsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/create-product.d.ts",
																	"qualifiedName": "AdminPostProductsReq"
																},
																"name": "AdminPostProductsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
																	"qualifiedName": "AdminProductsRes"
																},
																"name": "AdminProductsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/create-product.d.ts",
															"qualifiedName": "AdminPostProductsReq"
														},
														"name": "AdminPostProductsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 18212,
									"name": "useAdminUpdateProduct",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18213,
											"name": "useAdminUpdateProduct",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a Product's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateProduct } from \"medusa-react\"\n\ntype Props = {\n  productId: string\n}\n\nconst Product = ({ productId }: Props) => {\n  const updateProduct = useAdminUpdateProduct(\n    productId\n  )\n  // ...\n\n  const handleUpdate = (\n    title: string\n  ) => {\n    updateProduct.mutate({\n      title,\n    }, {\n      onSuccess: ({ product }) => {\n        console.log(product.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Product\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18214,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 18215,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
																			"qualifiedName": "AdminProductsRes"
																		},
																		"name": "AdminProductsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/update-product.d.ts",
																	"qualifiedName": "AdminPostProductsProductReq"
																},
																"name": "AdminPostProductsProductReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
																	"qualifiedName": "AdminProductsRes"
																},
																"name": "AdminProductsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/update-product.d.ts",
															"qualifiedName": "AdminPostProductsProductReq"
														},
														"name": "AdminPostProductsProductReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 18216,
									"name": "useAdminDeleteProduct",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18217,
											"name": "useAdminDeleteProduct",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a product and its associated product variants and options."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteProduct } from \"medusa-react\"\n\ntype Props = {\n  productId: string\n}\n\nconst Product = ({ productId }: Props) => {\n  const deleteProduct = useAdminDeleteProduct(\n    productId\n  )\n  // ...\n\n  const handleDelete = () => {\n    deleteProduct.mutate(void 0, {\n      onSuccess: ({ id, object, deleted}) => {\n        console.log(id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Product\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18218,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 18219,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
																			"qualifiedName": "AdminProductsDeleteRes"
																		},
																		"name": "AdminProductsDeleteRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
																	"qualifiedName": "AdminProductsDeleteRes"
																},
																"name": "AdminProductsDeleteRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 18220,
									"name": "useAdminCreateVariant",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18221,
											"name": "useAdminCreateVariant",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a product variant associated with a product. Each product variant must have a unique combination of product option values."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateVariant } from \"medusa-react\"\n\ntype CreateVariantData = {\n  title: string\n  prices: {\n    amount: number\n    currency_code: string\n  }[]\n  options: {\n    option_id: string\n    value: string\n  }[]\n}\n\ntype Props = {\n  productId: string\n}\n\nconst CreateProductVariant = ({ productId }: Props) => {\n  const createVariant = useAdminCreateVariant(\n    productId\n  )\n  // ...\n\n  const handleCreate = (\n    variantData: CreateVariantData\n  ) => {\n    createVariant.mutate(variantData, {\n      onSuccess: ({ product }) => {\n        console.log(product.variants)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CreateProductVariant\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18222,
													"name": "productId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 18223,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
																			"qualifiedName": "AdminProductsRes"
																		},
																		"name": "AdminProductsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/create-variant.d.ts",
																	"qualifiedName": "AdminPostProductsProductVariantsReq"
																},
																"name": "AdminPostProductsProductVariantsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
																	"qualifiedName": "AdminProductsRes"
																},
																"name": "AdminProductsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/create-variant.d.ts",
															"qualifiedName": "AdminPostProductsProductVariantsReq"
														},
														"name": "AdminPostProductsProductVariantsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 18227,
									"name": "useAdminUpdateVariant",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18228,
											"name": "useAdminUpdateVariant",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a product variant's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateVariant } from \"medusa-react\"\n\ntype Props = {\n  productId: string\n  variantId: string\n}\n\nconst ProductVariant = ({\n  productId,\n  variantId\n}: Props) => {\n  const updateVariant = useAdminUpdateVariant(\n    productId\n  )\n  // ...\n\n  const handleUpdate = (title: string) => {\n    updateVariant.mutate({\n      variant_id: variantId,\n      title,\n    }, {\n      onSuccess: ({ product }) => {\n        console.log(product.variants)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default ProductVariant\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18229,
													"name": "productId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 18230,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
																			"qualifiedName": "AdminProductsRes"
																		},
																		"name": "AdminProductsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": 18224,
																"name": "AdminUpdateVariantReq",
																"package": "medusa-react"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
																	"qualifiedName": "AdminProductsRes"
																},
																"name": "AdminProductsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": 18224,
														"name": "AdminUpdateVariantReq",
														"package": "medusa-react"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 18231,
									"name": "useAdminDeleteVariant",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18232,
											"name": "useAdminDeleteVariant",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a product variant."
													}
												],
												"blockTags": [
													{
														"tag": "@typeParamDefinition",
														"content": [
															{
																"kind": "text",
																"text": "string - The ID of the product variant to delete."
															}
														]
													},
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteVariant } from \"medusa-react\"\n\ntype Props = {\n  productId: string\n  variantId: string\n}\n\nconst ProductVariant = ({\n  productId,\n  variantId\n}: Props) => {\n  const deleteVariant = useAdminDeleteVariant(\n    productId\n  )\n  // ...\n\n  const handleDelete = () => {\n    deleteVariant.mutate(variantId, {\n      onSuccess: ({ variant_id, object, deleted, product }) => {\n        console.log(product.variants)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default ProductVariant\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18233,
													"name": "productId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 18234,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
																			"qualifiedName": "AdminProductsDeleteVariantRes"
																		},
																		"name": "AdminProductsDeleteVariantRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
																	"qualifiedName": "AdminProductsDeleteVariantRes"
																},
																"name": "AdminProductsDeleteVariantRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 18235,
									"name": "useAdminCreateProductOption",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18236,
											"name": "useAdminCreateProductOption",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook adds a product option to a product."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateProductOption } from \"medusa-react\"\n\ntype Props = {\n  productId: string\n}\n\nconst CreateProductOption = ({ productId }: Props) => {\n  const createOption = useAdminCreateProductOption(\n    productId\n  )\n  // ...\n\n  const handleCreate = (\n    title: string\n  ) => {\n    createOption.mutate({\n      title\n    }, {\n      onSuccess: ({ product }) => {\n        console.log(product.options)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CreateProductOption\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18237,
													"name": "productId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 18238,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
																			"qualifiedName": "AdminProductsRes"
																		},
																		"name": "AdminProductsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/add-option.d.ts",
																	"qualifiedName": "AdminPostProductsProductOptionsReq"
																},
																"name": "AdminPostProductsProductOptionsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
																	"qualifiedName": "AdminProductsRes"
																},
																"name": "AdminProductsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/add-option.d.ts",
															"qualifiedName": "AdminPostProductsProductOptionsReq"
														},
														"name": "AdminPostProductsProductOptionsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 18242,
									"name": "useAdminUpdateProductOption",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18243,
											"name": "useAdminUpdateProductOption",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a product option's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateProductOption } from \"medusa-react\"\n\ntype Props = {\n  productId: string\n  optionId: string\n}\n\nconst ProductOption = ({\n  productId,\n  optionId\n}: Props) => {\n  const updateOption = useAdminUpdateProductOption(\n    productId\n  )\n  // ...\n\n  const handleUpdate = (\n    title: string\n  ) => {\n    updateOption.mutate({\n      option_id: optionId,\n      title,\n    }, {\n      onSuccess: ({ product }) => {\n        console.log(product.options)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default ProductOption\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18244,
													"name": "productId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 18245,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
																			"qualifiedName": "AdminProductsRes"
																		},
																		"name": "AdminProductsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": 18239,
																"name": "AdminUpdateProductOptionReq",
																"package": "medusa-react"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
																	"qualifiedName": "AdminProductsRes"
																},
																"name": "AdminProductsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": 18239,
														"name": "AdminUpdateProductOptionReq",
														"package": "medusa-react"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 18246,
									"name": "useAdminDeleteProductOption",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18247,
											"name": "useAdminDeleteProductOption",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a product option. If there are product variants that use this product option, \nthey must be deleted before deleting the product option."
													}
												],
												"blockTags": [
													{
														"tag": "@typeParamDefinition",
														"content": [
															{
																"kind": "text",
																"text": "string - The ID of the product option to delete."
															}
														]
													},
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteProductOption } from \"medusa-react\"\n\ntype Props = {\n  productId: string\n  optionId: string\n}\n\nconst ProductOption = ({\n  productId,\n  optionId\n}: Props) => {\n  const deleteOption = useAdminDeleteProductOption(\n    productId\n  )\n  // ...\n\n  const handleDelete = () => {\n    deleteOption.mutate(optionId, {\n      onSuccess: ({ option_id, object, deleted, product }) => {\n        console.log(product.options)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default ProductOption\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18248,
													"name": "productId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 18249,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
																			"qualifiedName": "AdminProductsDeleteOptionRes"
																		},
																		"name": "AdminProductsDeleteOptionRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
																	"qualifiedName": "AdminProductsDeleteOptionRes"
																},
																"name": "AdminProductsDeleteOptionRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 18110,
									"name": "useAdminProducts",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18111,
											"name": "useAdminProducts",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of products. The products can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`q`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`status`"
													},
													{
														"kind": "text",
														"text": " passed in\nthe "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " parameter. The products can also be sorted or paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list products:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminProducts } from \"medusa-react\"\n\nconst Products = () => {\n  const { products, isLoading } = useAdminProducts()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {products && !products.length && <span>No Products</span>}\n      {products && products.length > 0 && (\n        <ul>\n          {products.map((product) => (\n            <li key={product.id}>{product.title}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Products\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify relations that should be retrieved within the products:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminProducts } from \"medusa-react\"\n\nconst Products = () => {\n  const { products, isLoading } = useAdminProducts({\n    expand: \"images\"\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {products && !products.length && <span>No Products</span>}\n      {products && products.length > 0 && (\n        <ul>\n          {products.map((product) => (\n            <li key={product.id}>{product.title}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Products\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`50`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminProducts } from \"medusa-react\"\n\nconst Products = () => {\n  const {\n    products,\n    limit,\n    offset,\n    isLoading\n  } = useAdminProducts({\n    expand: \"images\",\n    limit: 20,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {products && !products.length && <span>No Products</span>}\n      {products && products.length > 0 && (\n        <ul>\n          {products.map((product) => (\n            <li key={product.id}>{product.title}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Products\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18112,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations to apply on the retrieved products."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/list-products.d.ts",
															"qualifiedName": "AdminGetProductsParams"
														},
														"name": "AdminGetProductsParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 18113,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
																			"qualifiedName": "AdminProductsListRes"
																		},
																		"name": "AdminProductsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_products"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 18114,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 18115,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						18115
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 18116,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18121,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18120,
																	"name": "products",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "union",
																			"types": [
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../packages/medusa/dist/models/product.d.ts",
																						"qualifiedName": "Product"
																					},
																					"name": "Product",
																					"package": "@medusajs/medusa"
																				},
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																						"qualifiedName": "PricedProduct"
																					},
																					"name": "PricedProduct",
																					"package": "@medusajs/medusa"
																				}
																			]
																		}
																	}
																},
																{
																	"id": 18117,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18118,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18119,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18121,
																		18120,
																		18117,
																		18118,
																		18119
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18122,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18127,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18126,
																	"name": "products",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "union",
																			"types": [
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../packages/medusa/dist/models/product.d.ts",
																						"qualifiedName": "Product"
																					},
																					"name": "Product",
																					"package": "@medusajs/medusa"
																				},
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																						"qualifiedName": "PricedProduct"
																					},
																					"name": "PricedProduct",
																					"package": "@medusajs/medusa"
																				}
																			]
																		}
																	}
																},
																{
																	"id": 18123,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18124,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18125,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18127,
																		18126,
																		18123,
																		18124,
																		18125
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18128,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18133,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18132,
																	"name": "products",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "union",
																			"types": [
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../packages/medusa/dist/models/product.d.ts",
																						"qualifiedName": "Product"
																					},
																					"name": "Product",
																					"package": "@medusajs/medusa"
																				},
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																						"qualifiedName": "PricedProduct"
																					},
																					"name": "PricedProduct",
																					"package": "@medusajs/medusa"
																				}
																			]
																		}
																	}
																},
																{
																	"id": 18129,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18130,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18131,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18133,
																		18132,
																		18129,
																		18130,
																		18131
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18134,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18139,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18138,
																	"name": "products",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "union",
																			"types": [
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../packages/medusa/dist/models/product.d.ts",
																						"qualifiedName": "Product"
																					},
																					"name": "Product",
																					"package": "@medusajs/medusa"
																				},
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																						"qualifiedName": "PricedProduct"
																					},
																					"name": "PricedProduct",
																					"package": "@medusajs/medusa"
																				}
																			]
																		}
																	}
																},
																{
																	"id": 18135,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18136,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18137,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18139,
																		18138,
																		18135,
																		18136,
																		18137
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 18140,
									"name": "useAdminProduct",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18141,
											"name": "useAdminProduct",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a product's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminProduct } from \"medusa-react\"\n\ntype Props = {\n  productId: string\n}\n\nconst Product = ({ productId }: Props) => {\n  const {\n    product,\n    isLoading,\n  } = useAdminProduct(productId)\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {product && <span>{product.title}</span>}\n\n    </div>\n  )\n}\n\nexport default Product\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18142,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 18143,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Configurations to apply on the retrieved product."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/get-product.d.ts",
															"qualifiedName": "AdminGetProductParams"
														},
														"name": "AdminGetProductParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 18144,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
																			"qualifiedName": "AdminProductsRes"
																		},
																		"name": "AdminProductsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_products"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 18145,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18147,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18146,
																	"name": "product",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/product.d.ts",
																			"qualifiedName": "Product"
																		},
																		"name": "Product",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18147,
																		18146
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18148,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18150,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18149,
																	"name": "product",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/product.d.ts",
																			"qualifiedName": "Product"
																		},
																		"name": "Product",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18150,
																		18149
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18151,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18153,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18152,
																	"name": "product",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/product.d.ts",
																			"qualifiedName": "Product"
																		},
																		"name": "Product",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18153,
																		18152
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18154,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18156,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18155,
																	"name": "product",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/product.d.ts",
																			"qualifiedName": "Product"
																		},
																		"name": "Product",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18156,
																		18155
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 18186,
									"name": "useAdminProductTagUsage",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18187,
											"name": "useAdminProductTagUsage",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of Product Tags with how many times each is used in products."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminProductTagUsage } from \"medusa-react\"\n\nconst ProductTags = (productId: string) => {\n  const { tags, isLoading } = useAdminProductTagUsage()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {tags && !tags.length && <span>No Product Tags</span>}\n      {tags && tags.length > 0 && (\n        <ul>\n          {tags.map((tag) => (\n            <li key={tag.id}>{tag.value} - {tag.usage_count}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default ProductTags\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18188,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
																			"qualifiedName": "AdminProductsListTagsRes"
																		},
																		"name": "AdminProductsListTagsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_products"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 18189,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18193,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18190,
																	"name": "tags",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intersection",
																			"types": [
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																						"qualifiedName": "Pick"
																					},
																					"typeArguments": [
																						{
																							"type": "reference",
																							"target": {
																								"sourceFileName": "../../../packages/medusa/dist/models/product-tag.d.ts",
																								"qualifiedName": "ProductTag"
																							},
																							"name": "ProductTag",
																							"package": "@medusajs/medusa"
																						},
																						{
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": "value"
																								},
																								{
																									"type": "literal",
																									"value": "id"
																								}
																							]
																						}
																					],
																					"name": "Pick",
																					"package": "typescript"
																				},
																				{
																					"type": "reflection",
																					"declaration": {
																						"id": 18191,
																						"name": "__type",
																						"variant": "declaration",
																						"kind": 65536,
																						"flags": {},
																						"children": [
																							{
																								"id": 18192,
																								"name": "usage_count",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {},
																								"type": {
																									"type": "intrinsic",
																									"name": "number"
																								}
																							}
																						],
																						"groups": [
																							{
																								"title": "Properties",
																								"children": [
																									18192
																								]
																							}
																						]
																					}
																				}
																			]
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18193,
																		18190
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18194,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18198,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18195,
																	"name": "tags",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intersection",
																			"types": [
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																						"qualifiedName": "Pick"
																					},
																					"typeArguments": [
																						{
																							"type": "reference",
																							"target": {
																								"sourceFileName": "../../../packages/medusa/dist/models/product-tag.d.ts",
																								"qualifiedName": "ProductTag"
																							},
																							"name": "ProductTag",
																							"package": "@medusajs/medusa"
																						},
																						{
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": "value"
																								},
																								{
																									"type": "literal",
																									"value": "id"
																								}
																							]
																						}
																					],
																					"name": "Pick",
																					"package": "typescript"
																				},
																				{
																					"type": "reflection",
																					"declaration": {
																						"id": 18196,
																						"name": "__type",
																						"variant": "declaration",
																						"kind": 65536,
																						"flags": {},
																						"children": [
																							{
																								"id": 18197,
																								"name": "usage_count",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {},
																								"type": {
																									"type": "intrinsic",
																									"name": "number"
																								}
																							}
																						],
																						"groups": [
																							{
																								"title": "Properties",
																								"children": [
																									18197
																								]
																							}
																						]
																					}
																				}
																			]
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18198,
																		18195
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18199,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18203,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18200,
																	"name": "tags",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intersection",
																			"types": [
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																						"qualifiedName": "Pick"
																					},
																					"typeArguments": [
																						{
																							"type": "reference",
																							"target": {
																								"sourceFileName": "../../../packages/medusa/dist/models/product-tag.d.ts",
																								"qualifiedName": "ProductTag"
																							},
																							"name": "ProductTag",
																							"package": "@medusajs/medusa"
																						},
																						{
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": "value"
																								},
																								{
																									"type": "literal",
																									"value": "id"
																								}
																							]
																						}
																					],
																					"name": "Pick",
																					"package": "typescript"
																				},
																				{
																					"type": "reflection",
																					"declaration": {
																						"id": 18201,
																						"name": "__type",
																						"variant": "declaration",
																						"kind": 65536,
																						"flags": {},
																						"children": [
																							{
																								"id": 18202,
																								"name": "usage_count",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {},
																								"type": {
																									"type": "intrinsic",
																									"name": "number"
																								}
																							}
																						],
																						"groups": [
																							{
																								"title": "Properties",
																								"children": [
																									18202
																								]
																							}
																						]
																					}
																				}
																			]
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18203,
																		18200
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18204,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18208,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18205,
																	"name": "tags",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intersection",
																			"types": [
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																						"qualifiedName": "Pick"
																					},
																					"typeArguments": [
																						{
																							"type": "reference",
																							"target": {
																								"sourceFileName": "../../../packages/medusa/dist/models/product-tag.d.ts",
																								"qualifiedName": "ProductTag"
																							},
																							"name": "ProductTag",
																							"package": "@medusajs/medusa"
																						},
																						{
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": "value"
																								},
																								{
																									"type": "literal",
																									"value": "id"
																								}
																							]
																						}
																					],
																					"name": "Pick",
																					"package": "typescript"
																				},
																				{
																					"type": "reflection",
																					"declaration": {
																						"id": 18206,
																						"name": "__type",
																						"variant": "declaration",
																						"kind": 65536,
																						"flags": {},
																						"children": [
																							{
																								"id": 18207,
																								"name": "usage_count",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {},
																								"type": {
																									"type": "intrinsic",
																									"name": "number"
																								}
																							}
																						],
																						"groups": [
																							{
																								"title": "Properties",
																								"children": [
																									18207
																								]
																							}
																						]
																					}
																				}
																			]
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18208,
																		18205
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										18209,
										18212,
										18216,
										18220,
										18227,
										18231,
										18235,
										18242,
										18246,
										18110,
										18140,
										18186
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										18110,
										18140,
										18186
									]
								},
								{
									"title": "Mutations",
									"children": [
										18209,
										18212,
										18216,
										18220,
										18227,
										18231,
										18235,
										18242,
										18246
									]
								}
							]
						},
						{
							"id": 16415,
							"name": "Publishable API Keys",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Publishable API Key API Routes](https://docs.medusajs.com/api/admin#publishable-api-keys).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 16619
									},
									{
										"kind": "text",
										"text": ".\n\nPublishable API Keys can be used to scope Store API calls with an API key, determining what resources are retrieved when querying the API.\nFor example, a publishable API key can be associated with one or more sales channels.\n\nWhen it is passed in the header of a request to the List Product store API Route,\nthe sales channels are inferred from the key and only products associated with those sales channels are retrieved.\n\nAdmins can manage publishable API keys and their associated resources. Currently, only Sales Channels are supported as a resource.\n\nRelated Guide: [How to manage publishable API keys](https://docs.medusajs.com/development/publishable-api-keys/admin/manage-publishable-api-keys)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 18336,
									"name": "useAdminCreatePublishableApiKey",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18337,
											"name": "useAdminCreatePublishableApiKey",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a publishable API key."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreatePublishableApiKey } from \"medusa-react\"\n\nconst CreatePublishableApiKey = () => {\n  const createKey = useAdminCreatePublishableApiKey()\n  // ...\n\n  const handleCreate = (title: string) => {\n    createKey.mutate({\n      title,\n    }, {\n      onSuccess: ({ publishable_api_key }) => {\n        console.log(publishable_api_key.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CreatePublishableApiKey\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18338,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/index.d.ts",
																			"qualifiedName": "AdminPublishableApiKeysRes"
																		},
																		"name": "AdminPublishableApiKeysRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/create-publishable-api-key.d.ts",
																	"qualifiedName": "AdminPostPublishableApiKeysReq"
																},
																"name": "AdminPostPublishableApiKeysReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/index.d.ts",
																	"qualifiedName": "AdminPublishableApiKeysRes"
																},
																"name": "AdminPublishableApiKeysRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/create-publishable-api-key.d.ts",
															"qualifiedName": "AdminPostPublishableApiKeysReq"
														},
														"name": "AdminPostPublishableApiKeysReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 18339,
									"name": "useAdminUpdatePublishableApiKey",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18340,
											"name": "useAdminUpdatePublishableApiKey",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a publishable API key's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdatePublishableApiKey } from \"medusa-react\"\n\ntype Props = {\n  publishableApiKeyId: string\n}\n\nconst PublishableApiKey = ({\n  publishableApiKeyId\n}: Props) => {\n  const updateKey = useAdminUpdatePublishableApiKey(\n    publishableApiKeyId\n  )\n  // ...\n\n  const handleUpdate = (title: string) => {\n    updateKey.mutate({\n      title,\n    }, {\n      onSuccess: ({ publishable_api_key }) => {\n        console.log(publishable_api_key.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default PublishableApiKey\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18341,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The publishable API key's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 18342,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/index.d.ts",
																			"qualifiedName": "AdminPublishableApiKeysRes"
																		},
																		"name": "AdminPublishableApiKeysRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/update-publishable-api-key.d.ts",
																	"qualifiedName": "AdminPostPublishableApiKeysPublishableApiKeyReq"
																},
																"name": "AdminPostPublishableApiKeysPublishableApiKeyReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/index.d.ts",
																	"qualifiedName": "AdminPublishableApiKeysRes"
																},
																"name": "AdminPublishableApiKeysRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/update-publishable-api-key.d.ts",
															"qualifiedName": "AdminPostPublishableApiKeysPublishableApiKeyReq"
														},
														"name": "AdminPostPublishableApiKeysPublishableApiKeyReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 18343,
									"name": "useAdminDeletePublishableApiKey",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18344,
											"name": "useAdminDeletePublishableApiKey",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a publishable API key. Associated resources, such as sales channels, are not deleted."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeletePublishableApiKey } from \"medusa-react\"\n\ntype Props = {\n  publishableApiKeyId: string\n}\n\nconst PublishableApiKey = ({\n  publishableApiKeyId\n}: Props) => {\n  const deleteKey = useAdminDeletePublishableApiKey(\n    publishableApiKeyId\n  )\n  // ...\n\n  const handleDelete = () => {\n    deleteKey.mutate(void 0, {\n      onSuccess: ({ id, object, deleted }) => {\n        console.log(id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default PublishableApiKey\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18345,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The publishable API key's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 18346,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																			"qualifiedName": "DeleteResponse"
																		},
																		"name": "DeleteResponse",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																	"qualifiedName": "DeleteResponse"
																},
																"name": "DeleteResponse",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 18347,
									"name": "useAdminRevokePublishableApiKey",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18348,
											"name": "useAdminRevokePublishableApiKey",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook revokes a publishable API key. Revoking the publishable API Key can't be undone, and the key can't be used in future requests."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminRevokePublishableApiKey } from \"medusa-react\"\n\ntype Props = {\n  publishableApiKeyId: string\n}\n\nconst PublishableApiKey = ({\n  publishableApiKeyId\n}: Props) => {\n  const revokeKey = useAdminRevokePublishableApiKey(\n    publishableApiKeyId\n  )\n  // ...\n\n  const handleRevoke = () => {\n    revokeKey.mutate(void 0, {\n      onSuccess: ({ publishable_api_key }) => {\n        console.log(publishable_api_key.revoked_at)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default PublishableApiKey\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18349,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The publishable API key's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 18350,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/index.d.ts",
																			"qualifiedName": "AdminPublishableApiKeysRes"
																		},
																		"name": "AdminPublishableApiKeysRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/index.d.ts",
																	"qualifiedName": "AdminPublishableApiKeysRes"
																},
																"name": "AdminPublishableApiKeysRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 18351,
									"name": "useAdminAddPublishableKeySalesChannelsBatch",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18352,
											"name": "useAdminAddPublishableKeySalesChannelsBatch",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook adds a list of sales channels to a publishable API key."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport {\n  useAdminAddPublishableKeySalesChannelsBatch,\n} from \"medusa-react\"\n\ntype Props = {\n  publishableApiKeyId: string\n}\n\nconst PublishableApiKey = ({\n  publishableApiKeyId\n}: Props) => {\n  const addSalesChannels = \n    useAdminAddPublishableKeySalesChannelsBatch(\n      publishableApiKeyId\n    )\n  // ...\n\n  const handleAdd = (salesChannelId: string) => {\n    addSalesChannels.mutate({\n      sales_channel_ids: [\n        {\n          id: salesChannelId,\n        },\n      ],\n    }, {\n      onSuccess: ({ publishable_api_key }) => {\n        console.log(publishable_api_key.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default PublishableApiKey\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18353,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The publishable API key's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 18354,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/index.d.ts",
																			"qualifiedName": "AdminPublishableApiKeysRes"
																		},
																		"name": "AdminPublishableApiKeysRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/add-channels-batch.d.ts",
																	"qualifiedName": "AdminPostPublishableApiKeySalesChannelsBatchReq"
																},
																"name": "AdminPostPublishableApiKeySalesChannelsBatchReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/index.d.ts",
																	"qualifiedName": "AdminPublishableApiKeysRes"
																},
																"name": "AdminPublishableApiKeysRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/add-channels-batch.d.ts",
															"qualifiedName": "AdminPostPublishableApiKeySalesChannelsBatchReq"
														},
														"name": "AdminPostPublishableApiKeySalesChannelsBatchReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 18355,
									"name": "useAdminRemovePublishableKeySalesChannelsBatch",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18356,
											"name": "useAdminRemovePublishableKeySalesChannelsBatch",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook removes a list of sales channels from a publishable API key. This doesn't delete the sales channels and only \nremoves the association between them and the publishable API key."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { \n  useAdminRemovePublishableKeySalesChannelsBatch,\n} from \"medusa-react\"\n\ntype Props = {\n  publishableApiKeyId: string\n}\n\nconst PublishableApiKey = ({\n  publishableApiKeyId\n}: Props) => {\n  const deleteSalesChannels = \n    useAdminRemovePublishableKeySalesChannelsBatch(\n      publishableApiKeyId\n    )\n  // ...\n\n  const handleDelete = (salesChannelId: string) => {\n    deleteSalesChannels.mutate({\n      sales_channel_ids: [\n        {\n          id: salesChannelId,\n        },\n      ],\n    }, {\n      onSuccess: ({ publishable_api_key }) => {\n        console.log(publishable_api_key.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default PublishableApiKey\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18357,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The publishable API key's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 18358,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/index.d.ts",
																			"qualifiedName": "AdminPublishableApiKeysRes"
																		},
																		"name": "AdminPublishableApiKeysRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/delete-channels-batch.d.ts",
																	"qualifiedName": "AdminDeletePublishableApiKeySalesChannelsBatchReq"
																},
																"name": "AdminDeletePublishableApiKeySalesChannelsBatchReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/index.d.ts",
																	"qualifiedName": "AdminPublishableApiKeysRes"
																},
																"name": "AdminPublishableApiKeysRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/delete-channels-batch.d.ts",
															"qualifiedName": "AdminDeletePublishableApiKeySalesChannelsBatchReq"
														},
														"name": "AdminDeletePublishableApiKeySalesChannelsBatchReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 18273,
									"name": "useAdminPublishableApiKey",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18274,
											"name": "useAdminPublishableApiKey",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a publishable API key's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { \n  useAdminPublishableApiKey,\n} from \"medusa-react\"\n\ntype Props = {\n  publishableApiKeyId: string\n}\n\nconst PublishableApiKey = ({\n  publishableApiKeyId\n}: Props) => {\n  const { publishable_api_key, isLoading } = \n    useAdminPublishableApiKey(\n      publishableApiKeyId\n    )\n \n    \n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {publishable_api_key && <span>{publishable_api_key.title}</span>}\n    </div>\n  )\n}\n\nexport default PublishableApiKey\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18275,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The publishable API key's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 18276,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/index.d.ts",
																			"qualifiedName": "AdminPublishableApiKeysRes"
																		},
																		"name": "AdminPublishableApiKeysRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_publishable_api_keys"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 18277,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18279,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18278,
																	"name": "publishable_api_key",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/publishable-api-key.d.ts",
																			"qualifiedName": "PublishableApiKey"
																		},
																		"name": "PublishableApiKey",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18279,
																		18278
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18280,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18282,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18281,
																	"name": "publishable_api_key",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/publishable-api-key.d.ts",
																			"qualifiedName": "PublishableApiKey"
																		},
																		"name": "PublishableApiKey",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18282,
																		18281
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18283,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18285,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18284,
																	"name": "publishable_api_key",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/publishable-api-key.d.ts",
																			"qualifiedName": "PublishableApiKey"
																		},
																		"name": "PublishableApiKey",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18285,
																		18284
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18286,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18288,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18287,
																	"name": "publishable_api_key",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/publishable-api-key.d.ts",
																			"qualifiedName": "PublishableApiKey"
																		},
																		"name": "PublishableApiKey",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18288,
																		18287
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 18289,
									"name": "useAdminPublishableApiKeys",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18290,
											"name": "useAdminPublishableApiKeys",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of publishable API keys. The publishable API keys can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`q`"
													},
													{
														"kind": "text",
														"text": " passed in "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": ". \nThe publishable API keys can also be paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list publishable API keys:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { PublishableApiKey } from \"@medusajs/medusa\"\nimport { useAdminPublishableApiKeys } from \"medusa-react\"\n\nconst PublishableApiKeys = () => {\n  const { publishable_api_keys, isLoading } = \n    useAdminPublishableApiKeys()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {publishable_api_keys && !publishable_api_keys.length && (\n        <span>No Publishable API Keys</span>\n      )}\n      {publishable_api_keys && \n        publishable_api_keys.length > 0 && (\n        <ul>\n          {publishable_api_keys.map(\n            (publishableApiKey: PublishableApiKey) => (\n              <li key={publishableApiKey.id}>\n                {publishableApiKey.title}\n              </li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default PublishableApiKeys\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`20`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { PublishableApiKey } from \"@medusajs/medusa\"\nimport { useAdminPublishableApiKeys } from \"medusa-react\"\n\nconst PublishableApiKeys = () => {\n  const { \n    publishable_api_keys, \n    limit,\n    offset,\n    isLoading\n  } = \n    useAdminPublishableApiKeys({\n      limit: 50,\n      offset: 0\n    })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {publishable_api_keys && !publishable_api_keys.length && (\n        <span>No Publishable API Keys</span>\n      )}\n      {publishable_api_keys && \n        publishable_api_keys.length > 0 && (\n        <ul>\n          {publishable_api_keys.map(\n            (publishableApiKey: PublishableApiKey) => (\n              <li key={publishableApiKey.id}>\n                {publishableApiKey.title}\n              </li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default PublishableApiKeys\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18291,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations to apply on the retrieved publishable API keys."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/list-publishable-api-keys.d.ts",
															"qualifiedName": "GetPublishableApiKeysParams"
														},
														"name": "GetPublishableApiKeysParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 18292,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/index.d.ts",
																			"qualifiedName": "AdminPublishableApiKeysListRes"
																		},
																		"name": "AdminPublishableApiKeysListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_publishable_api_keys"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 18293,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 18294,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						18294
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 18295,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18300,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18299,
																	"name": "publishable_api_keys",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/publishable-api-key.d.ts",
																				"qualifiedName": "PublishableApiKey"
																			},
																			"name": "PublishableApiKey",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 18296,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18297,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18298,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18300,
																		18299,
																		18296,
																		18297,
																		18298
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18301,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18306,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18305,
																	"name": "publishable_api_keys",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/publishable-api-key.d.ts",
																				"qualifiedName": "PublishableApiKey"
																			},
																			"name": "PublishableApiKey",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 18302,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18303,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18304,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18306,
																		18305,
																		18302,
																		18303,
																		18304
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18307,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18312,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18311,
																	"name": "publishable_api_keys",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/publishable-api-key.d.ts",
																				"qualifiedName": "PublishableApiKey"
																			},
																			"name": "PublishableApiKey",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 18308,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18309,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18310,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18312,
																		18311,
																		18308,
																		18309,
																		18310
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18313,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18318,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18317,
																	"name": "publishable_api_keys",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/publishable-api-key.d.ts",
																				"qualifiedName": "PublishableApiKey"
																			},
																			"name": "PublishableApiKey",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 18314,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18315,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18316,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18318,
																		18317,
																		18314,
																		18315,
																		18316
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 18319,
									"name": "useAdminPublishableApiKeySalesChannels",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18320,
											"name": "useAdminPublishableApiKeySalesChannels",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook lists the sales channels associated with a publishable API key. The sales channels can be \nfiltered by fields such as "
													},
													{
														"kind": "code",
														"text": "`q`"
													},
													{
														"kind": "text",
														"text": " passed in the "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " parameter."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { \n  useAdminPublishableApiKeySalesChannels,\n} from \"medusa-react\"\n\ntype Props = {\n  publishableApiKeyId: string\n}\n\nconst SalesChannels = ({\n  publishableApiKeyId\n}: Props) => {\n  const { sales_channels, isLoading } = \n    useAdminPublishableApiKeySalesChannels(\n      publishableApiKeyId\n    )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {sales_channels && !sales_channels.length && (\n        <span>No Sales Channels</span>\n      )}\n      {sales_channels && sales_channels.length > 0 && (\n        <ul>\n          {sales_channels.map((salesChannel) => (\n            <li key={salesChannel.id}>{salesChannel.name}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default SalesChannels\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18321,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The publishable API Key's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 18322,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters to apply on the retrieved sales channels."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/list-publishable-api-key-sales-channels.d.ts",
															"qualifiedName": "GetPublishableApiKeySalesChannelsParams"
														},
														"name": "GetPublishableApiKeySalesChannelsParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 18323,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/index.d.ts",
																			"qualifiedName": "AdminPublishableApiKeysListSalesChannelsRes"
																		},
																		"name": "AdminPublishableApiKeysListSalesChannelsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "typeOperator",
																"operator": "readonly",
																"target": {
																	"type": "tuple",
																	"elements": [
																		{
																			"type": "literal",
																			"value": "admin_publishable_api_keys"
																		},
																		{
																			"type": "literal",
																			"value": "detail"
																		},
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "literal",
																			"value": "sales_channels"
																		},
																		{
																			"type": "intrinsic",
																			"name": "any"
																		}
																	]
																}
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 18324,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18326,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18325,
																	"name": "sales_channels",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/sales-channel.d.ts",
																				"qualifiedName": "SalesChannel"
																			},
																			"name": "SalesChannel",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18326,
																		18325
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18327,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18329,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18328,
																	"name": "sales_channels",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/sales-channel.d.ts",
																				"qualifiedName": "SalesChannel"
																			},
																			"name": "SalesChannel",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18329,
																		18328
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18330,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18332,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18331,
																	"name": "sales_channels",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/sales-channel.d.ts",
																				"qualifiedName": "SalesChannel"
																			},
																			"name": "SalesChannel",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18332,
																		18331
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18333,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18335,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18334,
																	"name": "sales_channels",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/sales-channel.d.ts",
																				"qualifiedName": "SalesChannel"
																			},
																			"name": "SalesChannel",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18335,
																		18334
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										18336,
										18339,
										18343,
										18347,
										18351,
										18355,
										18273,
										18289,
										18319
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										18273,
										18289,
										18319
									]
								},
								{
									"title": "Mutations",
									"children": [
										18336,
										18339,
										18343,
										18347,
										18351,
										18355
									]
								}
							]
						},
						{
							"id": 16416,
							"name": "Regions",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Region API Routes](https://docs.medusajs.com/api/admin#regions).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 16619
									},
									{
										"kind": "text",
										"text": ".\n\nRegions are different countries or geographical regions that the commerce store serves customers in.\nAdmins can manage these regions, their providers, and more.\n\nRelated Guide: [How to manage regions](https://docs.medusajs.com/modules/regions-and-currencies/admin/manage-regions)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 18422,
									"name": "useAdminCreateRegion",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18423,
											"name": "useAdminCreateRegion",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a region."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateRegion } from \"medusa-react\"\n\ntype CreateData = {\n  name: string\n  currency_code: string\n  tax_rate: number\n  payment_providers: string[]\n  fulfillment_providers: string[]\n  countries: string[]\n}\n\nconst CreateRegion = () => {\n  const createRegion = useAdminCreateRegion()\n  // ...\n\n  const handleCreate = (regionData: CreateData) => {\n    createRegion.mutate(regionData, {\n      onSuccess: ({ region }) => {\n        console.log(region.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CreateRegion\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18424,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
																			"qualifiedName": "AdminRegionsRes"
																		},
																		"name": "AdminRegionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/create-region.d.ts",
																	"qualifiedName": "AdminPostRegionsReq"
																},
																"name": "AdminPostRegionsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
																	"qualifiedName": "AdminRegionsRes"
																},
																"name": "AdminRegionsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/create-region.d.ts",
															"qualifiedName": "AdminPostRegionsReq"
														},
														"name": "AdminPostRegionsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 18425,
									"name": "useAdminUpdateRegion",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18426,
											"name": "useAdminUpdateRegion",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a region's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateRegion } from \"medusa-react\"\n\ntype Props = {\n  regionId: string\n}\n\nconst Region = ({\n  regionId\n}: Props) => {\n  const updateRegion = useAdminUpdateRegion(regionId)\n  // ...\n\n  const handleUpdate = (\n    countries: string[]\n  ) => {\n    updateRegion.mutate({\n      countries,\n    }, {\n      onSuccess: ({ region }) => {\n        console.log(region.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Region\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18427,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The region's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 18428,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
																			"qualifiedName": "AdminRegionsRes"
																		},
																		"name": "AdminRegionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/update-region.d.ts",
																	"qualifiedName": "AdminPostRegionsRegionReq"
																},
																"name": "AdminPostRegionsRegionReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
																	"qualifiedName": "AdminRegionsRes"
																},
																"name": "AdminRegionsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/update-region.d.ts",
															"qualifiedName": "AdminPostRegionsRegionReq"
														},
														"name": "AdminPostRegionsRegionReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 18429,
									"name": "useAdminDeleteRegion",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18430,
											"name": "useAdminDeleteRegion",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a region. Associated resources, such as providers or currencies are not deleted. Associated tax rates are deleted."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteRegion } from \"medusa-react\"\n\ntype Props = {\n  regionId: string\n}\n\nconst Region = ({\n  regionId\n}: Props) => {\n  const deleteRegion = useAdminDeleteRegion(regionId)\n  // ...\n\n  const handleDelete = () => {\n    deleteRegion.mutate(void 0, {\n      onSuccess: ({ id, object, deleted }) => {\n        console.log(id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Region\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18431,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The region's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 18432,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																			"qualifiedName": "DeleteResponse"
																		},
																		"name": "DeleteResponse",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																	"qualifiedName": "DeleteResponse"
																},
																"name": "DeleteResponse",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 18433,
									"name": "useAdminRegionAddCountry",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18434,
											"name": "useAdminRegionAddCountry",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook adds a country to the list of countries in a region."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminRegionAddCountry } from \"medusa-react\"\n\ntype Props = {\n  regionId: string\n}\n\nconst Region = ({\n  regionId\n}: Props) => {\n  const addCountry = useAdminRegionAddCountry(regionId)\n  // ...\n\n  const handleAddCountry = (\n    countryCode: string\n  ) => {\n    addCountry.mutate({\n      country_code: countryCode\n    }, {\n      onSuccess: ({ region }) => {\n        console.log(region.countries)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Region\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18435,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The region's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 18436,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
																			"qualifiedName": "AdminRegionsRes"
																		},
																		"name": "AdminRegionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/add-country.d.ts",
																	"qualifiedName": "AdminPostRegionsRegionCountriesReq"
																},
																"name": "AdminPostRegionsRegionCountriesReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
																	"qualifiedName": "AdminRegionsRes"
																},
																"name": "AdminRegionsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/add-country.d.ts",
															"qualifiedName": "AdminPostRegionsRegionCountriesReq"
														},
														"name": "AdminPostRegionsRegionCountriesReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 18437,
									"name": "useAdminRegionRemoveCountry",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18438,
											"name": "useAdminRegionRemoveCountry",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a country from the list of countries in a region. The country will still be available in the system, and it can be used in other regions."
													}
												],
												"blockTags": [
													{
														"tag": "@typeParamDefinition",
														"content": [
															{
																"kind": "text",
																"text": "string - The code of the country to delete from the region."
															}
														]
													},
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminRegionRemoveCountry } from \"medusa-react\"\n\ntype Props = {\n  regionId: string\n}\n\nconst Region = ({\n  regionId\n}: Props) => {\n  const removeCountry = useAdminRegionRemoveCountry(regionId)\n  // ...\n\n  const handleRemoveCountry = (\n    countryCode: string\n  ) => {\n    removeCountry.mutate(countryCode, {\n      onSuccess: ({ region }) => {\n        console.log(region.countries)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Region\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18439,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The region's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 18440,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
																			"qualifiedName": "AdminRegionsRes"
																		},
																		"name": "AdminRegionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
																	"qualifiedName": "AdminRegionsRes"
																},
																"name": "AdminRegionsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 18441,
									"name": "useAdminRegionAddFulfillmentProvider",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18442,
											"name": "useAdminRegionAddFulfillmentProvider",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook adds a fulfillment provider to the list of fulfullment providers in a region."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { \n  useAdminRegionAddFulfillmentProvider\n} from \"medusa-react\"\n\ntype Props = {\n  regionId: string\n}\n\nconst Region = ({\n  regionId\n}: Props) => {\n  const addFulfillmentProvider = \n    useAdminRegionAddFulfillmentProvider(regionId)\n  // ...\n\n  const handleAddFulfillmentProvider = (\n    providerId: string\n  ) => {\n    addFulfillmentProvider.mutate({\n      provider_id: providerId\n    }, {\n      onSuccess: ({ region }) => {\n        console.log(region.fulfillment_providers)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Region\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18443,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The region's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 18444,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
																			"qualifiedName": "AdminRegionsRes"
																		},
																		"name": "AdminRegionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/add-fulfillment-provider.d.ts",
																	"qualifiedName": "AdminPostRegionsRegionFulfillmentProvidersReq"
																},
																"name": "AdminPostRegionsRegionFulfillmentProvidersReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
																	"qualifiedName": "AdminRegionsRes"
																},
																"name": "AdminRegionsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/add-fulfillment-provider.d.ts",
															"qualifiedName": "AdminPostRegionsRegionFulfillmentProvidersReq"
														},
														"name": "AdminPostRegionsRegionFulfillmentProvidersReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 18445,
									"name": "useAdminRegionDeleteFulfillmentProvider",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18446,
											"name": "useAdminRegionDeleteFulfillmentProvider",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a fulfillment provider from a region. The fulfillment provider will still be available for usage in other regions."
													}
												],
												"blockTags": [
													{
														"tag": "@typeParamDefinition",
														"content": [
															{
																"kind": "text",
																"text": "string - The fulfillment provider's ID to delete from the region."
															}
														]
													},
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { \n  useAdminRegionDeleteFulfillmentProvider\n} from \"medusa-react\"\n\ntype Props = {\n  regionId: string\n}\n\nconst Region = ({\n  regionId\n}: Props) => {\n  const removeFulfillmentProvider = \n    useAdminRegionDeleteFulfillmentProvider(regionId)\n  // ...\n\n  const handleRemoveFulfillmentProvider = (\n    providerId: string\n  ) => {\n    removeFulfillmentProvider.mutate(providerId, {\n      onSuccess: ({ region }) => {\n        console.log(region.fulfillment_providers)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Region\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18447,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The region's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 18448,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
																			"qualifiedName": "AdminRegionsRes"
																		},
																		"name": "AdminRegionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
																	"qualifiedName": "AdminRegionsRes"
																},
																"name": "AdminRegionsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 18449,
									"name": "useAdminRegionAddPaymentProvider",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18450,
											"name": "useAdminRegionAddPaymentProvider",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook adds a payment provider to the list of payment providers in a region."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { \n  useAdminRegionAddPaymentProvider\n} from \"medusa-react\"\n\ntype Props = {\n  regionId: string\n}\n\nconst Region = ({\n  regionId\n}: Props) => {\n  const addPaymentProvider = \n    useAdminRegionAddPaymentProvider(regionId)\n  // ...\n\n  const handleAddPaymentProvider = (\n    providerId: string\n  ) => {\n    addPaymentProvider.mutate({\n      provider_id: providerId\n    }, {\n      onSuccess: ({ region }) => {\n        console.log(region.payment_providers)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Region\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18451,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The region's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 18452,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
																			"qualifiedName": "AdminRegionsRes"
																		},
																		"name": "AdminRegionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/add-payment-provider.d.ts",
																	"qualifiedName": "AdminPostRegionsRegionPaymentProvidersReq"
																},
																"name": "AdminPostRegionsRegionPaymentProvidersReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
																	"qualifiedName": "AdminRegionsRes"
																},
																"name": "AdminRegionsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/add-payment-provider.d.ts",
															"qualifiedName": "AdminPostRegionsRegionPaymentProvidersReq"
														},
														"name": "AdminPostRegionsRegionPaymentProvidersReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 18453,
									"name": "useAdminRegionDeletePaymentProvider",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18454,
											"name": "useAdminRegionDeletePaymentProvider",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a payment provider from a region. The payment provider will still be available for usage in other regions."
													}
												],
												"blockTags": [
													{
														"tag": "@typeParamDefinition",
														"content": [
															{
																"kind": "text",
																"text": "string - The ID of the payment provider to delete from the region."
															}
														]
													},
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { \n  useAdminRegionDeletePaymentProvider\n} from \"medusa-react\"\n\ntype Props = {\n  regionId: string\n}\n\nconst Region = ({\n  regionId\n}: Props) => {\n  const removePaymentProvider = \n    useAdminRegionDeletePaymentProvider(regionId)\n  // ...\n\n  const handleRemovePaymentProvider = (\n    providerId: string\n  ) => {\n    removePaymentProvider.mutate(providerId, {\n      onSuccess: ({ region }) => {\n        console.log(region.payment_providers)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Region\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18455,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The region's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 18456,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
																			"qualifiedName": "AdminRegionsRes"
																		},
																		"name": "AdminRegionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
																	"qualifiedName": "AdminRegionsRes"
																},
																"name": "AdminRegionsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 18360,
									"name": "useAdminRegions",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18361,
											"name": "useAdminRegions",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of Regions. The regions can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`created_at`"
													},
													{
														"kind": "text",
														"text": " passed in the "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " parameter. \nThe regions can also be paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list regions:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminRegions } from \"medusa-react\"\n\nconst Regions = () => {\n  const { regions, isLoading } = useAdminRegions()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {regions && !regions.length && <span>No Regions</span>}\n      {regions && regions.length > 0 && (\n        <ul>\n          {regions.map((region) => (\n            <li key={region.id}>{region.name}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Regions\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`50`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminRegions } from \"medusa-react\"\n\nconst Regions = () => {\n  const { \n    regions, \n    limit,\n    offset,\n    isLoading\n  } = useAdminRegions({\n    limit: 20,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {regions && !regions.length && <span>No Regions</span>}\n      {regions && regions.length > 0 && (\n        <ul>\n          {regions.map((region) => (\n            <li key={region.id}>{region.name}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Regions\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18362,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations to apply on the retrieved regions."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/list-regions.d.ts",
															"qualifiedName": "AdminGetRegionsParams"
														},
														"name": "AdminGetRegionsParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 18363,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
																			"qualifiedName": "AdminRegionsListRes"
																		},
																		"name": "AdminRegionsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_regions"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 18364,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 18365,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						18365
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 18366,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18371,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18370,
																	"name": "regions",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/region.d.ts",
																				"qualifiedName": "Region"
																			},
																			"name": "Region",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 18367,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18368,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18369,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18371,
																		18370,
																		18367,
																		18368,
																		18369
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18372,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18377,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18376,
																	"name": "regions",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/region.d.ts",
																				"qualifiedName": "Region"
																			},
																			"name": "Region",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 18373,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18374,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18375,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18377,
																		18376,
																		18373,
																		18374,
																		18375
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18378,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18383,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18382,
																	"name": "regions",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/region.d.ts",
																				"qualifiedName": "Region"
																			},
																			"name": "Region",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 18379,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18380,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18381,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18383,
																		18382,
																		18379,
																		18380,
																		18381
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18384,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18389,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18388,
																	"name": "regions",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/region.d.ts",
																				"qualifiedName": "Region"
																			},
																			"name": "Region",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 18385,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18386,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18387,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18389,
																		18388,
																		18385,
																		18386,
																		18387
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 18390,
									"name": "useAdminRegion",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18391,
											"name": "useAdminRegion",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a region's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminRegion } from \"medusa-react\"\n\ntype Props = {\n  regionId: string\n}\n\nconst Region = ({\n  regionId\n}: Props) => {\n  const { region, isLoading } = useAdminRegion(\n    regionId\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {region && <span>{region.name}</span>}\n    </div>\n  )\n}\n\nexport default Region\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18392,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The region's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 18393,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
																			"qualifiedName": "AdminRegionsRes"
																		},
																		"name": "AdminRegionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_regions"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 18394,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18396,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18395,
																	"name": "region",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/region.d.ts",
																			"qualifiedName": "Region"
																		},
																		"name": "Region",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18396,
																		18395
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18397,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18399,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18398,
																	"name": "region",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/region.d.ts",
																			"qualifiedName": "Region"
																		},
																		"name": "Region",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18399,
																		18398
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18400,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18402,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18401,
																	"name": "region",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/region.d.ts",
																			"qualifiedName": "Region"
																		},
																		"name": "Region",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18402,
																		18401
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18403,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18405,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18404,
																	"name": "region",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/region.d.ts",
																			"qualifiedName": "Region"
																		},
																		"name": "Region",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18405,
																		18404
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 18406,
									"name": "useAdminRegionFulfillmentOptions",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18407,
											"name": "useAdminRegionFulfillmentOptions",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of fulfillment options available in a region."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { \n  useAdminRegionFulfillmentOptions\n} from \"medusa-react\"\n\ntype Props = {\n  regionId: string\n}\n\nconst Region = ({\n  regionId\n}: Props) => {\n  const { \n    fulfillment_options, \n    isLoading\n  } = useAdminRegionFulfillmentOptions(\n    regionId\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {fulfillment_options && !fulfillment_options.length && (\n        <span>No Regions</span>\n      )}\n      {fulfillment_options && \n        fulfillment_options.length > 0 && (\n        <ul>\n          {fulfillment_options.map((option) => (\n            <li key={option.provider_id}>\n              {option.provider_id}\n            </li>\n          ))}\n        </ul>\n          )}\n    </div>\n  )\n}\n\nexport default Region\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18408,
													"name": "regionId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The region's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 18409,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
																			"qualifiedName": "AdminGetRegionsRegionFulfillmentOptionsRes"
																		},
																		"name": "AdminGetRegionsRegionFulfillmentOptionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_regions"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 18410,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18412,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18411,
																	"name": "fulfillment_options",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
																				"qualifiedName": "FulfillmentOption"
																			},
																			"name": "FulfillmentOption",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18412,
																		18411
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18413,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18415,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18414,
																	"name": "fulfillment_options",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
																				"qualifiedName": "FulfillmentOption"
																			},
																			"name": "FulfillmentOption",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18415,
																		18414
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18416,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18418,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18417,
																	"name": "fulfillment_options",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
																				"qualifiedName": "FulfillmentOption"
																			},
																			"name": "FulfillmentOption",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18418,
																		18417
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18419,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18421,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18420,
																	"name": "fulfillment_options",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
																				"qualifiedName": "FulfillmentOption"
																			},
																			"name": "FulfillmentOption",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18421,
																		18420
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										18422,
										18425,
										18429,
										18433,
										18437,
										18441,
										18445,
										18449,
										18453,
										18360,
										18390,
										18406
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										18360,
										18390,
										18406
									]
								},
								{
									"title": "Mutations",
									"children": [
										18422,
										18425,
										18429,
										18433,
										18437,
										18441,
										18445,
										18449,
										18453
									]
								}
							]
						},
						{
							"id": 16417,
							"name": "Reservations",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Reservation API Routes](https://docs.medusajs.com/api/admin#reservations).\nTo use these hooks, make sure to install the\n[@medusajs/inventory](https://docs.medusajs.com/modules/multiwarehouse/install-modules#inventory-module) module in your Medusa backend.\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 16619
									},
									{
										"kind": "text",
										"text": ".\n\nReservations, provided by the [Inventory Module](https://docs.medusajs.com/modules/multiwarehouse/inventory-module), \nare quantities of an item that are reserved, typically when an order is placed but not yet fulfilled.\nReservations can be associated with any resources, but commonly with line items of an order.\n\nRelated Guide: [How to manage item allocations in orders](https://docs.medusajs.com/modules/multiwarehouse/admin/manage-item-allocations-in-orders)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 18457,
									"name": "useAdminCreateReservation",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18458,
											"name": "useAdminCreateReservation",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a reservation which can be associated with any resource, such as an order's line item."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateReservation } from \"medusa-react\"\n\nconst CreateReservation = () => {\n  const createReservation = useAdminCreateReservation()\n  // ...\n\n  const handleCreate = (\n    locationId: string,\n    inventoryItemId: string,\n    quantity: number\n  ) => {\n    createReservation.mutate({\n      location_id: locationId,\n      inventory_item_id: inventoryItemId,\n      quantity,\n    }, {\n      onSuccess: ({ reservation }) => {\n        console.log(reservation.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CreateReservation\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18459,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/reservations/index.d.ts",
																			"qualifiedName": "AdminReservationsRes"
																		},
																		"name": "AdminReservationsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/reservations/create-reservation.d.ts",
																	"qualifiedName": "AdminPostReservationsReq"
																},
																"name": "AdminPostReservationsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/reservations/index.d.ts",
																	"qualifiedName": "AdminReservationsRes"
																},
																"name": "AdminReservationsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/reservations/create-reservation.d.ts",
															"qualifiedName": "AdminPostReservationsReq"
														},
														"name": "AdminPostReservationsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 18460,
									"name": "useAdminUpdateReservation",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18461,
											"name": "useAdminUpdateReservation",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a reservation's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateReservation } from \"medusa-react\"\n\ntype Props = {\n  reservationId: string\n}\n\nconst Reservation = ({ reservationId }: Props) => {\n  const updateReservation = useAdminUpdateReservation(\n    reservationId\n  )\n  // ...\n\n  const handleUpdate = (\n    quantity: number\n  ) => {\n    updateReservation.mutate({\n      quantity,\n    })\n  }\n\n  // ...\n}\n\nexport default Reservation\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18462,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The reservation's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 18463,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/reservations/index.d.ts",
																			"qualifiedName": "AdminReservationsRes"
																		},
																		"name": "AdminReservationsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/reservations/update-reservation.d.ts",
																	"qualifiedName": "AdminPostReservationsReservationReq"
																},
																"name": "AdminPostReservationsReservationReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/reservations/index.d.ts",
																	"qualifiedName": "AdminReservationsRes"
																},
																"name": "AdminReservationsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/reservations/update-reservation.d.ts",
															"qualifiedName": "AdminPostReservationsReservationReq"
														},
														"name": "AdminPostReservationsReservationReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 18464,
									"name": "useAdminDeleteReservation",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18465,
											"name": "useAdminDeleteReservation",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a reservation. Associated resources, such as the line item, will not be deleted."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteReservation } from \"medusa-react\"\n\ntype Props = {\n  reservationId: string\n}\n\nconst Reservation = ({ reservationId }: Props) => {\n  const deleteReservation = useAdminDeleteReservation(\n    reservationId\n  )\n  // ...\n\n  const handleDelete = () => {\n    deleteReservation.mutate(void 0, {\n      onSuccess: ({ id, object, deleted }) => {\n        console.log(id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Reservation\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18466,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The reservation's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 18467,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																			"qualifiedName": "DeleteResponse"
																		},
																		"name": "DeleteResponse",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																	"qualifiedName": "DeleteResponse"
																},
																"name": "DeleteResponse",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 18469,
									"name": "useAdminReservations",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18470,
											"name": "useAdminReservations",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of reservations. The reservations can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`location_id`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`quantity`"
													},
													{
														"kind": "text",
														"text": " \npassed in the "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " parameter. The reservations can also be paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list reservations:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminReservations } from \"medusa-react\"\n\nconst Reservations = () => {\n  const { reservations, isLoading } = useAdminReservations()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {reservations && !reservations.length && (\n        <span>No Reservations</span>\n      )}\n      {reservations && reservations.length > 0 && (\n        <ul>\n          {reservations.map((reservation) => (\n            <li key={reservation.id}>{reservation.quantity}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Reservations\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify relations that should be retrieved within the reservations:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminReservations } from \"medusa-react\"\n\nconst Reservations = () => {\n  const { \n    reservations, \n    isLoading\n  } = useAdminReservations({\n    expand: \"location\"\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {reservations && !reservations.length && (\n        <span>No Reservations</span>\n      )}\n      {reservations && reservations.length > 0 && (\n        <ul>\n          {reservations.map((reservation) => (\n            <li key={reservation.id}>{reservation.quantity}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Reservations\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`20`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminReservations } from \"medusa-react\"\n\nconst Reservations = () => {\n  const { \n    reservations,\n    limit,\n    offset, \n    isLoading\n  } = useAdminReservations({\n    expand: \"location\",\n    limit: 10,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {reservations && !reservations.length && (\n        <span>No Reservations</span>\n      )}\n      {reservations && reservations.length > 0 && (\n        <ul>\n          {reservations.map((reservation) => (\n            <li key={reservation.id}>{reservation.quantity}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Reservations\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18471,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination parameters to apply on the retrieved reservations."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/reservations/list-reservations.d.ts",
															"qualifiedName": "AdminGetReservationsParams"
														},
														"name": "AdminGetReservationsParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 18472,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/reservations/index.d.ts",
																			"qualifiedName": "AdminReservationsListRes"
																		},
																		"name": "AdminReservationsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_reservations"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 18473,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 18474,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						18474
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 18475,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18480,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18479,
																	"name": "reservations",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/types/src/inventory/common.ts",
																				"qualifiedName": "ReservationItemDTO"
																			},
																			"name": "ReservationItemDTO",
																			"package": "@medusajs/types"
																		}
																	}
																},
																{
																	"id": 18476,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18477,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18478,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18480,
																		18479,
																		18476,
																		18477,
																		18478
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18481,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18486,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18485,
																	"name": "reservations",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/types/src/inventory/common.ts",
																				"qualifiedName": "ReservationItemDTO"
																			},
																			"name": "ReservationItemDTO",
																			"package": "@medusajs/types"
																		}
																	}
																},
																{
																	"id": 18482,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18483,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18484,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18486,
																		18485,
																		18482,
																		18483,
																		18484
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18487,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18492,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18491,
																	"name": "reservations",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/types/src/inventory/common.ts",
																				"qualifiedName": "ReservationItemDTO"
																			},
																			"name": "ReservationItemDTO",
																			"package": "@medusajs/types"
																		}
																	}
																},
																{
																	"id": 18488,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18489,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18490,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18492,
																		18491,
																		18488,
																		18489,
																		18490
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18493,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18498,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18497,
																	"name": "reservations",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/types/src/inventory/common.ts",
																				"qualifiedName": "ReservationItemDTO"
																			},
																			"name": "ReservationItemDTO",
																			"package": "@medusajs/types"
																		}
																	}
																},
																{
																	"id": 18494,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18495,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18496,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18498,
																		18497,
																		18494,
																		18495,
																		18496
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 18499,
									"name": "useAdminReservation",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18500,
											"name": "useAdminReservation",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a reservation's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminReservation } from \"medusa-react\"\n\ntype Props = {\n  reservationId: string\n}\n\nconst Reservation = ({ reservationId }: Props) => {\n  const { reservation, isLoading } = useAdminReservation(\n    reservationId\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {reservation && (\n        <span>{reservation.inventory_item_id}</span>\n      )}\n    </div>\n  )\n}\n\nexport default Reservation\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18501,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The reservation's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 18502,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/reservations/index.d.ts",
																			"qualifiedName": "AdminReservationsRes"
																		},
																		"name": "AdminReservationsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_reservations"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 18503,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18505,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18504,
																	"name": "reservation",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
																			"qualifiedName": "ReservationItemDTO"
																		},
																		"name": "ReservationItemDTO",
																		"package": "@medusajs/types"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18505,
																		18504
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18506,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18508,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18507,
																	"name": "reservation",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
																			"qualifiedName": "ReservationItemDTO"
																		},
																		"name": "ReservationItemDTO",
																		"package": "@medusajs/types"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18508,
																		18507
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18509,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18511,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18510,
																	"name": "reservation",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
																			"qualifiedName": "ReservationItemDTO"
																		},
																		"name": "ReservationItemDTO",
																		"package": "@medusajs/types"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18511,
																		18510
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18512,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18514,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18513,
																	"name": "reservation",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
																			"qualifiedName": "ReservationItemDTO"
																		},
																		"name": "ReservationItemDTO",
																		"package": "@medusajs/types"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18514,
																		18513
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										18457,
										18460,
										18464,
										18469,
										18499
									]
								}
							],
							"categories": [
								{
									"title": "Mutations",
									"children": [
										18457,
										18460,
										18464
									]
								},
								{
									"title": "Queries",
									"children": [
										18469,
										18499
									]
								}
							]
						},
						{
							"id": 16418,
							"name": "Return Reasons",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Return Reason API Routes](https://docs.medusajs.com/api/admin#return-reasons).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 16619
									},
									{
										"kind": "text",
										"text": ".\n\nReturn reasons are key-value pairs that are used to specify why an order return is being created.\nAdmins can manage available return reasons, and they can be used by both admins and customers when creating a return.\n\nRelated Guide: [How to manage return reasons](https://docs.medusajs.com/modules/orders/admin/manage-returns#manage-return-reasons)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 18547,
									"name": "useAdminCreateReturnReason",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18548,
											"name": "useAdminCreateReturnReason",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a return reason."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateReturnReason } from \"medusa-react\"\n\nconst CreateReturnReason = () => {\n  const createReturnReason = useAdminCreateReturnReason()\n  // ...\n\n  const handleCreate = (\n    label: string,\n    value: string\n  ) => {\n    createReturnReason.mutate({\n      label,\n      value,\n    }, {\n      onSuccess: ({ return_reason }) => {\n        console.log(return_reason.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CreateReturnReason\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18549,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/return-reasons/index.d.ts",
																			"qualifiedName": "AdminReturnReasonsRes"
																		},
																		"name": "AdminReturnReasonsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/return-reasons/create-reason.d.ts",
																	"qualifiedName": "AdminPostReturnReasonsReq"
																},
																"name": "AdminPostReturnReasonsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/return-reasons/index.d.ts",
																	"qualifiedName": "AdminReturnReasonsRes"
																},
																"name": "AdminReturnReasonsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/return-reasons/create-reason.d.ts",
															"qualifiedName": "AdminPostReturnReasonsReq"
														},
														"name": "AdminPostReturnReasonsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 18550,
									"name": "useAdminUpdateReturnReason",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18551,
											"name": "useAdminUpdateReturnReason",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a return reason's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateReturnReason } from \"medusa-react\"\n\ntype Props = {\n  returnReasonId: string\n}\n\nconst ReturnReason = ({ returnReasonId }: Props) => {\n  const updateReturnReason = useAdminUpdateReturnReason(\n    returnReasonId\n  )\n  // ...\n\n  const handleUpdate = (\n    label: string\n  ) => {\n    updateReturnReason.mutate({\n      label,\n    }, {\n      onSuccess: ({ return_reason }) => {\n        console.log(return_reason.label)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default ReturnReason\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18552,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The return reason's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 18553,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/return-reasons/index.d.ts",
																			"qualifiedName": "AdminReturnReasonsRes"
																		},
																		"name": "AdminReturnReasonsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/return-reasons/update-reason.d.ts",
																	"qualifiedName": "AdminPostReturnReasonsReasonReq"
																},
																"name": "AdminPostReturnReasonsReasonReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/return-reasons/index.d.ts",
																	"qualifiedName": "AdminReturnReasonsRes"
																},
																"name": "AdminReturnReasonsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/return-reasons/update-reason.d.ts",
															"qualifiedName": "AdminPostReturnReasonsReasonReq"
														},
														"name": "AdminPostReturnReasonsReasonReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 18554,
									"name": "useAdminDeleteReturnReason",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18555,
											"name": "useAdminDeleteReturnReason",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a return reason."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteReturnReason } from \"medusa-react\"\n\ntype Props = {\n  returnReasonId: string\n}\n\nconst ReturnReason = ({ returnReasonId }: Props) => {\n  const deleteReturnReason = useAdminDeleteReturnReason(\n    returnReasonId\n  )\n  // ...\n\n  const handleDelete = () => {\n    deleteReturnReason.mutate(void 0, {\n      onSuccess: ({ id, object, deleted }) => {\n        console.log(id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default ReturnReason\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18556,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The return reason's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 18557,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "unknown"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																	"qualifiedName": "DeleteResponse"
																},
																"name": "DeleteResponse",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 18516,
									"name": "useAdminReturnReasons",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18517,
											"name": "useAdminReturnReasons",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of return reasons."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminReturnReasons } from \"medusa-react\"\n\nconst ReturnReasons = () => {\n  const { return_reasons, isLoading } = useAdminReturnReasons()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {return_reasons && !return_reasons.length && (\n        <span>No Return Reasons</span>\n      )}\n      {return_reasons && return_reasons.length > 0 && (\n        <ul>\n          {return_reasons.map((reason) => (\n            <li key={reason.id}>\n              {reason.label}: {reason.value}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default ReturnReasons\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18518,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/return-reasons/index.d.ts",
																			"qualifiedName": "AdminReturnReasonsListRes"
																		},
																		"name": "AdminReturnReasonsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_return_reasons"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 18519,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18521,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18520,
																	"name": "return_reasons",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/return-reason.d.ts",
																				"qualifiedName": "ReturnReason"
																			},
																			"name": "ReturnReason",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18521,
																		18520
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18522,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18524,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18523,
																	"name": "return_reasons",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/return-reason.d.ts",
																				"qualifiedName": "ReturnReason"
																			},
																			"name": "ReturnReason",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18524,
																		18523
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18525,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18527,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18526,
																	"name": "return_reasons",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/return-reason.d.ts",
																				"qualifiedName": "ReturnReason"
																			},
																			"name": "ReturnReason",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18527,
																		18526
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18528,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18530,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18529,
																	"name": "return_reasons",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/return-reason.d.ts",
																				"qualifiedName": "ReturnReason"
																			},
																			"name": "ReturnReason",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18530,
																		18529
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 18531,
									"name": "useAdminReturnReason",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18532,
											"name": "useAdminReturnReason",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a return reason's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminReturnReason } from \"medusa-react\"\n\ntype Props = {\n  returnReasonId: string\n}\n\nconst ReturnReason = ({ returnReasonId }: Props) => {\n  const { return_reason, isLoading } = useAdminReturnReason(\n    returnReasonId\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {return_reason && <span>{return_reason.label}</span>}\n    </div>\n  )\n}\n\nexport default ReturnReason\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18533,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The return reason's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 18534,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/return-reasons/index.d.ts",
																			"qualifiedName": "AdminReturnReasonsRes"
																		},
																		"name": "AdminReturnReasonsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_return_reasons"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 18535,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18537,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18536,
																	"name": "return_reason",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/return-reason.d.ts",
																			"qualifiedName": "ReturnReason"
																		},
																		"name": "ReturnReason",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18537,
																		18536
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18538,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18540,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18539,
																	"name": "return_reason",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/return-reason.d.ts",
																			"qualifiedName": "ReturnReason"
																		},
																		"name": "ReturnReason",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18540,
																		18539
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18541,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18543,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18542,
																	"name": "return_reason",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/return-reason.d.ts",
																			"qualifiedName": "ReturnReason"
																		},
																		"name": "ReturnReason",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18543,
																		18542
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18544,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18546,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18545,
																	"name": "return_reason",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/return-reason.d.ts",
																			"qualifiedName": "ReturnReason"
																		},
																		"name": "ReturnReason",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18546,
																		18545
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										18547,
										18550,
										18554,
										18516,
										18531
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										18516,
										18531
									]
								},
								{
									"title": "Mutations",
									"children": [
										18547,
										18550,
										18554
									]
								}
							]
						},
						{
							"id": 16419,
							"name": "Returns",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Return API Routes](https://docs.medusajs.com/api/admin#returns).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 16619
									},
									{
										"kind": "text",
										"text": ".\n\nA return can be created by a customer or an admin to return items in an order.\nAdmins can manage these returns and change their state.\n\nRelated Guide: [How to manage returns](https://docs.medusajs.com/modules/orders/admin/manage-returns)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 18586,
									"name": "useAdminReceiveReturn",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18587,
											"name": "useAdminReceiveReturn",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook marks a return as received. This also updates the status of associated order, claim, or swap accordingly."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminReceiveReturn } from \"medusa-react\"\n\ntype ReceiveReturnData = {\n  items: {\n    item_id: string\n    quantity: number\n  }[]\n}\n\ntype Props = {\n  returnId: string\n}\n\nconst Return = ({ returnId }: Props) => {\n  const receiveReturn = useAdminReceiveReturn(\n    returnId\n  )\n  // ...\n\n  const handleReceive = (data: ReceiveReturnData) => {\n    receiveReturn.mutate(data, {\n      onSuccess: ({ return: dataReturn }) => {\n        console.log(dataReturn.status)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Return\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18588,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The return's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 18589,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/returns/index.d.ts",
																			"qualifiedName": "AdminReturnsRes"
																		},
																		"name": "AdminReturnsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/returns/receive-return.d.ts",
																	"qualifiedName": "AdminPostReturnsReturnReceiveReq"
																},
																"name": "AdminPostReturnsReturnReceiveReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/returns/index.d.ts",
																	"qualifiedName": "AdminReturnsRes"
																},
																"name": "AdminReturnsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/returns/receive-return.d.ts",
															"qualifiedName": "AdminPostReturnsReturnReceiveReq"
														},
														"name": "AdminPostReturnsReturnReceiveReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 18590,
									"name": "useAdminCancelReturn",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18591,
											"name": "useAdminCancelReturn",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook registers a return as canceled. The return can be associated with an order, claim, or swap."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCancelReturn } from \"medusa-react\"\n\ntype Props = {\n  returnId: string\n}\n\nconst Return = ({ returnId }: Props) => {\n  const cancelReturn = useAdminCancelReturn(\n    returnId\n  )\n  // ...\n\n  const handleCancel = () => {\n    cancelReturn.mutate(void 0, {\n      onSuccess: ({ order }) => {\n        console.log(order.returns)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Return\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18592,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The return's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 18593,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/returns/index.d.ts",
																			"qualifiedName": "AdminReturnsCancelRes"
																		},
																		"name": "AdminReturnsCancelRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/returns/index.d.ts",
																	"qualifiedName": "AdminReturnsCancelRes"
																},
																"name": "AdminReturnsCancelRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 18559,
									"name": "useAdminReturns",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18560,
											"name": "useAdminReturns",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of Returns. The returns can be paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminReturns } from \"medusa-react\"\n\nconst Returns = () => {\n  const { returns, isLoading } = useAdminReturns()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {returns && !returns.length && (\n        <span>No Returns</span>\n      )}\n      {returns && returns.length > 0 && (\n        <ul>\n          {returns.map((returnData) => (\n            <li key={returnData.id}>\n              {returnData.status}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Returns\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18561,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/returns/index.d.ts",
																			"qualifiedName": "AdminReturnsListRes"
																		},
																		"name": "AdminReturnsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_returns"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 18562,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18567,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18566,
																	"name": "returns",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/return.d.ts",
																				"qualifiedName": "Return"
																			},
																			"name": "Return",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 18563,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18564,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18565,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18567,
																		18566,
																		18563,
																		18564,
																		18565
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18568,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18573,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18572,
																	"name": "returns",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/return.d.ts",
																				"qualifiedName": "Return"
																			},
																			"name": "Return",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 18569,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18570,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18571,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18573,
																		18572,
																		18569,
																		18570,
																		18571
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18574,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18579,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18578,
																	"name": "returns",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/return.d.ts",
																				"qualifiedName": "Return"
																			},
																			"name": "Return",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 18575,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18576,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18577,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18579,
																		18578,
																		18575,
																		18576,
																		18577
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18580,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18585,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18584,
																	"name": "returns",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/return.d.ts",
																				"qualifiedName": "Return"
																			},
																			"name": "Return",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 18581,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18582,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18583,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18585,
																		18584,
																		18581,
																		18582,
																		18583
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										18586,
										18590,
										18559
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										18559
									]
								},
								{
									"title": "Mutations",
									"children": [
										18586,
										18590
									]
								}
							]
						},
						{
							"id": 16420,
							"name": "Sales Channels",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Sales Channel API Routes](https://docs.medusajs.com/api/admin#sales-channels).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 16619
									},
									{
										"kind": "text",
										"text": ".\n\nA sales channel indicates a channel where products can be sold in. For example, a webshop or a mobile app.\nAdmins can manage sales channels and the products available in them.\n\nRelated Guide: [How to manage sales channels](https://docs.medusajs.com/modules/sales-channels/admin/manage)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 18641,
									"name": "useAdminCreateSalesChannel",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18642,
											"name": "useAdminCreateSalesChannel",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a sales channel."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateSalesChannel } from \"medusa-react\"\n\nconst CreateSalesChannel = () => {\n  const createSalesChannel = useAdminCreateSalesChannel()\n  // ...\n\n  const handleCreate = (name: string, description: string) => {\n    createSalesChannel.mutate({\n      name,\n      description,\n    }, {\n      onSuccess: ({ sales_channel }) => {\n        console.log(sales_channel.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CreateSalesChannel\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18643,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/index.d.ts",
																			"qualifiedName": "AdminSalesChannelsRes"
																		},
																		"name": "AdminSalesChannelsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/create-sales-channel.d.ts",
																	"qualifiedName": "AdminPostSalesChannelsReq"
																},
																"name": "AdminPostSalesChannelsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/index.d.ts",
																	"qualifiedName": "AdminSalesChannelsRes"
																},
																"name": "AdminSalesChannelsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/create-sales-channel.d.ts",
															"qualifiedName": "AdminPostSalesChannelsReq"
														},
														"name": "AdminPostSalesChannelsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 18644,
									"name": "useAdminUpdateSalesChannel",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18645,
											"name": "useAdminUpdateSalesChannel",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a sales channel's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateSalesChannel } from \"medusa-react\"\n\ntype Props = {\n  salesChannelId: string\n}\n\nconst SalesChannel = ({ salesChannelId }: Props) => {\n  const updateSalesChannel = useAdminUpdateSalesChannel(\n    salesChannelId\n  )\n  // ...\n\n  const handleUpdate = (\n    is_disabled: boolean\n  ) => {\n    updateSalesChannel.mutate({\n      is_disabled,\n    }, {\n      onSuccess: ({ sales_channel }) => {\n        console.log(sales_channel.is_disabled)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default SalesChannel\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18646,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The sales channel's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 18647,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/index.d.ts",
																			"qualifiedName": "AdminSalesChannelsRes"
																		},
																		"name": "AdminSalesChannelsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/update-sales-channel.d.ts",
																	"qualifiedName": "AdminPostSalesChannelsSalesChannelReq"
																},
																"name": "AdminPostSalesChannelsSalesChannelReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/index.d.ts",
																	"qualifiedName": "AdminSalesChannelsRes"
																},
																"name": "AdminSalesChannelsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/update-sales-channel.d.ts",
															"qualifiedName": "AdminPostSalesChannelsSalesChannelReq"
														},
														"name": "AdminPostSalesChannelsSalesChannelReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 18648,
									"name": "useAdminDeleteSalesChannel",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18649,
											"name": "useAdminDeleteSalesChannel",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a sales channel. Associated products, stock locations, and other resources are not deleted."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteSalesChannel } from \"medusa-react\"\n\ntype Props = {\n  salesChannelId: string\n}\n\nconst SalesChannel = ({ salesChannelId }: Props) => {\n  const deleteSalesChannel = useAdminDeleteSalesChannel(\n    salesChannelId\n  )\n  // ...\n\n  const handleDelete = () => {\n    deleteSalesChannel.mutate(void 0, {\n      onSuccess: ({ id, object, deleted }) => {\n        console.log(id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default SalesChannel\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18650,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The sales channel's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 18651,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																			"qualifiedName": "DeleteResponse"
																		},
																		"name": "DeleteResponse",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																	"qualifiedName": "DeleteResponse"
																},
																"name": "DeleteResponse",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 18652,
									"name": "useAdminDeleteProductsFromSalesChannel",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18653,
											"name": "useAdminDeleteProductsFromSalesChannel",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook removes a list of products from a sales channel. This doesn't delete the product. It only removes the \nassociation between the product and the sales channel."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { \n  useAdminDeleteProductsFromSalesChannel, \n} from \"medusa-react\"\n\ntype Props = {\n  salesChannelId: string\n}\n\nconst SalesChannel = ({ salesChannelId }: Props) => {\n  const deleteProducts = useAdminDeleteProductsFromSalesChannel(\n    salesChannelId\n  )\n  // ...\n\n  const handleDeleteProducts = (productId: string) => {\n    deleteProducts.mutate({\n      product_ids: [\n        {\n          id: productId,\n        },\n      ],\n    }, {\n      onSuccess: ({ sales_channel }) => {\n        console.log(sales_channel.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default SalesChannel\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18654,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The sales channel's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 18655,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/index.d.ts",
																			"qualifiedName": "AdminSalesChannelsRes"
																		},
																		"name": "AdminSalesChannelsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/delete-products-batch.d.ts",
																	"qualifiedName": "AdminDeleteSalesChannelsChannelProductsBatchReq"
																},
																"name": "AdminDeleteSalesChannelsChannelProductsBatchReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/index.d.ts",
																	"qualifiedName": "AdminSalesChannelsRes"
																},
																"name": "AdminSalesChannelsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/delete-products-batch.d.ts",
															"qualifiedName": "AdminDeleteSalesChannelsChannelProductsBatchReq"
														},
														"name": "AdminDeleteSalesChannelsChannelProductsBatchReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 18656,
									"name": "useAdminAddProductsToSalesChannel",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18657,
											"name": "useAdminAddProductsToSalesChannel",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook adds a list of products to a sales channel."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminAddProductsToSalesChannel } from \"medusa-react\"\n\ntype Props = {\n  salesChannelId: string\n}\n\nconst SalesChannel = ({ salesChannelId }: Props) => {\n  const addProducts = useAdminAddProductsToSalesChannel(\n    salesChannelId\n  )\n  // ...\n\n  const handleAddProducts = (productId: string) => {\n    addProducts.mutate({\n      product_ids: [\n        {\n          id: productId,\n        },\n      ],\n    }, {\n      onSuccess: ({ sales_channel }) => {\n        console.log(sales_channel.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default SalesChannel\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18658,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The sales channel's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 18659,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/index.d.ts",
																			"qualifiedName": "AdminSalesChannelsRes"
																		},
																		"name": "AdminSalesChannelsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/add-product-batch.d.ts",
																	"qualifiedName": "AdminPostSalesChannelsChannelProductsBatchReq"
																},
																"name": "AdminPostSalesChannelsChannelProductsBatchReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/index.d.ts",
																	"qualifiedName": "AdminSalesChannelsRes"
																},
																"name": "AdminSalesChannelsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/add-product-batch.d.ts",
															"qualifiedName": "AdminPostSalesChannelsChannelProductsBatchReq"
														},
														"name": "AdminPostSalesChannelsChannelProductsBatchReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 18660,
									"name": "useAdminAddLocationToSalesChannel",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18661,
											"name": "useAdminAddLocationToSalesChannel",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook associates a stock location with a sales channel. It requires the \n[@medusajs/stock-location](https://docs.medusajs.com/modules/multiwarehouse/install-modules#stock-location-module) module to be installed in\nyour Medusa backend."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { \n  useAdminAddLocationToSalesChannel\n} from \"medusa-react\"\n\ntype Props = {\n  salesChannelId: string\n}\n\nconst SalesChannel = ({ salesChannelId }: Props) => {\n  const addLocation = useAdminAddLocationToSalesChannel()\n  // ...\n\n  const handleAddLocation = (locationId: string) => {\n    addLocation.mutate({\n      sales_channel_id: salesChannelId,\n      location_id: locationId\n    }, {\n      onSuccess: ({ sales_channel }) => {\n        console.log(sales_channel.locations)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default SalesChannel\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18662,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/index.d.ts",
																			"qualifiedName": "AdminSalesChannelsRes"
																		},
																		"name": "AdminSalesChannelsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 18663,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 18664,
																			"name": "sales_channel_id",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "The sales channel's ID."
																					}
																				]
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 18665,
																			"name": "location_id",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "The location's ID."
																					}
																				]
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				18664,
																				18665
																			]
																		}
																	]
																}
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/index.d.ts",
																	"qualifiedName": "AdminSalesChannelsRes"
																},
																"name": "AdminSalesChannelsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18666,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18667,
																	"name": "sales_channel_id",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The sales channel's ID."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 18668,
																	"name": "location_id",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The location's ID."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18667,
																		18668
																	]
																}
															]
														}
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 18669,
									"name": "useAdminRemoveLocationFromSalesChannel",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18670,
											"name": "useAdminRemoveLocationFromSalesChannel",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook removes a stock location from a sales channel. This only removes the association between the stock \nlocation and the sales channel. It does not delete the stock location. This hook requires the \n[@medusajs/stock-location](https://docs.medusajs.com/modules/multiwarehouse/install-modules#stock-location-module) module to be installed in\nyour Medusa backend."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { \n  useAdminRemoveLocationFromSalesChannel\n} from \"medusa-react\"\n\ntype Props = {\n  salesChannelId: string\n}\n\nconst SalesChannel = ({ salesChannelId }: Props) => {\n  const removeLocation = useAdminRemoveLocationFromSalesChannel()\n  // ...\n\n  const handleRemoveLocation = (locationId: string) => {\n    removeLocation.mutate({\n      sales_channel_id: salesChannelId,\n      location_id: locationId\n    }, {\n      onSuccess: ({ sales_channel }) => {\n        console.log(sales_channel.locations)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default SalesChannel\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18671,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/index.d.ts",
																			"qualifiedName": "AdminSalesChannelsRes"
																		},
																		"name": "AdminSalesChannelsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 18672,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 18673,
																			"name": "sales_channel_id",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "The sales channel's ID."
																					}
																				]
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 18674,
																			"name": "location_id",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "The location's ID."
																					}
																				]
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				18673,
																				18674
																			]
																		}
																	]
																}
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/index.d.ts",
																	"qualifiedName": "AdminSalesChannelsRes"
																},
																"name": "AdminSalesChannelsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18675,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18676,
																	"name": "sales_channel_id",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The sales channel's ID."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 18677,
																	"name": "location_id",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The location's ID."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18676,
																		18677
																	]
																}
															]
														}
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 18595,
									"name": "useAdminSalesChannel",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18596,
											"name": "useAdminSalesChannel",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a sales channel's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminSalesChannel } from \"medusa-react\"\n\ntype Props = {\n  salesChannelId: string\n}\n\nconst SalesChannel = ({ salesChannelId }: Props) => {\n  const { \n    sales_channel, \n    isLoading, \n  } = useAdminSalesChannel(salesChannelId)\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {sales_channel && <span>{sales_channel.name}</span>}\n    </div>\n  )\n}\n\nexport default SalesChannel\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18597,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The sales channel's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 18598,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/index.d.ts",
																			"qualifiedName": "AdminSalesChannelsRes"
																		},
																		"name": "AdminSalesChannelsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_sales_channels"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 18599,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18601,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18600,
																	"name": "sales_channel",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/sales-channel.d.ts",
																			"qualifiedName": "SalesChannel"
																		},
																		"name": "SalesChannel",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18601,
																		18600
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18602,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18604,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18603,
																	"name": "sales_channel",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/sales-channel.d.ts",
																			"qualifiedName": "SalesChannel"
																		},
																		"name": "SalesChannel",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18604,
																		18603
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18605,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18607,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18606,
																	"name": "sales_channel",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/sales-channel.d.ts",
																			"qualifiedName": "SalesChannel"
																		},
																		"name": "SalesChannel",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18607,
																		18606
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18608,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18610,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18609,
																	"name": "sales_channel",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/sales-channel.d.ts",
																			"qualifiedName": "SalesChannel"
																		},
																		"name": "SalesChannel",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18610,
																		18609
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 18611,
									"name": "useAdminSalesChannels",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18612,
											"name": "useAdminSalesChannels",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of sales channels. The sales channels can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`q`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`name`"
													},
													{
														"kind": "text",
														"text": " \npassed in the "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " parameter. The sales channels can also be sorted or paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list sales channels:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminSalesChannels } from \"medusa-react\"\n\nconst SalesChannels = () => {\n  const { sales_channels, isLoading } = useAdminSalesChannels()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {sales_channels && !sales_channels.length && (\n        <span>No Sales Channels</span>\n      )}\n      {sales_channels && sales_channels.length > 0 && (\n        <ul>\n          {sales_channels.map((salesChannel) => (\n            <li key={salesChannel.id}>{salesChannel.name}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default SalesChannels\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify relations that should be retrieved within the sales channels:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminSalesChannels } from \"medusa-react\"\n\nconst SalesChannels = () => {\n  const { \n    sales_channels, \n    isLoading\n  } = useAdminSalesChannels({\n    expand: \"locations\"\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {sales_channels && !sales_channels.length && (\n        <span>No Sales Channels</span>\n      )}\n      {sales_channels && sales_channels.length > 0 && (\n        <ul>\n          {sales_channels.map((salesChannel) => (\n            <li key={salesChannel.id}>{salesChannel.name}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default SalesChannels\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`20`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminSalesChannels } from \"medusa-react\"\n\nconst SalesChannels = () => {\n  const { \n    sales_channels, \n    limit,\n    offset,\n    isLoading\n  } = useAdminSalesChannels({\n    expand: \"locations\",\n    limit: 10,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {sales_channels && !sales_channels.length && (\n        <span>No Sales Channels</span>\n      )}\n      {sales_channels && sales_channels.length > 0 && (\n        <ul>\n          {sales_channels.map((salesChannel) => (\n            <li key={salesChannel.id}>{salesChannel.name}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default SalesChannels\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18613,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations applied on the retrieved sales channels."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/list-sales-channels.d.ts",
															"qualifiedName": "AdminGetSalesChannelsParams"
														},
														"name": "AdminGetSalesChannelsParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 18614,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/index.d.ts",
																			"qualifiedName": "AdminSalesChannelsListRes"
																		},
																		"name": "AdminSalesChannelsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_sales_channels"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 18615,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 18616,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						18616
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 18617,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18622,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18621,
																	"name": "sales_channels",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/sales-channel.d.ts",
																				"qualifiedName": "SalesChannel"
																			},
																			"name": "SalesChannel",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 18618,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18619,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18620,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18622,
																		18621,
																		18618,
																		18619,
																		18620
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18623,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18628,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18627,
																	"name": "sales_channels",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/sales-channel.d.ts",
																				"qualifiedName": "SalesChannel"
																			},
																			"name": "SalesChannel",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 18624,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18625,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18626,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18628,
																		18627,
																		18624,
																		18625,
																		18626
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18629,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18634,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18633,
																	"name": "sales_channels",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/sales-channel.d.ts",
																				"qualifiedName": "SalesChannel"
																			},
																			"name": "SalesChannel",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 18630,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18631,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18632,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18634,
																		18633,
																		18630,
																		18631,
																		18632
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18635,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18640,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18639,
																	"name": "sales_channels",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/sales-channel.d.ts",
																				"qualifiedName": "SalesChannel"
																			},
																			"name": "SalesChannel",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 18636,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18637,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18638,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18640,
																		18639,
																		18636,
																		18637,
																		18638
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										18641,
										18644,
										18648,
										18652,
										18656,
										18660,
										18669,
										18595,
										18611
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										18595,
										18611
									]
								},
								{
									"title": "Mutations",
									"children": [
										18641,
										18644,
										18648,
										18652,
										18656,
										18660,
										18669
									]
								}
							]
						},
						{
							"id": 16421,
							"name": "Shipping Options",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Shipping Option API Routes](https://docs.medusajs.com/api/admin#shipping-options).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 16619
									},
									{
										"kind": "text",
										"text": ".\n\nA shipping option is used to define the available shipping methods during checkout or when creating a return.\nAdmins can create an unlimited number of shipping options, each associated with a shipping profile and fulfillment provider, among other resources.\n\nRelated Guide: [Shipping Option architecture](https://docs.medusajs.com/modules/carts-and-checkout/shipping#shipping-option)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 18725,
									"name": "useAdminCreateShippingOption",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18726,
											"name": "useAdminCreateShippingOption",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a shipping option."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateShippingOption } from \"medusa-react\"\n\ntype CreateShippingOption = {\n  name: string\n  provider_id: string\n  data: Record<string, unknown>\n  price_type: string\n  amount: number\n}\n\ntype Props = {\n  regionId: string\n}\n\nconst Region = ({ regionId }: Props) => {\n  const createShippingOption = useAdminCreateShippingOption()\n  // ...\n\n  const handleCreate = (\n    data: CreateShippingOption\n  ) => {\n    createShippingOption.mutate({\n      ...data,\n      region_id: regionId\n    }, {\n      onSuccess: ({ shipping_option }) => {\n        console.log(shipping_option.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Region\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18727,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-options/index.d.ts",
																			"qualifiedName": "AdminShippingOptionsRes"
																		},
																		"name": "AdminShippingOptionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-options/create-shipping-option.d.ts",
																	"qualifiedName": "AdminPostShippingOptionsReq"
																},
																"name": "AdminPostShippingOptionsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-options/index.d.ts",
																	"qualifiedName": "AdminShippingOptionsRes"
																},
																"name": "AdminShippingOptionsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-options/create-shipping-option.d.ts",
															"qualifiedName": "AdminPostShippingOptionsReq"
														},
														"name": "AdminPostShippingOptionsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 18728,
									"name": "useAdminUpdateShippingOption",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18729,
											"name": "useAdminUpdateShippingOption",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a shipping option's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateShippingOption } from \"medusa-react\"\n\ntype Props = {\n  shippingOptionId: string\n}\n\nconst ShippingOption = ({ shippingOptionId }: Props) => {\n  const updateShippingOption = useAdminUpdateShippingOption(\n    shippingOptionId\n  )\n  // ...\n\n  const handleUpdate = (\n    name: string,\n    requirements: {\n      id: string,\n      type: string,\n      amount: number\n    }[]\n  ) => {\n    updateShippingOption.mutate({\n      name,\n      requirements\n    }, {\n      onSuccess: ({ shipping_option }) => {\n        console.log(shipping_option.requirements)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default ShippingOption\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18730,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The shipping option's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 18731,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-options/index.d.ts",
																			"qualifiedName": "AdminShippingOptionsRes"
																		},
																		"name": "AdminShippingOptionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-options/update-shipping-option.d.ts",
																	"qualifiedName": "AdminPostShippingOptionsOptionReq"
																},
																"name": "AdminPostShippingOptionsOptionReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-options/index.d.ts",
																	"qualifiedName": "AdminShippingOptionsRes"
																},
																"name": "AdminShippingOptionsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-options/update-shipping-option.d.ts",
															"qualifiedName": "AdminPostShippingOptionsOptionReq"
														},
														"name": "AdminPostShippingOptionsOptionReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 18732,
									"name": "useAdminDeleteShippingOption",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18733,
											"name": "useAdminDeleteShippingOption",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a shipping option. Once deleted, it can't be used when creating orders or returns."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteShippingOption } from \"medusa-react\"\n\ntype Props = {\n  shippingOptionId: string\n}\n\nconst ShippingOption = ({ shippingOptionId }: Props) => {\n  const deleteShippingOption = useAdminDeleteShippingOption(\n    shippingOptionId\n  )\n  // ...\n\n  const handleDelete = () => {\n    deleteShippingOption.mutate(void 0, {\n      onSuccess: ({ id, object, deleted }) => {\n        console.log(id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default ShippingOption\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18734,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The shipping option's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 18735,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "unknown"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																	"qualifiedName": "DeleteResponse"
																},
																"name": "DeleteResponse",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 18679,
									"name": "useAdminShippingOptions",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18680,
											"name": "useAdminShippingOptions",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of shipping options. The shipping options can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`region_id`"
													},
													{
														"kind": "text",
														"text": " \nor "
													},
													{
														"kind": "code",
														"text": "`is_return`"
													},
													{
														"kind": "text",
														"text": " passed in the "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " parameter."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminShippingOptions } from \"medusa-react\"\n\nconst ShippingOptions = () => {\n  const {\n    shipping_options, \n    isLoading\n  } = useAdminShippingOptions()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {shipping_options && !shipping_options.length && (\n        <span>No Shipping Options</span>\n      )}\n      {shipping_options && shipping_options.length > 0 && (\n        <ul>\n          {shipping_options.map((option) => (\n            <li key={option.id}>{option.name}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default ShippingOptions\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18681,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters to apply on the retrieved shipping options."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-options/list-shipping-options.d.ts",
															"qualifiedName": "AdminGetShippingOptionsParams"
														},
														"name": "AdminGetShippingOptionsParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 18682,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-options/index.d.ts",
																			"qualifiedName": "AdminShippingOptionsListRes"
																		},
																		"name": "AdminShippingOptionsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_shipping_options"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 18683,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 18684,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						18684
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 18685,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18690,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18689,
																	"name": "shipping_options",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/shipping-option.d.ts",
																				"qualifiedName": "ShippingOption"
																			},
																			"name": "ShippingOption",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 18686,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18687,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18688,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18690,
																		18689,
																		18686,
																		18687,
																		18688
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18691,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18696,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18695,
																	"name": "shipping_options",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/shipping-option.d.ts",
																				"qualifiedName": "ShippingOption"
																			},
																			"name": "ShippingOption",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 18692,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18693,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18694,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18696,
																		18695,
																		18692,
																		18693,
																		18694
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18697,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18702,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18701,
																	"name": "shipping_options",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/shipping-option.d.ts",
																				"qualifiedName": "ShippingOption"
																			},
																			"name": "ShippingOption",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 18698,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18699,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18700,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18702,
																		18701,
																		18698,
																		18699,
																		18700
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18703,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18708,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18707,
																	"name": "shipping_options",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/shipping-option.d.ts",
																				"qualifiedName": "ShippingOption"
																			},
																			"name": "ShippingOption",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 18704,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18705,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18706,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18708,
																		18707,
																		18704,
																		18705,
																		18706
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 18709,
									"name": "useAdminShippingOption",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18710,
											"name": "useAdminShippingOption",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a shipping option's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminShippingOption } from \"medusa-react\"\n\ntype Props = {\n  shippingOptionId: string\n}\n\nconst ShippingOption = ({ shippingOptionId }: Props) => {\n  const {\n    shipping_option, \n    isLoading\n  } = useAdminShippingOption(\n    shippingOptionId\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {shipping_option && <span>{shipping_option.name}</span>}\n    </div>\n  )\n}\n\nexport default ShippingOption\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18711,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The shipping option's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 18712,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-options/index.d.ts",
																			"qualifiedName": "AdminShippingOptionsRes"
																		},
																		"name": "AdminShippingOptionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_shipping_options"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 18713,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18715,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18714,
																	"name": "shipping_option",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/shipping-option.d.ts",
																			"qualifiedName": "ShippingOption"
																		},
																		"name": "ShippingOption",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18715,
																		18714
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18716,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18718,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18717,
																	"name": "shipping_option",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/shipping-option.d.ts",
																			"qualifiedName": "ShippingOption"
																		},
																		"name": "ShippingOption",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18718,
																		18717
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18719,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18721,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18720,
																	"name": "shipping_option",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/shipping-option.d.ts",
																			"qualifiedName": "ShippingOption"
																		},
																		"name": "ShippingOption",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18721,
																		18720
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18722,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18724,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18723,
																	"name": "shipping_option",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/shipping-option.d.ts",
																			"qualifiedName": "ShippingOption"
																		},
																		"name": "ShippingOption",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18724,
																		18723
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										18725,
										18728,
										18732,
										18679,
										18709
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										18679,
										18709
									]
								},
								{
									"title": "Mutations",
									"children": [
										18725,
										18728,
										18732
									]
								}
							]
						},
						{
							"id": 16422,
							"name": "Shipping Profiles",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Shipping Profile API Routes](https://docs.medusajs.com/api/admin#shipping-profiles).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 16619
									},
									{
										"kind": "text",
										"text": ".\n\nA shipping profile is used to group products that can be shipped in the same manner.\nThey are created by the admin and they're not associated with a fulfillment provider.\n\nRelated Guide: [Shipping Profile architecture](https://docs.medusajs.com/modules/carts-and-checkout/shipping#shipping-profile)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 18768,
									"name": "useAdminCreateShippingProfile",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18769,
											"name": "useAdminCreateShippingProfile",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a shipping profile."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { ShippingProfileType } from \"@medusajs/medusa\"\nimport { useAdminCreateShippingProfile } from \"medusa-react\"\n\nconst CreateShippingProfile = () => {\n  const createShippingProfile = useAdminCreateShippingProfile()\n  // ...\n\n  const handleCreate = (\n    name: string,\n    type: ShippingProfileType\n  ) => {\n    createShippingProfile.mutate({\n      name,\n      type\n    }, {\n      onSuccess: ({ shipping_profile }) => {\n        console.log(shipping_profile.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CreateShippingProfile\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18770,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-profiles/index.d.ts",
																			"qualifiedName": "AdminShippingProfilesRes"
																		},
																		"name": "AdminShippingProfilesRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-profiles/create-shipping-profile.d.ts",
																	"qualifiedName": "AdminPostShippingProfilesReq"
																},
																"name": "AdminPostShippingProfilesReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-profiles/index.d.ts",
																	"qualifiedName": "AdminShippingProfilesRes"
																},
																"name": "AdminShippingProfilesRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-profiles/create-shipping-profile.d.ts",
															"qualifiedName": "AdminPostShippingProfilesReq"
														},
														"name": "AdminPostShippingProfilesReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 18771,
									"name": "useAdminUpdateShippingProfile",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18772,
											"name": "useAdminUpdateShippingProfile",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a shipping profile's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { ShippingProfileType } from \"@medusajs/medusa\"\nimport { useAdminUpdateShippingProfile } from \"medusa-react\"\n\ntype Props = {\n  shippingProfileId: string\n}\n\nconst ShippingProfile = ({ shippingProfileId }: Props) => {\n  const updateShippingProfile = useAdminUpdateShippingProfile(\n    shippingProfileId\n  )\n  // ...\n\n  const handleUpdate = (\n    name: string,\n    type: ShippingProfileType\n  ) => {\n    updateShippingProfile.mutate({\n      name,\n      type\n    }, {\n      onSuccess: ({ shipping_profile }) => {\n        console.log(shipping_profile.name)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default ShippingProfile\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18773,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The shipping profile's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 18774,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-profiles/index.d.ts",
																			"qualifiedName": "AdminShippingProfilesRes"
																		},
																		"name": "AdminShippingProfilesRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-profiles/update-shipping-profile.d.ts",
																	"qualifiedName": "AdminPostShippingProfilesProfileReq"
																},
																"name": "AdminPostShippingProfilesProfileReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-profiles/index.d.ts",
																	"qualifiedName": "AdminShippingProfilesRes"
																},
																"name": "AdminShippingProfilesRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-profiles/update-shipping-profile.d.ts",
															"qualifiedName": "AdminPostShippingProfilesProfileReq"
														},
														"name": "AdminPostShippingProfilesProfileReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 18775,
									"name": "useAdminDeleteShippingProfile",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18776,
											"name": "useAdminDeleteShippingProfile",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a shipping profile. Associated shipping options are deleted as well."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteShippingProfile } from \"medusa-react\"\n\ntype Props = {\n  shippingProfileId: string\n}\n\nconst ShippingProfile = ({ shippingProfileId }: Props) => {\n  const deleteShippingProfile = useAdminDeleteShippingProfile(\n    shippingProfileId\n  )\n  // ...\n\n  const handleDelete = () => {\n    deleteShippingProfile.mutate(void 0, {\n      onSuccess: ({ id, object, deleted }) => {\n        console.log(id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default ShippingProfile\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18777,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The shipping profile's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 18778,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																			"qualifiedName": "DeleteResponse"
																		},
																		"name": "DeleteResponse",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																	"qualifiedName": "DeleteResponse"
																},
																"name": "DeleteResponse",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 18737,
									"name": "useAdminShippingProfiles",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18738,
											"name": "useAdminShippingProfiles",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of shipping profiles."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminShippingProfiles } from \"medusa-react\"\n\nconst ShippingProfiles = () => {\n  const { \n    shipping_profiles, \n    isLoading\n  } = useAdminShippingProfiles()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {shipping_profiles && !shipping_profiles.length && (\n        <span>No Shipping Profiles</span>\n      )}\n      {shipping_profiles && shipping_profiles.length > 0 && (\n        <ul>\n          {shipping_profiles.map((profile) => (\n            <li key={profile.id}>{profile.name}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default ShippingProfiles\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18739,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-profiles/index.d.ts",
																			"qualifiedName": "AdminShippingProfilesListRes"
																		},
																		"name": "AdminShippingProfilesListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_shippingProfiles"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 18740,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18742,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18741,
																	"name": "shipping_profiles",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/shipping-profile.d.ts",
																				"qualifiedName": "ShippingProfile"
																			},
																			"name": "ShippingProfile",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18742,
																		18741
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18743,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18745,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18744,
																	"name": "shipping_profiles",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/shipping-profile.d.ts",
																				"qualifiedName": "ShippingProfile"
																			},
																			"name": "ShippingProfile",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18745,
																		18744
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18746,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18748,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18747,
																	"name": "shipping_profiles",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/shipping-profile.d.ts",
																				"qualifiedName": "ShippingProfile"
																			},
																			"name": "ShippingProfile",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18748,
																		18747
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18749,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18751,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18750,
																	"name": "shipping_profiles",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/shipping-profile.d.ts",
																				"qualifiedName": "ShippingProfile"
																			},
																			"name": "ShippingProfile",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18751,
																		18750
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 18752,
									"name": "useAdminShippingProfile",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18753,
											"name": "useAdminShippingProfile",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a shipping profile's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminShippingProfile } from \"medusa-react\"\n\ntype Props = {\n  shippingProfileId: string\n}\n\nconst ShippingProfile = ({ shippingProfileId }: Props) => {\n  const { \n    shipping_profile, \n    isLoading\n  } = useAdminShippingProfile(\n    shippingProfileId\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {shipping_profile && (\n        <span>{shipping_profile.name}</span>\n      )}\n    </div>\n  )\n}\n\nexport default ShippingProfile\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18754,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The shipping option's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 18755,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-profiles/index.d.ts",
																			"qualifiedName": "AdminShippingProfilesRes"
																		},
																		"name": "AdminShippingProfilesRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_shippingProfiles"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 18756,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18758,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18757,
																	"name": "shipping_profile",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/shipping-profile.d.ts",
																			"qualifiedName": "ShippingProfile"
																		},
																		"name": "ShippingProfile",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18758,
																		18757
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18759,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18761,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18760,
																	"name": "shipping_profile",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/shipping-profile.d.ts",
																			"qualifiedName": "ShippingProfile"
																		},
																		"name": "ShippingProfile",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18761,
																		18760
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18762,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18764,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18763,
																	"name": "shipping_profile",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/shipping-profile.d.ts",
																			"qualifiedName": "ShippingProfile"
																		},
																		"name": "ShippingProfile",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18764,
																		18763
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18765,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18767,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18766,
																	"name": "shipping_profile",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/shipping-profile.d.ts",
																			"qualifiedName": "ShippingProfile"
																		},
																		"name": "ShippingProfile",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18767,
																		18766
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										18768,
										18771,
										18775,
										18737,
										18752
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										18737,
										18752
									]
								},
								{
									"title": "Mutations",
									"children": [
										18768,
										18771,
										18775
									]
								}
							]
						},
						{
							"id": 16423,
							"name": "Stock Locations",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Stock Location API Routes](https://docs.medusajs.com/api/admin#stock-locations).\nTo use these hooks, make sure to install the\n[@medusajs/stock-location](https://docs.medusajs.com/modules/multiwarehouse/install-modules#stock-location-module) module in your Medusa backend.\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 16619
									},
									{
										"kind": "text",
										"text": ".\n\nA stock location, provided by the [Stock Location module](https://docs.medusajs.com/modules/multiwarehouse/stock-location-module), \nindicates a physical address that stock-kept items, such as physical products, can be stored in.\nAn admin can create and manage available stock locations.\n\nRelated Guide: [How to manage stock locations](https://docs.medusajs.com/modules/multiwarehouse/admin/manage-stock-locations)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 18826,
									"name": "useAdminCreateStockLocation",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18827,
											"name": "useAdminCreateStockLocation",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a stock location."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateStockLocation } from \"medusa-react\"\n\nconst CreateStockLocation = () => {\n  const createStockLocation = useAdminCreateStockLocation()\n  // ...\n\n  const handleCreate = (name: string) => {\n    createStockLocation.mutate({\n      name,\n    }, {\n      onSuccess: ({ stock_location }) => {\n        console.log(stock_location.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CreateStockLocation\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18828,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/stock-locations/index.d.ts",
																			"qualifiedName": "AdminStockLocationsRes"
																		},
																		"name": "AdminStockLocationsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/stock-locations/create-stock-location.d.ts",
																	"qualifiedName": "AdminPostStockLocationsReq"
																},
																"name": "AdminPostStockLocationsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/stock-locations/index.d.ts",
																	"qualifiedName": "AdminStockLocationsRes"
																},
																"name": "AdminStockLocationsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/stock-locations/create-stock-location.d.ts",
															"qualifiedName": "AdminPostStockLocationsReq"
														},
														"name": "AdminPostStockLocationsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 18829,
									"name": "useAdminUpdateStockLocation",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18830,
											"name": "useAdminUpdateStockLocation",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a stock location's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateStockLocation } from \"medusa-react\"\n\ntype Props = {\n  stockLocationId: string\n}\n\nconst StockLocation = ({ stockLocationId }: Props) => {\n  const updateLocation = useAdminUpdateStockLocation(\n    stockLocationId\n  )\n  // ...\n\n  const handleUpdate = (\n    name: string\n  ) => {\n    updateLocation.mutate({\n      name\n    }, {\n      onSuccess: ({ stock_location }) => {\n        console.log(stock_location.name)\n      }\n    })\n  }\n}\n\nexport default StockLocation\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18831,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The stock location's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 18832,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/stock-locations/index.d.ts",
																			"qualifiedName": "AdminStockLocationsRes"
																		},
																		"name": "AdminStockLocationsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/stock-locations/update-stock-location.d.ts",
																	"qualifiedName": "AdminPostStockLocationsLocationReq"
																},
																"name": "AdminPostStockLocationsLocationReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/stock-locations/index.d.ts",
																	"qualifiedName": "AdminStockLocationsRes"
																},
																"name": "AdminStockLocationsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/stock-locations/update-stock-location.d.ts",
															"qualifiedName": "AdminPostStockLocationsLocationReq"
														},
														"name": "AdminPostStockLocationsLocationReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 18833,
									"name": "useAdminDeleteStockLocation",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18834,
											"name": "useAdminDeleteStockLocation",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a stock location."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteStockLocation } from \"medusa-react\"\n\ntype Props = {\n  stockLocationId: string\n}\n\nconst StockLocation = ({ stockLocationId }: Props) => {\n  const deleteLocation = useAdminDeleteStockLocation(\n    stockLocationId\n  )\n  // ...\n\n  const handleDelete = () => {\n    deleteLocation.mutate(void 0, {\n      onSuccess: ({ id, object, deleted }) => {\n        console.log(id)\n      }\n    })\n  }\n}\n\nexport default StockLocation\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18835,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The stock location's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 18836,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/stock-locations/index.d.ts",
																			"qualifiedName": "AdminStockLocationsDeleteRes"
																		},
																		"name": "AdminStockLocationsDeleteRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/stock-locations/index.d.ts",
																	"qualifiedName": "AdminStockLocationsDeleteRes"
																},
																"name": "AdminStockLocationsDeleteRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 18780,
									"name": "useAdminStockLocations",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18781,
											"name": "useAdminStockLocations",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of stock locations. The stock locations can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`name`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`created_at`"
													},
													{
														"kind": "text",
														"text": " passed in the "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " parameter.\nThe stock locations can also be sorted or paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list stock locations:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminStockLocations } from \"medusa-react\"\n\nfunction StockLocations() {\n  const { \n    stock_locations,\n    isLoading\n  } = useAdminStockLocations()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {stock_locations && !stock_locations.length && (\n        <span>No Locations</span>\n      )}\n      {stock_locations && stock_locations.length > 0 && (\n        <ul>\n          {stock_locations.map(\n            (location) => (\n              <li key={location.id}>{location.name}</li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default StockLocations\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify relations that should be retrieved within the stock locations:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminStockLocations } from \"medusa-react\"\n\nfunction StockLocations() {\n  const { \n    stock_locations,\n    isLoading\n  } = useAdminStockLocations({\n    expand: \"address\"\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {stock_locations && !stock_locations.length && (\n        <span>No Locations</span>\n      )}\n      {stock_locations && stock_locations.length > 0 && (\n        <ul>\n          {stock_locations.map(\n            (location) => (\n              <li key={location.id}>{location.name}</li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default StockLocations\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`20`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminStockLocations } from \"medusa-react\"\n\nfunction StockLocations() {\n  const { \n    stock_locations,\n    limit,\n    offset,\n    isLoading\n  } = useAdminStockLocations({\n    expand: \"address\",\n    limit: 10,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {stock_locations && !stock_locations.length && (\n        <span>No Locations</span>\n      )}\n      {stock_locations && stock_locations.length > 0 && (\n        <ul>\n          {stock_locations.map(\n            (location) => (\n              <li key={location.id}>{location.name}</li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default StockLocations\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18782,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations to apply on the retrieved stock locations."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/stock-locations/list-stock-locations.d.ts",
															"qualifiedName": "AdminGetStockLocationsParams"
														},
														"name": "AdminGetStockLocationsParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 18783,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/stock-locations/index.d.ts",
																			"qualifiedName": "AdminStockLocationsListRes"
																		},
																		"name": "AdminStockLocationsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_stock_locations"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 18784,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 18785,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						18785
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 18786,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18791,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18790,
																	"name": "stock_locations",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
																				"qualifiedName": "StockLocationExpandedDTO"
																			},
																			"name": "StockLocationExpandedDTO",
																			"package": "@medusajs/types"
																		}
																	}
																},
																{
																	"id": 18787,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The limit applied on the retrieved items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18788,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before retrieving the list of items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18789,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total count of items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18791,
																		18790,
																		18787,
																		18788,
																		18789
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18792,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18797,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18796,
																	"name": "stock_locations",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
																				"qualifiedName": "StockLocationExpandedDTO"
																			},
																			"name": "StockLocationExpandedDTO",
																			"package": "@medusajs/types"
																		}
																	}
																},
																{
																	"id": 18793,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The limit applied on the retrieved items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18794,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before retrieving the list of items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18795,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total count of items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18797,
																		18796,
																		18793,
																		18794,
																		18795
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18798,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18803,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18802,
																	"name": "stock_locations",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
																				"qualifiedName": "StockLocationExpandedDTO"
																			},
																			"name": "StockLocationExpandedDTO",
																			"package": "@medusajs/types"
																		}
																	}
																},
																{
																	"id": 18799,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The limit applied on the retrieved items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18800,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before retrieving the list of items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18801,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total count of items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18803,
																		18802,
																		18799,
																		18800,
																		18801
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18804,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18809,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18808,
																	"name": "stock_locations",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
																				"qualifiedName": "StockLocationExpandedDTO"
																			},
																			"name": "StockLocationExpandedDTO",
																			"package": "@medusajs/types"
																		}
																	}
																},
																{
																	"id": 18805,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The limit applied on the retrieved items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18806,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before retrieving the list of items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18807,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total count of items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18809,
																		18808,
																		18805,
																		18806,
																		18807
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 18810,
									"name": "useAdminStockLocation",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18811,
											"name": "useAdminStockLocation",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a stock location's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminStockLocation } from \"medusa-react\"\n\ntype Props = {\n  stockLocationId: string\n}\n\nconst StockLocation = ({ stockLocationId }: Props) => {\n  const { \n    stock_location,\n    isLoading\n  } = useAdminStockLocation(stockLocationId)\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {stock_location && (\n        <span>{stock_location.name}</span>\n      )}\n    </div>\n  )\n}\n\nexport default StockLocation\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18812,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The stock location's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 18813,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/stock-locations/index.d.ts",
																			"qualifiedName": "AdminStockLocationsRes"
																		},
																		"name": "AdminStockLocationsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_stock_locations"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 18814,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18816,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18815,
																	"name": "stock_location",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
																			"qualifiedName": "StockLocationExpandedDTO"
																		},
																		"name": "StockLocationExpandedDTO",
																		"package": "@medusajs/types"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18816,
																		18815
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18817,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18819,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18818,
																	"name": "stock_location",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
																			"qualifiedName": "StockLocationExpandedDTO"
																		},
																		"name": "StockLocationExpandedDTO",
																		"package": "@medusajs/types"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18819,
																		18818
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18820,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18822,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18821,
																	"name": "stock_location",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
																			"qualifiedName": "StockLocationExpandedDTO"
																		},
																		"name": "StockLocationExpandedDTO",
																		"package": "@medusajs/types"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18822,
																		18821
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18823,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18825,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18824,
																	"name": "stock_location",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
																			"qualifiedName": "StockLocationExpandedDTO"
																		},
																		"name": "StockLocationExpandedDTO",
																		"package": "@medusajs/types"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18825,
																		18824
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										18826,
										18829,
										18833,
										18780,
										18810
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										18780,
										18810
									]
								},
								{
									"title": "Mutations",
									"children": [
										18826,
										18829,
										18833
									]
								}
							]
						},
						{
							"id": 16424,
							"name": "Stores",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Store API Routes](https://docs.medusajs.com/api/admin#store).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 16619
									},
									{
										"kind": "text",
										"text": ".\n\nA store indicates the general configurations and details about the commerce store. By default, there's only one store in the Medusa backend.\nAdmins can manage the store and its details or configurations."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 18883,
									"name": "useAdminUpdateStore",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18884,
											"name": "useAdminUpdateStore",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates the store's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateStore } from \"medusa-react\"\n\nfunction Store() {\n  const updateStore = useAdminUpdateStore()\n  // ...\n\n  const handleUpdate = (\n    name: string\n  ) => {\n    updateStore.mutate({\n      name\n    }, {\n      onSuccess: ({ store }) => {\n        console.log(store.name)\n      }\n    })\n  }\n}\n\nexport default Store\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18885,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/store/index.d.ts",
																			"qualifiedName": "AdminStoresRes"
																		},
																		"name": "AdminStoresRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/store/update-store.d.ts",
																	"qualifiedName": "AdminPostStoreReq"
																},
																"name": "AdminPostStoreReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/store/index.d.ts",
																	"qualifiedName": "AdminStoresRes"
																},
																"name": "AdminStoresRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/store/update-store.d.ts",
															"qualifiedName": "AdminPostStoreReq"
														},
														"name": "AdminPostStoreReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 18886,
									"name": "useAdminAddStoreCurrency",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18887,
											"name": "useAdminAddStoreCurrency",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook adds a currency code to the available currencies in a store. This doesn't create new currencies, as currencies are defined within the Medusa backend. \nTo create a currency, you can [create a migration](https://docs.medusajs.com/development/entities/migrations/create) that inserts the currency into the database."
													}
												],
												"blockTags": [
													{
														"tag": "@typeParamDefinition",
														"content": [
															{
																"kind": "text",
																"text": "string - The code of the currency to add to the store."
															}
														]
													},
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminAddStoreCurrency } from \"medusa-react\"\n\nconst Store = () => {\n  const addCurrency = useAdminAddStoreCurrency()\n  // ...\n\n  const handleAdd = (code: string) => {\n    addCurrency.mutate(code, {\n      onSuccess: ({ store }) => {\n        console.log(store.currencies)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Store\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18888,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/store/index.d.ts",
																			"qualifiedName": "AdminStoresRes"
																		},
																		"name": "AdminStoresRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/store/index.d.ts",
																	"qualifiedName": "AdminStoresRes"
																},
																"name": "AdminStoresRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 18889,
									"name": "useAdminDeleteStoreCurrency",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18890,
											"name": "useAdminDeleteStoreCurrency",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a currency code from the available currencies in a store. This doesn't completely \ndelete the currency and it can be added again later to the store."
													}
												],
												"blockTags": [
													{
														"tag": "@typeParamDefinition",
														"content": [
															{
																"kind": "text",
																"text": "string - The code of the currency to remove from the store."
															}
														]
													},
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteStoreCurrency } from \"medusa-react\"\n\nconst Store = () => {\n  const deleteCurrency = useAdminDeleteStoreCurrency()\n  // ...\n\n  const handleAdd = (code: string) => {\n    deleteCurrency.mutate(code, {\n      onSuccess: ({ store }) => {\n        console.log(store.currencies)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Store\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18891,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/store/index.d.ts",
																			"qualifiedName": "AdminStoresRes"
																		},
																		"name": "AdminStoresRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/store/index.d.ts",
																	"qualifiedName": "AdminStoresRes"
																},
																"name": "AdminStoresRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 18838,
									"name": "useAdminStorePaymentProviders",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18839,
											"name": "useAdminStorePaymentProviders",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of available payment providers in a store."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminStorePaymentProviders } from \"medusa-react\"\n\nconst PaymentProviders = () => {\n  const { \n    payment_providers,\n    isLoading\n  } = useAdminStorePaymentProviders()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {payment_providers && !payment_providers.length && (\n        <span>No Payment Providers</span>\n      )}\n      {payment_providers && \n        payment_providers.length > 0 &&(\n          <ul>\n            {payment_providers.map((provider) => (\n              <li key={provider.id}>{provider.id}</li>\n            ))}\n          </ul>\n      )}\n    </div>\n  )\n}\n\nexport default PaymentProviders\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18840,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/store/index.d.ts",
																			"qualifiedName": "AdminPaymentProvidersList"
																		},
																		"name": "AdminPaymentProvidersList",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_store"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 18841,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18843,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18842,
																	"name": "payment_providers",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/payment-provider.d.ts",
																				"qualifiedName": "PaymentProvider"
																			},
																			"name": "PaymentProvider",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18843,
																		18842
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18844,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18846,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18845,
																	"name": "payment_providers",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/payment-provider.d.ts",
																				"qualifiedName": "PaymentProvider"
																			},
																			"name": "PaymentProvider",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18846,
																		18845
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18847,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18849,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18848,
																	"name": "payment_providers",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/payment-provider.d.ts",
																				"qualifiedName": "PaymentProvider"
																			},
																			"name": "PaymentProvider",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18849,
																		18848
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18850,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18852,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18851,
																	"name": "payment_providers",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/payment-provider.d.ts",
																				"qualifiedName": "PaymentProvider"
																			},
																			"name": "PaymentProvider",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18852,
																		18851
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 18853,
									"name": "useAdminStoreTaxProviders",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18854,
											"name": "useAdminStoreTaxProviders",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of available tax providers in a store."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminStoreTaxProviders } from \"medusa-react\"\n\nconst TaxProviders = () => {\n  const { \n    tax_providers,\n    isLoading\n  } = useAdminStoreTaxProviders()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {tax_providers && !tax_providers.length && (\n        <span>No Tax Providers</span>\n      )}\n      {tax_providers && \n        tax_providers.length > 0 &&(\n          <ul>\n            {tax_providers.map((provider) => (\n              <li key={provider.id}>{provider.id}</li>\n            ))}\n          </ul>\n      )}\n    </div>\n  )\n}\n\nexport default TaxProviders\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18855,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/store/index.d.ts",
																			"qualifiedName": "AdminTaxProvidersList"
																		},
																		"name": "AdminTaxProvidersList",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_store"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 18856,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18858,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18857,
																	"name": "tax_providers",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/tax-provider.d.ts",
																				"qualifiedName": "TaxProvider"
																			},
																			"name": "TaxProvider",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18858,
																		18857
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18859,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18861,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18860,
																	"name": "tax_providers",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/tax-provider.d.ts",
																				"qualifiedName": "TaxProvider"
																			},
																			"name": "TaxProvider",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18861,
																		18860
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18862,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18864,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18863,
																	"name": "tax_providers",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/tax-provider.d.ts",
																				"qualifiedName": "TaxProvider"
																			},
																			"name": "TaxProvider",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18864,
																		18863
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18865,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18867,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18866,
																	"name": "tax_providers",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/tax-provider.d.ts",
																				"qualifiedName": "TaxProvider"
																			},
																			"name": "TaxProvider",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18867,
																		18866
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 18868,
									"name": "useAdminStore",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18869,
											"name": "useAdminStore",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves the store's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminStore } from \"medusa-react\"\n\nconst Store = () => {\n  const { \n    store,\n    isLoading\n  } = useAdminStore()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {store && <span>{store.name}</span>}\n    </div>\n  )\n}\n\nexport default Store\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18870,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/store/index.d.ts",
																			"qualifiedName": "AdminExtendedStoresRes"
																		},
																		"name": "AdminExtendedStoresRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_store"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 18871,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18873,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18872,
																	"name": "store",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/store.d.ts",
																			"qualifiedName": "ExtendedStoreDTO"
																		},
																		"name": "ExtendedStoreDTO",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18873,
																		18872
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18874,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18876,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18875,
																	"name": "store",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/store.d.ts",
																			"qualifiedName": "ExtendedStoreDTO"
																		},
																		"name": "ExtendedStoreDTO",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18876,
																		18875
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18877,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18879,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18878,
																	"name": "store",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/store.d.ts",
																			"qualifiedName": "ExtendedStoreDTO"
																		},
																		"name": "ExtendedStoreDTO",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18879,
																		18878
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18880,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18882,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18881,
																	"name": "store",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/store.d.ts",
																			"qualifiedName": "ExtendedStoreDTO"
																		},
																		"name": "ExtendedStoreDTO",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18882,
																		18881
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										18883,
										18886,
										18889,
										18838,
										18853,
										18868
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										18838,
										18853,
										18868
									]
								},
								{
									"title": "Mutations",
									"children": [
										18883,
										18886,
										18889
									]
								}
							]
						},
						{
							"id": 16425,
							"name": "Swaps",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Swap API Routes](https://docs.medusajs.com/api/admin#swaps).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 16619
									},
									{
										"kind": "text",
										"text": ".\n\nA swap is created by a customer or an admin to exchange an item with a new one.\nCreating a swap implicitely includes creating a return for the item being exchanged.\n\nRelated Guide: [How to manage swaps](https://docs.medusajs.com/modules/orders/admin/manage-swaps)"
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 18939,
									"name": "useAdminCreateSwap",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18940,
											"name": "useAdminCreateSwap",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a swap for an order. This includes creating a return that is associated with the swap."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateSwap } from \"medusa-react\"\n\ntype Props = {\n  orderId: string\n}\n\nconst CreateSwap = ({ orderId }: Props) => {\n  const createSwap = useAdminCreateSwap(orderId)\n  // ...\n\n  const handleCreate = (\n    returnItems: {\n      item_id: string,\n      quantity: number\n    }[]\n  ) => {\n    createSwap.mutate({\n      return_items: returnItems\n    }, {\n      onSuccess: ({ order }) => {\n        console.log(order.swaps)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CreateSwap\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18941,
													"name": "orderId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The associated order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 18942,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																			"qualifiedName": "AdminOrdersRes"
																		},
																		"name": "AdminOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/create-swap.d.ts",
																	"qualifiedName": "AdminPostOrdersOrderSwapsReq"
																},
																"name": "AdminPostOrdersOrderSwapsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																	"qualifiedName": "AdminOrdersRes"
																},
																"name": "AdminOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/create-swap.d.ts",
															"qualifiedName": "AdminPostOrdersOrderSwapsReq"
														},
														"name": "AdminPostOrdersOrderSwapsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 18943,
									"name": "useAdminCancelSwap",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18944,
											"name": "useAdminCancelSwap",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook cancels a swap and change its status."
													}
												],
												"blockTags": [
													{
														"tag": "@typeParamDefinition",
														"content": [
															{
																"kind": "text",
																"text": "string - The swap's ID."
															}
														]
													},
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCancelSwap } from \"medusa-react\"\n\ntype Props = {\n  orderId: string,\n  swapId: string\n}\n\nconst Swap = ({\n  orderId,\n  swapId\n}: Props) => {\n  const cancelSwap = useAdminCancelSwap(\n    orderId\n  )\n  // ...\n\n  const handleCancel = () => {\n    cancelSwap.mutate(swapId, {\n      onSuccess: ({ order }) => {\n        console.log(order.swaps)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Swap\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18945,
													"name": "orderId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The associated order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 18946,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																			"qualifiedName": "AdminOrdersRes"
																		},
																		"name": "AdminOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																	"qualifiedName": "AdminOrdersRes"
																},
																"name": "AdminOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 18950,
									"name": "useAdminFulfillSwap",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18951,
											"name": "useAdminFulfillSwap",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a Fulfillment for a Swap and change its fulfillment status to "
													},
													{
														"kind": "code",
														"text": "`fulfilled`"
													},
													{
														"kind": "text",
														"text": ". If it requires any additional actions,\nits fulfillment status may change to "
													},
													{
														"kind": "code",
														"text": "`requires_action`"
													},
													{
														"kind": "text",
														"text": "."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminFulfillSwap } from \"medusa-react\"\n\ntype Props = {\n  orderId: string,\n  swapId: string\n}\n\nconst Swap = ({\n  orderId,\n  swapId\n}: Props) => {\n  const fulfillSwap = useAdminFulfillSwap(\n    orderId\n  )\n  // ...\n\n  const handleFulfill = () => {\n    fulfillSwap.mutate({\n      swap_id: swapId,\n    }, {\n      onSuccess: ({ order }) => {\n        console.log(order.swaps)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Swap\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18952,
													"name": "orderId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The associated order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 18953,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																			"qualifiedName": "AdminOrdersRes"
																		},
																		"name": "AdminOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": 18947,
																"name": "AdminFulfillSwapReq",
																"package": "medusa-react"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																	"qualifiedName": "AdminOrdersRes"
																},
																"name": "AdminOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": 18947,
														"name": "AdminFulfillSwapReq",
														"package": "medusa-react"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 18957,
									"name": "useAdminCreateSwapShipment",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18958,
											"name": "useAdminCreateSwapShipment",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a shipment for a swap and mark its fulfillment as shipped. This changes the swap's fulfillment status\nto either "
													},
													{
														"kind": "code",
														"text": "`shipped`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`partially_shipped`"
													},
													{
														"kind": "text",
														"text": ", depending on whether all the items were shipped."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateSwapShipment } from \"medusa-react\"\n\ntype Props = {\n  orderId: string,\n  swapId: string\n}\n\nconst Swap = ({\n  orderId,\n  swapId\n}: Props) => {\n  const createShipment = useAdminCreateSwapShipment(\n    orderId\n  )\n  // ...\n\n  const handleCreateShipment = (\n    fulfillmentId: string\n  ) => {\n    createShipment.mutate({\n      swap_id: swapId,\n      fulfillment_id: fulfillmentId,\n    }, {\n      onSuccess: ({ order }) => {\n        console.log(order.swaps)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Swap\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18959,
													"name": "orderId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The associated order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 18960,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																			"qualifiedName": "AdminOrdersRes"
																		},
																		"name": "AdminOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": 18954,
																"name": "AdminCreateSwapShipmentReq",
																"package": "medusa-react"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																	"qualifiedName": "AdminOrdersRes"
																},
																"name": "AdminOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": 18954,
														"name": "AdminCreateSwapShipmentReq",
														"package": "medusa-react"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 18961,
									"name": "useAdminProcessSwapPayment",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18962,
											"name": "useAdminProcessSwapPayment",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook process a swap's payment either by refunding or issuing a payment. This depends on the "
													},
													{
														"kind": "code",
														"text": "`difference_due`"
													},
													{
														"kind": "text",
														"text": " \nof the swap. If "
													},
													{
														"kind": "code",
														"text": "`difference_due`"
													},
													{
														"kind": "text",
														"text": " is negative, the amount is refunded. If "
													},
													{
														"kind": "code",
														"text": "`difference_due`"
													},
													{
														"kind": "text",
														"text": " is positive, the amount is captured."
													}
												],
												"blockTags": [
													{
														"tag": "@typeParamDefinition",
														"content": [
															{
																"kind": "text",
																"text": "string - The swap's ID."
															}
														]
													},
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminProcessSwapPayment } from \"medusa-react\"\n\ntype Props = {\n  orderId: string,\n  swapId: string\n}\n\nconst Swap = ({\n  orderId,\n  swapId\n}: Props) => {\n  const processPayment = useAdminProcessSwapPayment(\n    orderId\n  )\n  // ...\n\n  const handleProcessPayment = () => {\n    processPayment.mutate(swapId, {\n      onSuccess: ({ order }) => {\n        console.log(order.swaps)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Swap\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18963,
													"name": "orderId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The associated order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 18964,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																			"qualifiedName": "AdminOrdersRes"
																		},
																		"name": "AdminOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																	"qualifiedName": "AdminOrdersRes"
																},
																"name": "AdminOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 18969,
									"name": "useAdminCancelSwapFulfillment",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18970,
											"name": "useAdminCancelSwapFulfillment",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook cancels a swap's fulfillment and change its fulfillment status to "
													},
													{
														"kind": "code",
														"text": "`canceled`"
													},
													{
														"kind": "text",
														"text": "."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCancelSwapFulfillment } from \"medusa-react\"\n\ntype Props = {\n  orderId: string,\n  swapId: string\n}\n\nconst Swap = ({\n  orderId,\n  swapId\n}: Props) => {\n  const cancelFulfillment = useAdminCancelSwapFulfillment(\n    orderId\n  )\n  // ...\n\n  const handleCancelFulfillment = (\n    fulfillmentId: string\n  ) => {\n    cancelFulfillment.mutate({\n      swap_id: swapId,\n      fulfillment_id: fulfillmentId,\n    })\n  }\n\n  // ...\n}\n\nexport default Swap\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18971,
													"name": "orderId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The associated order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 18972,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																			"qualifiedName": "AdminOrdersRes"
																		},
																		"name": "AdminOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 18973,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 18974,
																			"name": "swap_id",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 18975,
																			"name": "fulfillment_id",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				18974,
																				18975
																			]
																		}
																	]
																}
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																	"qualifiedName": "AdminOrdersRes"
																},
																"name": "AdminOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18976,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18977,
																	"name": "swap_id",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 18978,
																	"name": "fulfillment_id",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18977,
																		18978
																	]
																}
															]
														}
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 18893,
									"name": "useAdminSwaps",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18894,
											"name": "useAdminSwaps",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of swaps. The swaps can be paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list swaps:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminSwaps } from \"medusa-react\"\n\nconst Swaps = () => {\n  const { swaps, isLoading } = useAdminSwaps()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {swaps && !swaps.length && <span>No Swaps</span>}\n      {swaps && swaps.length > 0 && (\n        <ul>\n          {swaps.map((swap) => (\n            <li key={swap.id}>{swap.payment_status}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Swaps\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`50`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminSwaps } from \"medusa-react\"\n\nconst Swaps = () => {\n  const { \n    swaps, \n    limit,\n    offset,\n    isLoading\n  } = useAdminSwaps({\n    limit: 10,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {swaps && !swaps.length && <span>No Swaps</span>}\n      {swaps && swaps.length > 0 && (\n        <ul>\n          {swaps.map((swap) => (\n            <li key={swap.id}>{swap.payment_status}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Swaps\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18895,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Pagination configurations to apply on the retrieved swaps."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/swaps/list-swaps.d.ts",
															"qualifiedName": "AdminGetSwapsParams"
														},
														"name": "AdminGetSwapsParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 18896,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/swaps/index.d.ts",
																			"qualifiedName": "AdminSwapsListRes"
																		},
																		"name": "AdminSwapsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_swaps"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 18897,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 18898,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						18898
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 18899,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18904,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18903,
																	"name": "swaps",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/swap.d.ts",
																				"qualifiedName": "Swap"
																			},
																			"name": "Swap",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 18900,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18901,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18902,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18904,
																		18903,
																		18900,
																		18901,
																		18902
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18905,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18910,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18909,
																	"name": "swaps",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/swap.d.ts",
																				"qualifiedName": "Swap"
																			},
																			"name": "Swap",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 18906,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18907,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18908,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18910,
																		18909,
																		18906,
																		18907,
																		18908
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18911,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18916,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18915,
																	"name": "swaps",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/swap.d.ts",
																				"qualifiedName": "Swap"
																			},
																			"name": "Swap",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 18912,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18913,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18914,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18916,
																		18915,
																		18912,
																		18913,
																		18914
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18917,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18922,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18921,
																	"name": "swaps",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/swap.d.ts",
																				"qualifiedName": "Swap"
																			},
																			"name": "Swap",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 18918,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18919,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18920,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18922,
																		18921,
																		18918,
																		18919,
																		18920
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 18923,
									"name": "useAdminSwap",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18924,
											"name": "useAdminSwap",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a swap's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminSwap } from \"medusa-react\"\n\ntype Props = {\n  swapId: string\n}\n\nconst Swap = ({ swapId }: Props) => {\n  const { swap, isLoading } = useAdminSwap(swapId)\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {swap && <span>{swap.id}</span>}\n    </div>\n  )\n}\n\nexport default Swap\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18925,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The swap's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 18926,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/swaps/index.d.ts",
																			"qualifiedName": "AdminSwapsRes"
																		},
																		"name": "AdminSwapsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_swaps"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 18927,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18929,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18928,
																	"name": "swap",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/swap.d.ts",
																			"qualifiedName": "Swap"
																		},
																		"name": "Swap",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18929,
																		18928
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18930,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18932,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18931,
																	"name": "swap",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/swap.d.ts",
																			"qualifiedName": "Swap"
																		},
																		"name": "Swap",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18932,
																		18931
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18933,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18935,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18934,
																	"name": "swap",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/swap.d.ts",
																			"qualifiedName": "Swap"
																		},
																		"name": "Swap",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18935,
																		18934
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18936,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18938,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18937,
																	"name": "swap",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/swap.d.ts",
																			"qualifiedName": "Swap"
																		},
																		"name": "Swap",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18938,
																		18937
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										18939,
										18943,
										18950,
										18957,
										18961,
										18969,
										18893,
										18923
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										18893,
										18923
									]
								},
								{
									"title": "Mutations",
									"children": [
										18939,
										18943,
										18950,
										18957,
										18961,
										18969
									]
								}
							]
						},
						{
							"id": 16426,
							"name": "Tax Rates",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Tax Rate API Routes](https://docs.medusajs.com/api/admin#tax-rates).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 16619
									},
									{
										"kind": "text",
										"text": ".\n\nEach region has at least a default tax rate. Admins can create and manage additional tax rates that can be applied for certain conditions, such as for specific product types.\n\nRelated Guide: [How to manage tax rates](https://docs.medusajs.com/modules/taxes/admin/manage-tax-rates)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 19027,
									"name": "useAdminCreateTaxRate",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 19028,
											"name": "useAdminCreateTaxRate",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a tax rate."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateTaxRate } from \"medusa-react\"\n\ntype Props = {\n  regionId: string\n}\n\nconst CreateTaxRate = ({ regionId }: Props) => {\n  const createTaxRate = useAdminCreateTaxRate()\n  // ...\n\n  const handleCreate = (\n    code: string,\n    name: string,\n    rate: number\n  ) => {\n    createTaxRate.mutate({\n      code,\n      name,\n      region_id: regionId,\n      rate,\n    }, {\n      onSuccess: ({ tax_rate }) => {\n        console.log(tax_rate.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CreateTaxRate\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 19029,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
																			"qualifiedName": "AdminTaxRatesRes"
																		},
																		"name": "AdminTaxRatesRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/create-tax-rate.d.ts",
																	"qualifiedName": "AdminPostTaxRatesReq"
																},
																"name": "AdminPostTaxRatesReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
																	"qualifiedName": "AdminTaxRatesRes"
																},
																"name": "AdminTaxRatesRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/create-tax-rate.d.ts",
															"qualifiedName": "AdminPostTaxRatesReq"
														},
														"name": "AdminPostTaxRatesReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 19030,
									"name": "useAdminUpdateTaxRate",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 19031,
											"name": "useAdminUpdateTaxRate",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a tax rate's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateTaxRate } from \"medusa-react\"\n\ntype Props = {\n  taxRateId: string\n}\n\nconst TaxRate = ({ taxRateId }: Props) => {\n  const updateTaxRate = useAdminUpdateTaxRate(taxRateId)\n  // ...\n\n  const handleUpdate = (\n    name: string\n  ) => {\n    updateTaxRate.mutate({\n      name\n    }, {\n      onSuccess: ({ tax_rate }) => {\n        console.log(tax_rate.name)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default TaxRate\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 19032,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The tax rate's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 19033,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
																			"qualifiedName": "AdminTaxRatesRes"
																		},
																		"name": "AdminTaxRatesRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/update-tax-rate.d.ts",
																	"qualifiedName": "AdminPostTaxRatesTaxRateReq"
																},
																"name": "AdminPostTaxRatesTaxRateReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
																	"qualifiedName": "AdminTaxRatesRes"
																},
																"name": "AdminTaxRatesRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/update-tax-rate.d.ts",
															"qualifiedName": "AdminPostTaxRatesTaxRateReq"
														},
														"name": "AdminPostTaxRatesTaxRateReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 19034,
									"name": "useAdminDeleteTaxRate",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 19035,
											"name": "useAdminDeleteTaxRate",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a tax rate. Resources associated with the tax rate, such as products or product types, are not deleted."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteTaxRate } from \"medusa-react\"\n\ntype Props = {\n  taxRateId: string\n}\n\nconst TaxRate = ({ taxRateId }: Props) => {\n  const deleteTaxRate = useAdminDeleteTaxRate(taxRateId)\n  // ...\n\n  const handleDelete = () => {\n    deleteTaxRate.mutate(void 0, {\n      onSuccess: ({ id, object, deleted }) => {\n        console.log(id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default TaxRate\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 19036,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The tax rate's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 19037,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																			"qualifiedName": "DeleteResponse"
																		},
																		"name": "DeleteResponse",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																	"qualifiedName": "DeleteResponse"
																},
																"name": "DeleteResponse",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 19038,
									"name": "useAdminCreateProductTaxRates",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 19039,
											"name": "useAdminCreateProductTaxRates",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook adds products to a tax rate."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateProductTaxRates } from \"medusa-react\"\n\ntype Props = {\n  taxRateId: string\n}\n\nconst TaxRate = ({ taxRateId }: Props) => {\n  const addProduct = useAdminCreateProductTaxRates(taxRateId)\n  // ...\n\n  const handleAddProduct = (productIds: string[]) => {\n    addProduct.mutate({\n      products: productIds,\n    }, {\n      onSuccess: ({ tax_rate }) => {\n        console.log(tax_rate.products)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default TaxRate\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 19040,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The tax rate's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 19041,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
																			"qualifiedName": "AdminTaxRatesRes"
																		},
																		"name": "AdminTaxRatesRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/add-to-products.d.ts",
																	"qualifiedName": "AdminPostTaxRatesTaxRateProductsReq"
																},
																"name": "AdminPostTaxRatesTaxRateProductsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
																	"qualifiedName": "AdminTaxRatesRes"
																},
																"name": "AdminTaxRatesRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/add-to-products.d.ts",
															"qualifiedName": "AdminPostTaxRatesTaxRateProductsReq"
														},
														"name": "AdminPostTaxRatesTaxRateProductsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 19042,
									"name": "useAdminDeleteProductTaxRates",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 19043,
											"name": "useAdminDeleteProductTaxRates",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook removes products from a tax rate. This only removes the association between the products and the tax rate. It does not delete the products."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteProductTaxRates } from \"medusa-react\"\n\ntype Props = {\n  taxRateId: string\n}\n\nconst TaxRate = ({ taxRateId }: Props) => {\n  const removeProduct = useAdminDeleteProductTaxRates(taxRateId)\n  // ...\n\n  const handleRemoveProduct = (productIds: string[]) => {\n    removeProduct.mutate({\n      products: productIds,\n    }, {\n      onSuccess: ({ tax_rate }) => {\n        console.log(tax_rate.products)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default TaxRate\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 19044,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The tax rate's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 19045,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
																			"qualifiedName": "AdminTaxRatesRes"
																		},
																		"name": "AdminTaxRatesRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/remove-from-products.d.ts",
																	"qualifiedName": "AdminDeleteTaxRatesTaxRateProductsReq"
																},
																"name": "AdminDeleteTaxRatesTaxRateProductsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
																	"qualifiedName": "AdminTaxRatesRes"
																},
																"name": "AdminTaxRatesRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/remove-from-products.d.ts",
															"qualifiedName": "AdminDeleteTaxRatesTaxRateProductsReq"
														},
														"name": "AdminDeleteTaxRatesTaxRateProductsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 19046,
									"name": "useAdminCreateProductTypeTaxRates",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 19047,
											"name": "useAdminCreateProductTypeTaxRates",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook adds product types to a tax rate."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { \n  useAdminCreateProductTypeTaxRates,\n} from \"medusa-react\"\n\ntype Props = {\n  taxRateId: string\n}\n\nconst TaxRate = ({ taxRateId }: Props) => {\n  const addProductTypes = useAdminCreateProductTypeTaxRates(\n    taxRateId\n  )\n  // ...\n\n  const handleAddProductTypes = (productTypeIds: string[]) => {\n    addProductTypes.mutate({\n      product_types: productTypeIds,\n    }, {\n      onSuccess: ({ tax_rate }) => {\n        console.log(tax_rate.product_types)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default TaxRate\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 19048,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The tax rate's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 19049,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
																			"qualifiedName": "AdminTaxRatesRes"
																		},
																		"name": "AdminTaxRatesRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/add-to-product-types.d.ts",
																	"qualifiedName": "AdminPostTaxRatesTaxRateProductTypesReq"
																},
																"name": "AdminPostTaxRatesTaxRateProductTypesReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
																	"qualifiedName": "AdminTaxRatesRes"
																},
																"name": "AdminTaxRatesRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/add-to-product-types.d.ts",
															"qualifiedName": "AdminPostTaxRatesTaxRateProductTypesReq"
														},
														"name": "AdminPostTaxRatesTaxRateProductTypesReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 19050,
									"name": "useAdminDeleteProductTypeTaxRates",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 19051,
											"name": "useAdminDeleteProductTypeTaxRates",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook removes product types from a tax rate. This only removes the association between the \nproduct types and the tax rate. It does not delete the product types."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { \n  useAdminDeleteProductTypeTaxRates,\n} from \"medusa-react\"\n\ntype Props = {\n  taxRateId: string\n}\n\nconst TaxRate = ({ taxRateId }: Props) => {\n  const removeProductTypes = useAdminDeleteProductTypeTaxRates(\n    taxRateId\n  )\n  // ...\n\n  const handleRemoveProductTypes = (\n    productTypeIds: string[]\n  ) => {\n    removeProductTypes.mutate({\n      product_types: productTypeIds,\n    }, {\n      onSuccess: ({ tax_rate }) => {\n        console.log(tax_rate.product_types)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default TaxRate\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 19052,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The tax rate's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 19053,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
																			"qualifiedName": "AdminTaxRatesRes"
																		},
																		"name": "AdminTaxRatesRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/remove-from-product-types.d.ts",
																	"qualifiedName": "AdminDeleteTaxRatesTaxRateProductTypesReq"
																},
																"name": "AdminDeleteTaxRatesTaxRateProductTypesReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
																	"qualifiedName": "AdminTaxRatesRes"
																},
																"name": "AdminTaxRatesRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/remove-from-product-types.d.ts",
															"qualifiedName": "AdminDeleteTaxRatesTaxRateProductTypesReq"
														},
														"name": "AdminDeleteTaxRatesTaxRateProductTypesReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 19054,
									"name": "useAdminCreateShippingTaxRates",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 19055,
											"name": "useAdminCreateShippingTaxRates",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook adds shipping options to a tax rate."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateShippingTaxRates } from \"medusa-react\"\n\ntype Props = {\n  taxRateId: string\n}\n\nconst TaxRate = ({ taxRateId }: Props) => {\n  const addShippingOption = useAdminCreateShippingTaxRates(\n    taxRateId\n  )\n  // ...\n\n  const handleAddShippingOptions = (\n    shippingOptionIds: string[]\n  ) => {\n    addShippingOption.mutate({\n      shipping_options: shippingOptionIds,\n    }, {\n      onSuccess: ({ tax_rate }) => {\n        console.log(tax_rate.shipping_options)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default TaxRate\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 19056,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The tax rate's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 19057,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
																			"qualifiedName": "AdminTaxRatesRes"
																		},
																		"name": "AdminTaxRatesRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/add-to-shipping-options.d.ts",
																	"qualifiedName": "AdminPostTaxRatesTaxRateShippingOptionsReq"
																},
																"name": "AdminPostTaxRatesTaxRateShippingOptionsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
																	"qualifiedName": "AdminTaxRatesRes"
																},
																"name": "AdminTaxRatesRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/add-to-shipping-options.d.ts",
															"qualifiedName": "AdminPostTaxRatesTaxRateShippingOptionsReq"
														},
														"name": "AdminPostTaxRatesTaxRateShippingOptionsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 19058,
									"name": "useAdminDeleteShippingTaxRates",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 19059,
											"name": "useAdminDeleteShippingTaxRates",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook removes shipping options from a tax rate. This only removes the association between \nthe shipping options and the tax rate. It does not delete the shipping options."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteShippingTaxRates } from \"medusa-react\"\n\ntype Props = {\n  taxRateId: string\n}\n\nconst TaxRate = ({ taxRateId }: Props) => {\n  const removeShippingOptions = useAdminDeleteShippingTaxRates(\n    taxRateId\n  )\n  // ...\n\n  const handleRemoveShippingOptions = (\n    shippingOptionIds: string[]\n  ) => {\n    removeShippingOptions.mutate({\n      shipping_options: shippingOptionIds,\n    }, {\n      onSuccess: ({ tax_rate }) => {\n        console.log(tax_rate.shipping_options)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default TaxRate\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 19060,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The tax rate's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 19061,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
																			"qualifiedName": "AdminTaxRatesRes"
																		},
																		"name": "AdminTaxRatesRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/remove-from-shipping-options.d.ts",
																	"qualifiedName": "AdminDeleteTaxRatesTaxRateShippingOptionsReq"
																},
																"name": "AdminDeleteTaxRatesTaxRateShippingOptionsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
																	"qualifiedName": "AdminTaxRatesRes"
																},
																"name": "AdminTaxRatesRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/remove-from-shipping-options.d.ts",
															"qualifiedName": "AdminDeleteTaxRatesTaxRateShippingOptionsReq"
														},
														"name": "AdminDeleteTaxRatesTaxRateShippingOptionsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 18980,
									"name": "useAdminTaxRates",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 18981,
											"name": "useAdminTaxRates",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of tax rates. The tax rates can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`name`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`rate`"
													},
													{
														"kind": "text",
														"text": " \npassed in the "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " parameter. The tax rates can also be paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list tax rates:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminTaxRates } from \"medusa-react\"\n\nconst TaxRates = () => {\n  const { \n    tax_rates, \n    isLoading\n  } = useAdminTaxRates()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {tax_rates && !tax_rates.length && (\n        <span>No Tax Rates</span>\n      )}\n      {tax_rates && tax_rates.length > 0 && (\n        <ul>\n          {tax_rates.map((tax_rate) => (\n            <li key={tax_rate.id}>{tax_rate.code}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default TaxRates\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify relations that should be retrieved within the tax rates:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminTaxRates } from \"medusa-react\"\n\nconst TaxRates = () => {\n  const { \n    tax_rates, \n    isLoading\n  } = useAdminTaxRates({\n    expand: [\"shipping_options\"]\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {tax_rates && !tax_rates.length && (\n        <span>No Tax Rates</span>\n      )}\n      {tax_rates && tax_rates.length > 0 && (\n        <ul>\n          {tax_rates.map((tax_rate) => (\n            <li key={tax_rate.id}>{tax_rate.code}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default TaxRates\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`50`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminTaxRates } from \"medusa-react\"\n\nconst TaxRates = () => {\n  const { \n    tax_rates, \n    limit,\n    offset,\n    isLoading\n  } = useAdminTaxRates({\n    expand: [\"shipping_options\"],\n    limit: 10,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {tax_rates && !tax_rates.length && (\n        <span>No Tax Rates</span>\n      )}\n      {tax_rates && tax_rates.length > 0 && (\n        <ul>\n          {tax_rates.map((tax_rate) => (\n            <li key={tax_rate.id}>{tax_rate.code}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default TaxRates\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 18982,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations applied to the retrieved tax rates."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/list-tax-rates.d.ts",
															"qualifiedName": "AdminGetTaxRatesParams"
														},
														"name": "AdminGetTaxRatesParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 18983,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
																			"qualifiedName": "AdminTaxRatesListRes"
																		},
																		"name": "AdminTaxRatesListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_tax_rates"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 18984,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 18985,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						18985
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 18986,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18991,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18990,
																	"name": "tax_rates",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/tax-rate.d.ts",
																				"qualifiedName": "TaxRate"
																			},
																			"name": "TaxRate",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 18987,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18988,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18989,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18991,
																		18990,
																		18987,
																		18988,
																		18989
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18992,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18997,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 18996,
																	"name": "tax_rates",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/tax-rate.d.ts",
																				"qualifiedName": "TaxRate"
																			},
																			"name": "TaxRate",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 18993,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18994,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 18995,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18997,
																		18996,
																		18993,
																		18994,
																		18995
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18998,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19003,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19002,
																	"name": "tax_rates",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/tax-rate.d.ts",
																				"qualifiedName": "TaxRate"
																			},
																			"name": "TaxRate",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 18999,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 19000,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 19001,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19003,
																		19002,
																		18999,
																		19000,
																		19001
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19004,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19009,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19008,
																	"name": "tax_rates",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/tax-rate.d.ts",
																				"qualifiedName": "TaxRate"
																			},
																			"name": "TaxRate",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 19005,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 19006,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 19007,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19009,
																		19008,
																		19005,
																		19006,
																		19007
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 19010,
									"name": "useAdminTaxRate",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 19011,
											"name": "useAdminTaxRate",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a tax rate's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "A simple example that retrieves a tax rate by its ID:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminTaxRate } from \"medusa-react\"\n\ntype Props = {\n  taxRateId: string\n}\n\nconst TaxRate = ({ taxRateId }: Props) => {\n  const { tax_rate, isLoading } = useAdminTaxRate(taxRateId)\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {tax_rate && <span>{tax_rate.code}</span>}\n    </div>\n  )\n}\n\nexport default TaxRate\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify relations that should be retrieved:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminTaxRate } from \"medusa-react\"\n\nconst TaxRate = (taxRateId: string) => {\n  const { tax_rate, isLoading } = useAdminTaxRate(taxRateId, {\n    expand: [\"shipping_options\"]\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {tax_rate && <span>{tax_rate.code}</span>}\n    </div>\n  )\n}\n\nexport default TaxRate\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 19012,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The tax rate's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 19013,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Configurations to apply on retrieved tax rates."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/list-tax-rates.d.ts",
															"qualifiedName": "AdminGetTaxRatesParams"
														},
														"name": "AdminGetTaxRatesParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 19014,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
																			"qualifiedName": "AdminTaxRatesRes"
																		},
																		"name": "AdminTaxRatesRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_tax_rates"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 19015,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19017,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19016,
																	"name": "tax_rate",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/tax-rate.d.ts",
																			"qualifiedName": "TaxRate"
																		},
																		"name": "TaxRate",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19017,
																		19016
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19018,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19020,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19019,
																	"name": "tax_rate",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/tax-rate.d.ts",
																			"qualifiedName": "TaxRate"
																		},
																		"name": "TaxRate",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19020,
																		19019
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19021,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19023,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19022,
																	"name": "tax_rate",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/tax-rate.d.ts",
																			"qualifiedName": "TaxRate"
																		},
																		"name": "TaxRate",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19023,
																		19022
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19024,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19026,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19025,
																	"name": "tax_rate",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/tax-rate.d.ts",
																			"qualifiedName": "TaxRate"
																		},
																		"name": "TaxRate",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19026,
																		19025
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										19027,
										19030,
										19034,
										19038,
										19042,
										19046,
										19050,
										19054,
										19058,
										18980,
										19010
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										18980,
										19010
									]
								},
								{
									"title": "Mutations",
									"children": [
										19027,
										19030,
										19034,
										19038,
										19042,
										19046,
										19050,
										19054,
										19058
									]
								}
							]
						},
						{
							"id": 16427,
							"name": "Uploads",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Mutations listed here are used to send requests to the [Admin Upload API Routes](https://docs.medusajs.com/api/admin#uploads).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 16619
									},
									{
										"kind": "text",
										"text": ".\n\nThe methods in this class are used to upload any type of resources. For example, they can be used to upload CSV files that are used to import products into the store.\n\nRelated Guide: [How to upload CSV file when importing a product](https://docs.medusajs.com/modules/products/admin/import-products#1-upload-csv-file)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 19062,
									"name": "useAdminUploadFile",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 19063,
											"name": "useAdminUploadFile",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook uploads a file to a public bucket or storage. The file upload is handled by the file service installed on the Medusa backend."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUploadFile } from \"medusa-react\"\n\nconst UploadFile = () => {\n  const uploadFile = useAdminUploadFile()\n  // ...\n\n  const handleFileUpload = (file: File) => {\n    uploadFile.mutate(file, {\n      onSuccess: ({ uploads }) => {\n        console.log(uploads[0].key)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default UploadFile\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 19064,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/uploads/index.d.ts",
																			"qualifiedName": "AdminUploadsRes"
																		},
																		"name": "AdminUploadsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "AdminCreateUploadPayload"
																},
																"name": "AdminCreateUploadPayload",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/uploads/index.d.ts",
																	"qualifiedName": "AdminUploadsRes"
																},
																"name": "AdminUploadsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "AdminCreateUploadPayload"
														},
														"name": "AdminCreateUploadPayload",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 19065,
									"name": "useAdminUploadProtectedFile",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 19066,
											"name": "useAdminUploadProtectedFile",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook uploads a file to an ACL or a non-public bucket. The file upload is handled by the file service installed on the Medusa backend."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUploadProtectedFile } from \"medusa-react\"\n\nconst UploadFile = () => {\n  const uploadFile = useAdminUploadProtectedFile()\n  // ...\n\n  const handleFileUpload = (file: File) => {\n    uploadFile.mutate(file, {\n      onSuccess: ({ uploads }) => {\n        console.log(uploads[0].key)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default UploadFile\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 19067,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/uploads/index.d.ts",
																			"qualifiedName": "AdminUploadsRes"
																		},
																		"name": "AdminUploadsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "AdminCreateUploadPayload"
																},
																"name": "AdminCreateUploadPayload",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/uploads/index.d.ts",
																	"qualifiedName": "AdminUploadsRes"
																},
																"name": "AdminUploadsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "AdminCreateUploadPayload"
														},
														"name": "AdminCreateUploadPayload",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 19068,
									"name": "useAdminCreatePresignedDownloadUrl",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 19069,
											"name": "useAdminCreatePresignedDownloadUrl",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates and retrieve a presigned or public download URL for a file. The URL creation is handled by the file service installed on the Medusa backend."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreatePresignedDownloadUrl } from \"medusa-react\"\n\nconst Image = () => {\n  const createPresignedUrl = useAdminCreatePresignedDownloadUrl()\n  // ...\n\n  const handlePresignedUrl = (fileKey: string) => {\n    createPresignedUrl.mutate({\n      file_key: fileKey\n    }, {\n      onSuccess: ({ download_url }) => {\n        console.log(download_url)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Image\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 19070,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/uploads/index.d.ts",
																			"qualifiedName": "AdminUploadsDownloadUrlRes"
																		},
																		"name": "AdminUploadsDownloadUrlRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/uploads/get-download-url.d.ts",
																	"qualifiedName": "AdminPostUploadsDownloadUrlReq"
																},
																"name": "AdminPostUploadsDownloadUrlReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/uploads/index.d.ts",
																	"qualifiedName": "AdminUploadsDownloadUrlRes"
																},
																"name": "AdminUploadsDownloadUrlRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/uploads/get-download-url.d.ts",
															"qualifiedName": "AdminPostUploadsDownloadUrlReq"
														},
														"name": "AdminPostUploadsDownloadUrlReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 19071,
									"name": "useAdminDeleteFile",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 19072,
											"name": "useAdminDeleteFile",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes an uploaded file from storage. The file is deleted using the installed file service on the Medusa backend."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteFile } from \"medusa-react\"\n\nconst Image = () => {\n  const deleteFile = useAdminDeleteFile()\n  // ...\n\n  const handleDeleteFile = (fileKey: string) => {\n    deleteFile.mutate({\n      file_key: fileKey\n    }, {\n      onSuccess: ({ id, object, deleted }) => {\n        console.log(id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Image\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 19073,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																			"qualifiedName": "DeleteResponse"
																		},
																		"name": "DeleteResponse",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/uploads/delete-upload.d.ts",
																	"qualifiedName": "AdminDeleteUploadsReq"
																},
																"name": "AdminDeleteUploadsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																	"qualifiedName": "DeleteResponse"
																},
																"name": "DeleteResponse",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/uploads/delete-upload.d.ts",
															"qualifiedName": "AdminDeleteUploadsReq"
														},
														"name": "AdminDeleteUploadsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										19062,
										19065,
										19068,
										19071
									]
								}
							],
							"categories": [
								{
									"title": "Mutations",
									"children": [
										19062,
										19065,
										19068,
										19071
									]
								}
							]
						},
						{
							"id": 16428,
							"name": "Users",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin User API Routes](https://docs.medusajs.com/api/admin#users).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 16619
									},
									{
										"kind": "text",
										"text": ".\n\nA store can have more than one user, each having the same privileges. Admins can manage users, their passwords, and more.\n\nRelated Guide: [How to manage users](https://docs.medusajs.com/modules/users/admin/manage-users)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 19121,
									"name": "useAdminCreateUser",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 19122,
											"name": "useAdminCreateUser",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates an admin user. The user has the same privileges as all admin users, and will be able to \nauthenticate and perform admin functionalities right after creation."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateUser } from \"medusa-react\"\n\nconst CreateUser = () => {\n  const createUser = useAdminCreateUser()\n  // ...\n\n  const handleCreateUser = () => {\n    createUser.mutate({\n      email: \"user@example.com\",\n      password: \"supersecret\",\n    }, {\n      onSuccess: ({ user }) => {\n        console.log(user.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CreateUser\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 19123,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/users/index.d.ts",
																			"qualifiedName": "AdminUserRes"
																		},
																		"name": "AdminUserRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "AdminCreateUserPayload"
																},
																"name": "AdminCreateUserPayload",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/users/index.d.ts",
																	"qualifiedName": "AdminUserRes"
																},
																"name": "AdminUserRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "AdminCreateUserPayload"
														},
														"name": "AdminCreateUserPayload",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 19124,
									"name": "useAdminUpdateUser",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 19125,
											"name": "useAdminUpdateUser",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates an admin user's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateUser } from \"medusa-react\"\n\ntype Props = {\n  userId: string\n}\n\nconst User = ({ userId }: Props) => {\n  const updateUser = useAdminUpdateUser(userId)\n  // ...\n\n  const handleUpdateUser = (\n    firstName: string\n  ) => {\n    updateUser.mutate({\n      first_name: firstName,\n    }, {\n      onSuccess: ({ user }) => {\n        console.log(user.first_name)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default User\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 19126,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The user's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 19127,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/users/index.d.ts",
																			"qualifiedName": "AdminUserRes"
																		},
																		"name": "AdminUserRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "AdminUpdateUserPayload"
																},
																"name": "AdminUpdateUserPayload",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/users/index.d.ts",
																	"qualifiedName": "AdminUserRes"
																},
																"name": "AdminUserRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "AdminUpdateUserPayload"
														},
														"name": "AdminUpdateUserPayload",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 19128,
									"name": "useAdminDeleteUser",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 19129,
											"name": "useAdminDeleteUser",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a user. Once deleted, the user will not be able to authenticate or perform admin functionalities."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteUser } from \"medusa-react\"\n\ntype Props = {\n  userId: string\n}\n\nconst User = ({ userId }: Props) => {\n  const deleteUser = useAdminDeleteUser(userId)\n  // ...\n\n  const handleDeleteUser = () => {\n    deleteUser.mutate(void 0, {\n      onSuccess: ({ id, object, deleted }) => {\n        console.log(id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default User\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 19130,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The user's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 19131,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																			"qualifiedName": "DeleteResponse"
																		},
																		"name": "DeleteResponse",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																	"qualifiedName": "DeleteResponse"
																},
																"name": "DeleteResponse",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 19132,
									"name": "useAdminResetPassword",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 19133,
											"name": "useAdminResetPassword",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook resets the password of an admin user using their reset password token. You must generate a reset password token first \nfor the user using the "
													},
													{
														"kind": "inline-tag",
														"tag": "@link",
														"text": "useAdminSendResetPasswordToken",
														"target": 19135,
														"tsLinkText": ""
													},
													{
														"kind": "text",
														"text": " hook, then use that token to reset the password in this hook."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminResetPassword } from \"medusa-react\"\n\nconst ResetPassword = () => {\n  const resetPassword = useAdminResetPassword()\n  // ...\n\n  const handleResetPassword = (\n    token: string,\n    password: string\n  ) => {\n    resetPassword.mutate({\n      token,\n      password,\n    }, {\n      onSuccess: ({ user }) => {\n        console.log(user.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default ResetPassword\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 19134,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/users/index.d.ts",
																			"qualifiedName": "AdminUserRes"
																		},
																		"name": "AdminUserRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/users/reset-password.d.ts",
																	"qualifiedName": "AdminResetPasswordRequest"
																},
																"name": "AdminResetPasswordRequest",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/users/index.d.ts",
																	"qualifiedName": "AdminUserRes"
																},
																"name": "AdminUserRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/users/reset-password.d.ts",
															"qualifiedName": "AdminResetPasswordRequest"
														},
														"name": "AdminResetPasswordRequest",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 19135,
									"name": "useAdminSendResetPasswordToken",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 19136,
											"name": "useAdminSendResetPasswordToken",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook generates a password token for an admin user with a given email. This also triggers the "
													},
													{
														"kind": "code",
														"text": "`user.password_reset`"
													},
													{
														"kind": "text",
														"text": " event. So, if you have a Notification Service installed\nthat can handle this event, a notification, such as an email, will be sent to the user. The token is triggered as part of the "
													},
													{
														"kind": "code",
														"text": "`user.password_reset`"
													},
													{
														"kind": "text",
														"text": " event's payload. \nThat token must be used later to reset the password using the "
													},
													{
														"kind": "inline-tag",
														"tag": "@link",
														"text": "useAdminResetPassword",
														"target": 19132,
														"tsLinkText": ""
													},
													{
														"kind": "text",
														"text": " hook."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminSendResetPasswordToken } from \"medusa-react\"\n\nconst Login = () => {\n  const requestPasswordReset = useAdminSendResetPasswordToken()\n  // ...\n\n  const handleResetPassword = (\n    email: string\n  ) => {\n    requestPasswordReset.mutate({\n      email\n    }, {\n      onSuccess: () => {\n        // successful\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Login\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 19137,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "void"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/users/reset-password-token.d.ts",
																	"qualifiedName": "AdminResetPasswordTokenRequest"
																},
																"name": "AdminResetPasswordTokenRequest",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "void"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/users/reset-password-token.d.ts",
															"qualifiedName": "AdminResetPasswordTokenRequest"
														},
														"name": "AdminResetPasswordTokenRequest",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 19075,
									"name": "useAdminUsers",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 19076,
											"name": "useAdminUsers",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves all admin users."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list users:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminUsers } from \"medusa-react\"\n\nconst Users = () => {\n  const { users, isLoading } = useAdminUsers()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {users && !users.length && <span>No Users</span>}\n      {users && users.length > 0 && (\n        <ul>\n          {users.map((user) => (\n            <li key={user.id}>{user.email}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Users\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`20`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminUsers } from \"medusa-react\"\n\nconst Users = () => {\n  const {\n    users,\n    limit,\n    offset,\n    isLoading\n  } = useAdminUsers({\n    limit: 20,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {users && !users.length && <span>No Users</span>}\n      {users && users.length > 0 && (\n        <ul>\n          {users.map((user) => (\n            <li key={user.id}>{user.email}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Users\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 19077,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/users/list-users.d.ts",
															"qualifiedName": "AdminGetUsersParams"
														},
														"name": "AdminGetUsersParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 19078,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/users/index.d.ts",
																			"qualifiedName": "AdminUsersListRes"
																		},
																		"name": "AdminUsersListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_users"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 19079,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 19080,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						19080
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 19081,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19086,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19085,
																	"name": "users",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																				"qualifiedName": "Omit"
																			},
																			"typeArguments": [
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../packages/medusa/dist/models/user.d.ts",
																						"qualifiedName": "User"
																					},
																					"name": "User",
																					"package": "@medusajs/medusa"
																				},
																				{
																					"type": "literal",
																					"value": "password_hash"
																				}
																			],
																			"name": "Omit",
																			"package": "typescript"
																		}
																	}
																},
																{
																	"id": 19082,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The limit applied on the retrieved items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 19083,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before retrieving the list of items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 19084,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total count of items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19086,
																		19085,
																		19082,
																		19083,
																		19084
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19087,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19092,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19091,
																	"name": "users",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																				"qualifiedName": "Omit"
																			},
																			"typeArguments": [
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../packages/medusa/dist/models/user.d.ts",
																						"qualifiedName": "User"
																					},
																					"name": "User",
																					"package": "@medusajs/medusa"
																				},
																				{
																					"type": "literal",
																					"value": "password_hash"
																				}
																			],
																			"name": "Omit",
																			"package": "typescript"
																		}
																	}
																},
																{
																	"id": 19088,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The limit applied on the retrieved items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 19089,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before retrieving the list of items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 19090,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total count of items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19092,
																		19091,
																		19088,
																		19089,
																		19090
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19093,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19098,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19097,
																	"name": "users",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																				"qualifiedName": "Omit"
																			},
																			"typeArguments": [
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../packages/medusa/dist/models/user.d.ts",
																						"qualifiedName": "User"
																					},
																					"name": "User",
																					"package": "@medusajs/medusa"
																				},
																				{
																					"type": "literal",
																					"value": "password_hash"
																				}
																			],
																			"name": "Omit",
																			"package": "typescript"
																		}
																	}
																},
																{
																	"id": 19094,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The limit applied on the retrieved items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 19095,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before retrieving the list of items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 19096,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total count of items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19098,
																		19097,
																		19094,
																		19095,
																		19096
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19099,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19104,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19103,
																	"name": "users",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																				"qualifiedName": "Omit"
																			},
																			"typeArguments": [
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../packages/medusa/dist/models/user.d.ts",
																						"qualifiedName": "User"
																					},
																					"name": "User",
																					"package": "@medusajs/medusa"
																				},
																				{
																					"type": "literal",
																					"value": "password_hash"
																				}
																			],
																			"name": "Omit",
																			"package": "typescript"
																		}
																	}
																},
																{
																	"id": 19100,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The limit applied on the retrieved items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 19101,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before retrieving the list of items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 19102,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total count of items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19104,
																		19103,
																		19100,
																		19101,
																		19102
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 19105,
									"name": "useAdminUser",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 19106,
											"name": "useAdminUser",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves an admin user's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUser } from \"medusa-react\"\n\ntype Props = {\n  userId: string\n}\n\nconst User = ({ userId }: Props) => {\n  const { user, isLoading } = useAdminUser(\n    userId\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {user && <span>{user.first_name} {user.last_name}</span>}\n    </div>\n  )\n}\n\nexport default User\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 19107,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The user's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 19108,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/users/index.d.ts",
																			"qualifiedName": "AdminUserRes"
																		},
																		"name": "AdminUserRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_users"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 19109,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19111,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19110,
																	"name": "user",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa/dist/models/user.d.ts",
																					"qualifiedName": "User"
																				},
																				"name": "User",
																				"package": "@medusajs/medusa"
																			},
																			{
																				"type": "literal",
																				"value": "password_hash"
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19111,
																		19110
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19112,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19114,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19113,
																	"name": "user",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa/dist/models/user.d.ts",
																					"qualifiedName": "User"
																				},
																				"name": "User",
																				"package": "@medusajs/medusa"
																			},
																			{
																				"type": "literal",
																				"value": "password_hash"
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19114,
																		19113
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19115,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19117,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19116,
																	"name": "user",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa/dist/models/user.d.ts",
																					"qualifiedName": "User"
																				},
																				"name": "User",
																				"package": "@medusajs/medusa"
																			},
																			{
																				"type": "literal",
																				"value": "password_hash"
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19117,
																		19116
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19118,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19120,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19119,
																	"name": "user",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa/dist/models/user.d.ts",
																					"qualifiedName": "User"
																				},
																				"name": "User",
																				"package": "@medusajs/medusa"
																			},
																			{
																				"type": "literal",
																				"value": "password_hash"
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19120,
																		19119
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										19121,
										19124,
										19128,
										19132,
										19135,
										19075,
										19105
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										19075,
										19105
									]
								},
								{
									"title": "Mutations",
									"children": [
										19121,
										19124,
										19128,
										19132,
										19135
									]
								}
							]
						},
						{
							"id": 16429,
							"name": "Product Variants",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries listed here are used to send requests to the [Admin Product Variant API Routes](https://docs.medusajs.com/api/admin#product-variants).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 16619
									},
									{
										"kind": "text",
										"text": ".\n\nProduct variants are the actual salable item in your store. Each variant is a combination of the different option values available on the product.\n\nRelated Guide: [How to manage product variants](https://docs.medusajs.com/modules/products/admin/manage-products#manage-product-variants)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 19139,
									"name": "useAdminVariants",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 19140,
											"name": "useAdminVariants",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of product variants. The product variant can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`id`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`title`"
													},
													{
														"kind": "text",
														"text": " \npassed in the "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " parameter. The product variant can also be paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list product variants:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminVariants } from \"medusa-react\"\n\nconst Variants = () => {\n  const { variants, isLoading } = useAdminVariants()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {variants && !variants.length && (\n        <span>No Variants</span>\n      )}\n      {variants && variants.length > 0 && (\n        <ul>\n          {variants.map((variant) => (\n            <li key={variant.id}>{variant.title}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Variants\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify relations that should be retrieved within the product variants:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminVariants } from \"medusa-react\"\n\nconst Variants = () => {\n  const { variants, isLoading } = useAdminVariants({\n    expand: \"options\"\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {variants && !variants.length && (\n        <span>No Variants</span>\n      )}\n      {variants && variants.length > 0 && (\n        <ul>\n          {variants.map((variant) => (\n            <li key={variant.id}>{variant.title}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Variants\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`100`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminVariants } from \"medusa-react\"\n\nconst Variants = () => {\n  const { \n    variants, \n    limit,\n    offset,\n    isLoading\n  } = useAdminVariants({\n    expand: \"options\",\n    limit: 50,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {variants && !variants.length && (\n        <span>No Variants</span>\n      )}\n      {variants && variants.length > 0 && (\n        <ul>\n          {variants.map((variant) => (\n            <li key={variant.id}>{variant.title}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Variants\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 19141,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations to apply on the retrieved product variants."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/variants/list-variants.d.ts",
															"qualifiedName": "AdminGetVariantsParams"
														},
														"name": "AdminGetVariantsParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 19142,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/variants/index.d.ts",
																			"qualifiedName": "AdminVariantsListRes"
																		},
																		"name": "AdminVariantsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_variants"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 19143,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 19144,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						19144
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 19145,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19150,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19149,
																	"name": "variants",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																				"qualifiedName": "PricedVariant"
																			},
																			"name": "PricedVariant",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 19146,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 19147,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 19148,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19150,
																		19149,
																		19146,
																		19147,
																		19148
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19151,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19156,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19155,
																	"name": "variants",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																				"qualifiedName": "PricedVariant"
																			},
																			"name": "PricedVariant",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 19152,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 19153,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 19154,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19156,
																		19155,
																		19152,
																		19153,
																		19154
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19157,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19162,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19161,
																	"name": "variants",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																				"qualifiedName": "PricedVariant"
																			},
																			"name": "PricedVariant",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 19158,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 19159,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 19160,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19162,
																		19161,
																		19158,
																		19159,
																		19160
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19163,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19168,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19167,
																	"name": "variants",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																				"qualifiedName": "PricedVariant"
																			},
																			"name": "PricedVariant",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 19164,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 19165,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 19166,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19168,
																		19167,
																		19164,
																		19165,
																		19166
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 19169,
									"name": "useAdminVariant",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 19170,
											"name": "useAdminVariant",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a product variant's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "A simple example that retrieves a product variant by its ID:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminVariant } from \"medusa-react\"\n\ntype Props = {\n  variantId: string\n}\n\nconst Variant = ({ variantId }: Props) => {\n  const { variant, isLoading } = useAdminVariant(\n    variantId\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {variant && <span>{variant.title}</span>}\n    </div>\n  )\n}\n\nexport default Variant\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify relations that should be retrieved:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminVariant } from \"medusa-react\"\n\ntype Props = {\n  variantId: string\n}\n\nconst Variant = ({ variantId }: Props) => {\n  const { variant, isLoading } = useAdminVariant(\n    variantId, {\n      expand: \"options\"\n    }\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {variant && <span>{variant.title}</span>}\n    </div>\n  )\n}\n\nexport default Variant\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 19171,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product variant's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 19172,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Configurations to apply on the retrieved product variant."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/variants/get-variant.d.ts",
															"qualifiedName": "AdminGetVariantParams"
														},
														"name": "AdminGetVariantParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 19173,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/variants/index.d.ts",
																			"qualifiedName": "AdminVariantsRes"
																		},
																		"name": "AdminVariantsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_variants"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 19174,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19176,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19175,
																	"name": "variant",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																			"qualifiedName": "PricedVariant"
																		},
																		"name": "PricedVariant",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19176,
																		19175
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19177,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19179,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19178,
																	"name": "variant",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																			"qualifiedName": "PricedVariant"
																		},
																		"name": "PricedVariant",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19179,
																		19178
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19180,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19182,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19181,
																	"name": "variant",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																			"qualifiedName": "PricedVariant"
																		},
																		"name": "PricedVariant",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19182,
																		19181
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19183,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19185,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19184,
																	"name": "variant",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																			"qualifiedName": "PricedVariant"
																		},
																		"name": "PricedVariant",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19185,
																		19184
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 19186,
									"name": "useAdminVariantsInventory",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 19187,
											"name": "useAdminVariantsInventory",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves the available inventory of a product variant."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminVariantsInventory } from \"medusa-react\"\n\ntype Props = {\n  variantId: string\n}\n\nconst VariantInventory = ({ variantId }: Props) => {\n  const { variant, isLoading } = useAdminVariantsInventory(\n    variantId\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {variant && variant.inventory.length === 0 && (\n        <span>Variant doesn't have inventory details</span>\n      )}\n      {variant && variant.inventory.length > 0 && (\n        <ul>\n          {variant.inventory.map((inventory) => (\n            <li key={inventory.id}>{inventory.title}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default VariantInventory\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 19188,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product variant's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 19189,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/variants/get-inventory.d.ts",
																			"qualifiedName": "AdminGetVariantsVariantInventoryRes"
																		},
																		"name": "AdminGetVariantsVariantInventoryRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_variants"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 19190,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19192,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19191,
																	"name": "variant",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/variants/get-inventory.d.ts",
																			"qualifiedName": "VariantInventory"
																		},
																		"name": "VariantInventory",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19192,
																		19191
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19193,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19195,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19194,
																	"name": "variant",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/variants/get-inventory.d.ts",
																			"qualifiedName": "VariantInventory"
																		},
																		"name": "VariantInventory",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19195,
																		19194
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19196,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19198,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19197,
																	"name": "variant",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/variants/get-inventory.d.ts",
																			"qualifiedName": "VariantInventory"
																		},
																		"name": "VariantInventory",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19198,
																		19197
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19199,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19201,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19200,
																	"name": "variant",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/variants/get-inventory.d.ts",
																			"qualifiedName": "VariantInventory"
																		},
																		"name": "VariantInventory",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19201,
																		19200
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										19139,
										19169,
										19186
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										19139,
										19169,
										19186
									]
								}
							]
						}
					],
					"groups": [
						{
							"title": "Namespaces",
							"children": [
								16391,
								16392,
								16393,
								16394,
								16395,
								16396,
								16397,
								16398,
								16399,
								16400,
								16401,
								16402,
								16403,
								16404,
								16405,
								16406,
								16407,
								16408,
								16409,
								16410,
								16411,
								16412,
								16413,
								16414,
								16415,
								16416,
								16417,
								16418,
								16419,
								16420,
								16421,
								16422,
								16423,
								16424,
								16425,
								16426,
								16427,
								16428,
								16429
							]
						}
					]
				},
				{
					"id": 16430,
					"name": "Store",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@namespaceMember"
						]
					},
					"children": [
						{
							"id": 16431,
							"name": "Carts",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Store Cart API Routes](https://docs.medusajs.com/api/store#carts).\n\nA cart is a virtual shopping bag that customers can use to add items they want to purchase.\nA cart is then used to checkout and place an order.\n\nThe hooks listed have general examples on how to use them, but it's highly recommended to use the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "CartProvider",
										"target": 16558
									},
									{
										"kind": "text",
										"text": " provider and\nthe "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "useCart",
										"target": 16553
									},
									{
										"kind": "text",
										"text": " hook to manage your cart and access the current cart across your application.\n\nRelated Guide: [How to implement cart functionality in your storefront](https://docs.medusajs.com/modules/carts-and-checkout/storefront/implement-cart)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 19220,
									"name": "useCreateCart",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 19221,
											"name": "useCreateCart",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a Cart. Although optional, specifying the cart's region and sales channel can affect the cart's pricing and\nthe products that can be added to the cart respectively.\n\nSo, make sure to set those early on and change them if necessary, such as when the customer changes their region.\n\nIf a customer is logged in, make sure to pass its ID or email within the cart's details so that the cart is attached to the customer."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useCreateCart } from \"medusa-react\"\n\ntype Props = {\n  regionId: string\n}\n\nconst Cart = ({ regionId }: Props) => {\n  const createCart = useCreateCart()\n\n  const handleCreate = () => {\n    createCart.mutate({\n      region_id: regionId\n      // creates an empty cart\n    }, {\n      onSuccess: ({ cart }) => {\n        console.log(cart.items)\n      }\n    })\n  }\n  \n  // ...\n}\n\nexport default Cart\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 19222,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
																	"qualifiedName": "StoreCartsRes"
																},
																"name": "StoreCartsRes",
																"package": "@medusajs/medusa"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/create-cart.d.ts",
																			"qualifiedName": "StorePostCartReq"
																		},
																		"name": "StorePostCartReq",
																		"package": "@medusajs/medusa"
																	}
																]
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
																	"qualifiedName": "StoreCartsRes"
																},
																"name": "StoreCartsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/create-cart.d.ts",
																	"qualifiedName": "StorePostCartReq"
																},
																"name": "StorePostCartReq",
																"package": "@medusajs/medusa"
															}
														]
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 19223,
									"name": "useUpdateCart",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 19224,
											"name": "useUpdateCart",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a Cart's details. If the cart has payment sessions and the region was not changed, \nthe payment sessions are updated. The cart's totals are also recalculated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useUpdateCart } from \"medusa-react\"\n\ntype Props = {\n  cartId: string\n}\n\nconst Cart = ({ cartId }: Props) => {\n  const updateCart = useUpdateCart(cartId)\n\n  const handleUpdate = (\n    email: string\n  ) => {\n    updateCart.mutate({\n      email\n    }, {\n      onSuccess: ({ cart }) => {\n        console.log(cart.email)\n      }\n    })\n  }\n  \n  // ...\n}\n\nexport default Cart\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 19225,
													"name": "cartId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The cart's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 19226,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
																	"qualifiedName": "StoreCartsRes"
																},
																"name": "StoreCartsRes",
																"package": "@medusajs/medusa"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/update-cart.d.ts",
																	"qualifiedName": "StorePostCartsCartReq"
																},
																"name": "StorePostCartsCartReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
																	"qualifiedName": "StoreCartsRes"
																},
																"name": "StoreCartsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/update-cart.d.ts",
															"qualifiedName": "StorePostCartsCartReq"
														},
														"name": "StorePostCartsCartReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 19227,
									"name": "useCompleteCart",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 19228,
											"name": "useCompleteCart",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook completes a cart and place an order or create a swap, based on the cart's type. This includes attempting to authorize the cart's payment.\nIf authorizing the payment requires more action, the cart will not be completed and the order will not be placed or the swap will not be created.\nAn idempotency key will be generated if none is provided in the header "
													},
													{
														"kind": "code",
														"text": "`Idempotency-Key`"
													},
													{
														"kind": "text",
														"text": " and added to\nthe response. If an error occurs during cart completion or the request is interrupted for any reason, the cart completion can be retried by passing the idempotency\nkey in the "
													},
													{
														"kind": "code",
														"text": "`Idempotency-Key`"
													},
													{
														"kind": "text",
														"text": " header."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useCompleteCart } from \"medusa-react\"\n\ntype Props = {\n  cartId: string\n}\n\nconst Cart = ({ cartId }: Props) => {\n  const completeCart = useCompleteCart(cartId)\n\n  const handleComplete = () => {\n    completeCart.mutate(void 0, {\n      onSuccess: ({ data, type }) => {\n        console.log(data.id, type)\n      }\n    })\n  }\n  \n  // ...\n}\n\nexport default Cart\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 19229,
													"name": "cartId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The cart's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 19230,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
																	"qualifiedName": "StoreCompleteCartRes"
																},
																"name": "StoreCompleteCartRes",
																"package": "@medusajs/medusa"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
																	"qualifiedName": "StoreCompleteCartRes"
																},
																"name": "StoreCompleteCartRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 19231,
									"name": "useCreatePaymentSession",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 19232,
											"name": "useCreatePaymentSession",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates Payment Sessions for each of the available Payment Providers in the Cart's Region. If there's only one payment session created,\nit will be selected by default. The creation of the payment session uses the payment provider and may require sending requests to third-party services."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useCreatePaymentSession } from \"medusa-react\"\n\ntype Props = {\n  cartId: string\n}\n\nconst Cart = ({ cartId }: Props) => {\n  const createPaymentSession = useCreatePaymentSession(cartId)\n\n  const handleComplete = () => {\n    createPaymentSession.mutate(void 0, {\n      onSuccess: ({ cart }) => {\n        console.log(cart.payment_sessions)\n      }\n    })\n  }\n  \n  // ...\n}\n\nexport default Cart\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 19233,
													"name": "cartId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The cart's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 19234,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
																	"qualifiedName": "StoreCartsRes"
																},
																"name": "StoreCartsRes",
																"package": "@medusajs/medusa"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
																	"qualifiedName": "StoreCartsRes"
																},
																"name": "StoreCartsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 19238,
									"name": "useUpdatePaymentSession",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 19239,
											"name": "useUpdatePaymentSession",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a Payment Session with additional data. This can be useful depending on the payment provider used.\nAll payment sessions are updated and cart totals are recalculated afterwards."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useUpdatePaymentSession } from \"medusa-react\"\n\ntype Props = {\n  cartId: string\n}\n\nconst Cart = ({ cartId }: Props) => {\n  const updatePaymentSession = useUpdatePaymentSession(cartId)\n\n  const handleUpdate = (\n    providerId: string,\n    data: Record<string, unknown>\n  ) => {\n    updatePaymentSession.mutate({\n      provider_id: providerId,\n      data\n    }, {\n      onSuccess: ({ cart }) => {\n        console.log(cart.payment_session)\n      }\n    })\n  }\n  \n  // ...\n}\n\nexport default Cart\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 19240,
													"name": "cartId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The cart's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 19241,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
																	"qualifiedName": "StoreCartsRes"
																},
																"name": "StoreCartsRes",
																"package": "@medusajs/medusa"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": 19235,
																"name": "UpdatePaymentSessionReq",
																"package": "medusa-react"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
																	"qualifiedName": "StoreCartsRes"
																},
																"name": "StoreCartsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": 19235,
														"name": "UpdatePaymentSessionReq",
														"package": "medusa-react"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 19245,
									"name": "useRefreshPaymentSession",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 19246,
											"name": "useRefreshPaymentSession",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook refreshes a Payment Session to ensure that it is in sync with the Cart. This is usually not necessary, but is provided for edge cases."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useRefreshPaymentSession } from \"medusa-react\"\n\ntype Props = {\n  cartId: string\n}\n\nconst Cart = ({ cartId }: Props) => {\n  const refreshPaymentSession = useRefreshPaymentSession(cartId)\n\n  const handleRefresh = (\n    providerId: string\n  ) => {\n    refreshPaymentSession.mutate({\n      provider_id: providerId,\n    }, {\n      onSuccess: ({ cart }) => {\n        console.log(cart.payment_sessions)\n      }\n    })\n  }\n  \n  // ...\n}\n\nexport default Cart\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 19247,
													"name": "cartId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The cart's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 19248,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
																	"qualifiedName": "StoreCartsRes"
																},
																"name": "StoreCartsRes",
																"package": "@medusajs/medusa"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": 19242,
																"name": "RefreshPaymentSessionMutationData",
																"package": "medusa-react"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
																	"qualifiedName": "StoreCartsRes"
																},
																"name": "StoreCartsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": 19242,
														"name": "RefreshPaymentSessionMutationData",
														"package": "medusa-react"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 19249,
									"name": "useSetPaymentSession",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 19250,
											"name": "useSetPaymentSession",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook selects the Payment Session that will be used to complete the cart. This is typically used when the customer chooses their preferred payment method during checkout.\nThe totals of the cart will be recalculated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useSetPaymentSession } from \"medusa-react\"\n\ntype Props = {\n  cartId: string\n}\n\nconst Cart = ({ cartId }: Props) => {\n  const setPaymentSession = useSetPaymentSession(cartId)\n\n  const handleSetPaymentSession = (\n    providerId: string\n  ) => {\n    setPaymentSession.mutate({\n      provider_id: providerId,\n    }, {\n      onSuccess: ({ cart }) => {\n        console.log(cart.payment_session)\n      }\n    })\n  }\n  \n  // ...\n}\n\nexport default Cart\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 19251,
													"name": "cartId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The cart's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 19252,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
																	"qualifiedName": "StoreCartsRes"
																},
																"name": "StoreCartsRes",
																"package": "@medusajs/medusa"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/set-payment-session.d.ts",
																	"qualifiedName": "StorePostCartsCartPaymentSessionReq"
																},
																"name": "StorePostCartsCartPaymentSessionReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
																	"qualifiedName": "StoreCartsRes"
																},
																"name": "StoreCartsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/set-payment-session.d.ts",
															"qualifiedName": "StorePostCartsCartPaymentSessionReq"
														},
														"name": "StorePostCartsCartPaymentSessionReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 19253,
									"name": "useAddShippingMethodToCart",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 19254,
											"name": "useAddShippingMethodToCart",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook adds a shipping method to the cart. The validation of the "
													},
													{
														"kind": "code",
														"text": "`data`"
													},
													{
														"kind": "text",
														"text": " field is handled by the fulfillment provider of the chosen shipping option."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAddShippingMethodToCart } from \"medusa-react\"\n\ntype Props = {\n  cartId: string\n}\n\nconst Cart = ({ cartId }: Props) => {\n  const addShippingMethod = useAddShippingMethodToCart(cartId)\n\n  const handleAddShippingMethod = (\n    optionId: string\n  ) => {\n    addShippingMethod.mutate({\n      option_id: optionId,\n    }, {\n      onSuccess: ({ cart }) => {\n        console.log(cart.shipping_methods)\n      }\n    })\n  }\n  \n  // ...\n}\n\nexport default Cart\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 19255,
													"name": "cartId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The cart's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 19256,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
																	"qualifiedName": "StoreCartsRes"
																},
																"name": "StoreCartsRes",
																"package": "@medusajs/medusa"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/add-shipping-method.d.ts",
																	"qualifiedName": "StorePostCartsCartShippingMethodReq"
																},
																"name": "StorePostCartsCartShippingMethodReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
																	"qualifiedName": "StoreCartsRes"
																},
																"name": "StoreCartsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/add-shipping-method.d.ts",
															"qualifiedName": "StorePostCartsCartShippingMethodReq"
														},
														"name": "StorePostCartsCartShippingMethodReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 19260,
									"name": "useDeletePaymentSession",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 19261,
											"name": "useDeletePaymentSession",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a Payment Session in a Cart. May be useful if a payment has failed. The totals will be recalculated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useDeletePaymentSession } from \"medusa-react\"\n\ntype Props = {\n  cartId: string\n}\n\nconst Cart = ({ cartId }: Props) => {\n  const deletePaymentSession = useDeletePaymentSession(cartId)\n\n  const handleDeletePaymentSession = (\n    providerId: string\n  ) => {\n    deletePaymentSession.mutate({\n      provider_id: providerId,\n    }, {\n      onSuccess: ({ cart }) => {\n        console.log(cart.payment_sessions)\n      }\n    })\n  }\n  \n  // ...\n}\n\nexport default Cart\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 19262,
													"name": "cartId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The cart's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 19263,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
																	"qualifiedName": "StoreCartsRes"
																},
																"name": "StoreCartsRes",
																"package": "@medusajs/medusa"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": 19257,
																"name": "DeletePaymentSessionMutationData",
																"package": "medusa-react"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
																	"qualifiedName": "StoreCartsRes"
																},
																"name": "StoreCartsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": 19257,
														"name": "DeletePaymentSessionMutationData",
														"package": "medusa-react"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 19264,
									"name": "useStartCheckout",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 19265,
											"name": "useStartCheckout",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook allows you to create a cart and set its payment session as a preparation for checkout.\nIt performs the same actions as the "
													},
													{
														"kind": "inline-tag",
														"tag": "@link",
														"text": "useCreateCart",
														"target": 19220,
														"tsLinkText": ""
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "inline-tag",
														"tag": "@link",
														"text": "useCreatePaymentSession",
														"target": 19231,
														"tsLinkText": ""
													},
													{
														"kind": "text",
														"text": " hooks."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useStartCheckout } from \"medusa-react\"\n\ntype Props = {\n  regionId: string\n}\n\nconst Checkout = ({ regionId }: Props) => {\n  const startCheckout = useStartCheckout()\n\n  const handleCheckout = () => {\n    startCheckout.mutate({\n      region_id: regionId,\n    }, {\n      onSuccess: (cart) => {\n        console.log(cart.payment_sessions)\n      }\n    })\n  }\n  \n  // ...\n}\n\nexport default Checkout\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 19266,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Omit"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/cart.d.ts",
																			"qualifiedName": "Cart"
																		},
																		"name": "Cart",
																		"package": "@medusajs/medusa"
																	},
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": "refundable_amount"
																			},
																			{
																				"type": "literal",
																				"value": "refunded_total"
																			}
																		]
																	}
																],
																"name": "Omit",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/create-cart.d.ts",
																	"qualifiedName": "StorePostCartReq"
																},
																"name": "StorePostCartReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Omit"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/models/cart.d.ts",
																	"qualifiedName": "Cart"
																},
																"name": "Cart",
																"package": "@medusajs/medusa"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": "refundable_amount"
																	},
																	{
																		"type": "literal",
																		"value": "refunded_total"
																	}
																]
															}
														],
														"name": "Omit",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/create-cart.d.ts",
															"qualifiedName": "StorePostCartReq"
														},
														"name": "StorePostCartReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 19203,
									"name": "useGetCart",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 19204,
											"name": "useGetCart",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a Cart's details. This includes recalculating its totals."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useGetCart } from \"medusa-react\"\n\ntype Props = {\n  cartId: string\n}\n\nconst Cart = ({ cartId }: Props) => {\n  const { cart, isLoading } = useGetCart(cartId)\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {cart && cart.items.length === 0 && (\n        <span>Cart is empty</span>\n      )}\n      {cart && cart.items.length > 0 && (\n        <ul>\n          {cart.items.map((item) => (\n            <li key={item.id}>{item.title}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Cart\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 19205,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The cart's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 19206,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
																			"qualifiedName": "StoreCartsRes"
																		},
																		"name": "StoreCartsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "carts"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 19207,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19209,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19208,
																	"name": "cart",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa/dist/models/cart.d.ts",
																					"qualifiedName": "Cart"
																				},
																				"name": "Cart",
																				"package": "@medusajs/medusa"
																			},
																			{
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": "refundable_amount"
																					},
																					{
																						"type": "literal",
																						"value": "refunded_total"
																					}
																				]
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19209,
																		19208
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19210,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19212,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19211,
																	"name": "cart",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa/dist/models/cart.d.ts",
																					"qualifiedName": "Cart"
																				},
																				"name": "Cart",
																				"package": "@medusajs/medusa"
																			},
																			{
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": "refundable_amount"
																					},
																					{
																						"type": "literal",
																						"value": "refunded_total"
																					}
																				]
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19212,
																		19211
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19213,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19215,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19214,
																	"name": "cart",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa/dist/models/cart.d.ts",
																					"qualifiedName": "Cart"
																				},
																				"name": "Cart",
																				"package": "@medusajs/medusa"
																			},
																			{
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": "refundable_amount"
																					},
																					{
																						"type": "literal",
																						"value": "refunded_total"
																					}
																				]
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19215,
																		19214
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19216,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19218,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19217,
																	"name": "cart",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa/dist/models/cart.d.ts",
																					"qualifiedName": "Cart"
																				},
																				"name": "Cart",
																				"package": "@medusajs/medusa"
																			},
																			{
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": "refundable_amount"
																					},
																					{
																						"type": "literal",
																						"value": "refunded_total"
																					}
																				]
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19218,
																		19217
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										19220,
										19223,
										19227,
										19231,
										19238,
										19245,
										19249,
										19253,
										19260,
										19264,
										19203
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										19203
									]
								},
								{
									"title": "Mutations",
									"children": [
										19220,
										19223,
										19227,
										19231,
										19238,
										19245,
										19249,
										19253,
										19260,
										19264
									]
								}
							]
						},
						{
							"id": 16432,
							"name": "Product Collections",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries listed here are used to send requests to the [Store Product Collection API Routes](https://docs.medusajs.com/api/store#product-collections).\n\nA product collection is used to organize products for different purposes such as marketing or discount purposes. For example, you can create a Summer Collection.\nUsing the methods in this class, you can list or retrieve a collection's details and products."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 19268,
									"name": "useCollection",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 19269,
											"name": "useCollection",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a product collection's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useCollection } from \"medusa-react\"\n\ntype Props = {\n  collectionId: string\n}\n\nconst ProductCollection = ({ collectionId }: Props) => {\n  const { collection, isLoading } = useCollection(collectionId)\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {collection && <span>{collection.title}</span>}\n    </div>\n  )\n}\n\nexport default ProductCollection\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 19270,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product collection's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 19271,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/collections/index.d.ts",
																			"qualifiedName": "StoreCollectionsRes"
																		},
																		"name": "StoreCollectionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "collections"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 19272,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19274,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19273,
																	"name": "collection",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/product-collection.d.ts",
																			"qualifiedName": "ProductCollection"
																		},
																		"name": "ProductCollection",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19274,
																		19273
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19275,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19277,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19276,
																	"name": "collection",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/product-collection.d.ts",
																			"qualifiedName": "ProductCollection"
																		},
																		"name": "ProductCollection",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19277,
																		19276
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19278,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19280,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19279,
																	"name": "collection",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/product-collection.d.ts",
																			"qualifiedName": "ProductCollection"
																		},
																		"name": "ProductCollection",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19280,
																		19279
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19281,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19283,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19282,
																	"name": "collection",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/product-collection.d.ts",
																			"qualifiedName": "ProductCollection"
																		},
																		"name": "ProductCollection",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19283,
																		19282
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 19284,
									"name": "useCollections",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 19285,
											"name": "useCollections",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of product collections. The product collections can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`handle`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`created_at`"
													},
													{
														"kind": "text",
														"text": " passed in the "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " parameter. \nThe product collections can also be paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list product collections:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useCollections } from \"medusa-react\"\n\nconst ProductCollections = () => {\n  const { collections, isLoading } = useCollections()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {collections && collections.length === 0 && (\n        <span>No Product Collections</span>\n      )}\n      {collections && collections.length > 0 && (\n        <ul>\n          {collections.map((collection) => (\n            <li key={collection.id}>{collection.title}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default ProductCollections\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`10`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useCollections } from \"medusa-react\"\n\nconst ProductCollections = () => {\n  const { \n    collections, \n    limit,\n    offset,\n    isLoading\n  } = useCollections({\n    limit: 20,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {collections && collections.length === 0 && (\n        <span>No Product Collections</span>\n      )}\n      {collections && collections.length > 0 && (\n        <ul>\n          {collections.map((collection) => (\n            <li key={collection.id}>{collection.title}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default ProductCollections\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 19286,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations to apply on the retrieved product collections."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/store/collections/list-collections.d.ts",
															"qualifiedName": "StoreGetCollectionsParams"
														},
														"name": "StoreGetCollectionsParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 19287,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/collections/index.d.ts",
																			"qualifiedName": "StoreCollectionsListRes"
																		},
																		"name": "StoreCollectionsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "collections"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 19288,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 19289,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						19289
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 19290,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19295,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19294,
																	"name": "collections",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-collection.d.ts",
																				"qualifiedName": "ProductCollection"
																			},
																			"name": "ProductCollection",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 19291,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 19292,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 19293,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19295,
																		19294,
																		19291,
																		19292,
																		19293
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19296,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19301,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19300,
																	"name": "collections",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-collection.d.ts",
																				"qualifiedName": "ProductCollection"
																			},
																			"name": "ProductCollection",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 19297,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 19298,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 19299,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19301,
																		19300,
																		19297,
																		19298,
																		19299
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19302,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19307,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19306,
																	"name": "collections",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-collection.d.ts",
																				"qualifiedName": "ProductCollection"
																			},
																			"name": "ProductCollection",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 19303,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 19304,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 19305,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19307,
																		19306,
																		19303,
																		19304,
																		19305
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19308,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19313,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19312,
																	"name": "collections",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-collection.d.ts",
																				"qualifiedName": "ProductCollection"
																			},
																			"name": "ProductCollection",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 19309,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 19310,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 19311,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19313,
																		19312,
																		19309,
																		19310,
																		19311
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										19268,
										19284
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										19268,
										19284
									]
								}
							]
						},
						{
							"id": 16433,
							"name": "Customers",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Store Customer API Routes](https://docs.medusajs.com/api/store#customers_postcustomers).\n\nA customer can register and manage their information such as addresses, orders, payment methods, and more.\n\nRelated Guide: [How to implement customer profiles in your storefront](https://docs.medusajs.com/modules/customers/storefront/implement-customer-profiles)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 19380,
									"name": "useCreateCustomer",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 19381,
											"name": "useCreateCustomer",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook registers a new customer. This will also automatically authenticate the customer and set their login session in the response Cookie header.\nSubsequent requests sent with other hooks are sent with the Cookie session automatically."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useCreateCustomer } from \"medusa-react\"\n\nconst RegisterCustomer = () => {\n  const createCustomer = useCreateCustomer()\n  // ...\n\n  const handleCreate = (\n    customerData: {\n      first_name: string\n      last_name: string\n      email: string\n      password: string\n    }\n  ) => {\n    // ...\n    createCustomer.mutate(customerData, {\n      onSuccess: ({ customer }) => {\n        console.log(customer.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default RegisterCustomer\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 19382,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/customers/index.d.ts",
																	"qualifiedName": "StoreCustomersRes"
																},
																"name": "StoreCustomersRes",
																"package": "@medusajs/medusa"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/customers/create-customer.d.ts",
																	"qualifiedName": "StorePostCustomersReq"
																},
																"name": "StorePostCustomersReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/customers/index.d.ts",
																	"qualifiedName": "StoreCustomersRes"
																},
																"name": "StoreCustomersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/store/customers/create-customer.d.ts",
															"qualifiedName": "StorePostCustomersReq"
														},
														"name": "StorePostCustomersReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 19386,
									"name": "useUpdateMe",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 19387,
											"name": "useUpdateMe",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates the logged-in customer's details. This hook requires [customer authentication](https://docs.medusajs.com/medusa-react/overview#customer-authentication)."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useUpdateMe } from \"medusa-react\"\n\ntype Props = {\n  customerId: string\n}\n\nconst Customer = ({ customerId }: Props) => {\n  const updateCustomer = useUpdateMe()\n  // ...\n\n  const handleUpdate = (\n    firstName: string\n  ) => {\n    // ...\n    updateCustomer.mutate({\n      id: customerId,\n      first_name: firstName,\n    }, {\n      onSuccess: ({ customer }) => {\n        console.log(customer.first_name)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Customer\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 19388,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/customers/index.d.ts",
																	"qualifiedName": "StoreCustomersRes"
																},
																"name": "StoreCustomersRes",
																"package": "@medusajs/medusa"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": 19383,
																"name": "UpdateMeReq",
																"package": "medusa-react"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/customers/index.d.ts",
																	"qualifiedName": "StoreCustomersRes"
																},
																"name": "StoreCustomersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": 19383,
														"name": "UpdateMeReq",
														"package": "medusa-react"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 19337,
									"name": "useMeCustomer",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 19338,
											"name": "useMeCustomer",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves the logged-in customer's details. It requires [customer authentication](https://docs.medusajs.com/medusa-react/overview#customer-authentication)."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useMeCustomer } from \"medusa-react\"\n\nconst Customer = () => {\n  const { customer, isLoading } = useMeCustomer()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {customer && (\n        <span>{customer.first_name} {customer.last_name}</span>\n      )}\n    </div>\n  )\n}\n\nexport default Customer\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 19339,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/customers/index.d.ts",
																			"qualifiedName": "StoreCustomersRes"
																		},
																		"name": "StoreCustomersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "customers"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 19340,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19342,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19341,
																	"name": "customer",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa/dist/models/customer.d.ts",
																					"qualifiedName": "Customer"
																				},
																				"name": "Customer",
																				"package": "@medusajs/medusa"
																			},
																			{
																				"type": "literal",
																				"value": "password_hash"
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19342,
																		19341
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19343,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19345,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19344,
																	"name": "customer",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa/dist/models/customer.d.ts",
																					"qualifiedName": "Customer"
																				},
																				"name": "Customer",
																				"package": "@medusajs/medusa"
																			},
																			{
																				"type": "literal",
																				"value": "password_hash"
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19345,
																		19344
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19346,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19348,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19347,
																	"name": "customer",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa/dist/models/customer.d.ts",
																					"qualifiedName": "Customer"
																				},
																				"name": "Customer",
																				"package": "@medusajs/medusa"
																			},
																			{
																				"type": "literal",
																				"value": "password_hash"
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19348,
																		19347
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19349,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19351,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19350,
																	"name": "customer",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa/dist/models/customer.d.ts",
																					"qualifiedName": "Customer"
																				},
																				"name": "Customer",
																				"package": "@medusajs/medusa"
																			},
																			{
																				"type": "literal",
																				"value": "password_hash"
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19351,
																		19350
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 19352,
									"name": "useCustomerOrders",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 19353,
											"name": "useCustomerOrders",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of the logged-in customer's orders. The orders can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`status`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`fulfillment_status`"
													},
													{
														"kind": "text",
														"text": ". The orders can also be paginated.\nThis hook requires [customer authentication](https://docs.medusajs.com/medusa-react/overview#customer-authentication)."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useCustomerOrders } from \"medusa-react\"\n\nconst Orders = () => {\n  // refetch a function that can be used to\n  // re-retrieve orders after the customer logs in\n  const { orders, isLoading } = useCustomerOrders()\n\n  return (\n    <div>\n      {isLoading && <span>Loading orders...</span>}\n      {orders?.length && (\n        <ul>\n          {orders.map((order) => (\n            <li key={order.id}>{order.display_id}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Orders\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 19354,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations to apply on the retrieved orders."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/store/customers/list-orders.d.ts",
															"qualifiedName": "StoreGetCustomersCustomerOrdersParams"
														},
														"name": "StoreGetCustomersCustomerOrdersParams",
														"package": "@medusajs/medusa"
													},
													"defaultValue": "..."
												},
												{
													"id": 19355,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/customers/index.d.ts",
																			"qualifiedName": "StoreCustomersListOrdersRes"
																		},
																		"name": "StoreCustomersListOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "typeOperator",
																"operator": "readonly",
																"target": {
																	"type": "tuple",
																	"elements": [
																		{
																			"type": "literal",
																			"value": "customers"
																		},
																		{
																			"type": "literal",
																			"value": "detail"
																		},
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "literal",
																			"value": "orders"
																		}
																	]
																}
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 19356,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19361,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19360,
																	"name": "orders",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/order.d.ts",
																				"qualifiedName": "Order"
																			},
																			"name": "Order",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 19357,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 19358,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 19359,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19361,
																		19360,
																		19357,
																		19358,
																		19359
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19362,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19367,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19366,
																	"name": "orders",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/order.d.ts",
																				"qualifiedName": "Order"
																			},
																			"name": "Order",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 19363,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 19364,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 19365,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19367,
																		19366,
																		19363,
																		19364,
																		19365
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19368,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19373,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19372,
																	"name": "orders",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/order.d.ts",
																				"qualifiedName": "Order"
																			},
																			"name": "Order",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 19369,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 19370,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 19371,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19373,
																		19372,
																		19369,
																		19370,
																		19371
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19374,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19379,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19378,
																	"name": "orders",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/order.d.ts",
																				"qualifiedName": "Order"
																			},
																			"name": "Order",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 19375,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 19376,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 19377,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19379,
																		19378,
																		19375,
																		19376,
																		19377
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										19380,
										19386,
										19337,
										19352
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										19337,
										19352
									]
								},
								{
									"title": "Mutations",
									"children": [
										19380,
										19386
									]
								}
							]
						},
						{
							"id": 16434,
							"name": "Gift Cards",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries listed here are used to send requests to the [Store Gift Card API Routes](https://docs.medusajs.com/api/store#gift-cards).\n\nCustomers can use gift cards during checkout to deduct the gift card's balance from the checkout total.\n\nRelated Guide: [How to use gift cards in a storefront](https://docs.medusajs.com/modules/gift-cards/storefront/use-gift-cards)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 19390,
									"name": "useGiftCard",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 19391,
											"name": "useGiftCard",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a Gift Card's details by its associated unique code."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useGiftCard } from \"medusa-react\"\n\ntype Props = {\n  giftCardCode: string\n}\n\nconst GiftCard = ({ giftCardCode }: Props) => {\n  const { gift_card, isLoading, isError } = useGiftCard(\n    giftCardCode\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {gift_card && <span>{gift_card.value}</span>}\n      {isError && <span>Gift Card does not exist</span>}\n    </div>\n  )\n}\n\nexport default GiftCard\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 19392,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The gift card's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 19393,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/gift-cards/index.d.ts",
																			"qualifiedName": "StoreGiftCardsRes"
																		},
																		"name": "StoreGiftCardsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "gift_cards"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 19394,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19396,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19395,
																	"name": "gift_card",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/gift-card.d.ts",
																			"qualifiedName": "GiftCard"
																		},
																		"name": "GiftCard",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19396,
																		19395
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19397,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19399,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19398,
																	"name": "gift_card",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/gift-card.d.ts",
																			"qualifiedName": "GiftCard"
																		},
																		"name": "GiftCard",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19399,
																		19398
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19400,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19402,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19401,
																	"name": "gift_card",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/gift-card.d.ts",
																			"qualifiedName": "GiftCard"
																		},
																		"name": "GiftCard",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19402,
																		19401
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19403,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19405,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19404,
																	"name": "gift_card",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/gift-card.d.ts",
																			"qualifiedName": "GiftCard"
																		},
																		"name": "GiftCard",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19405,
																		19404
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										19390
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										19390
									]
								}
							]
						},
						{
							"id": 16435,
							"name": "Line Items",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Mutations listed here are used to send requests to the Line Item API Routes part of the [Store Cart API Routes](https://docs.medusajs.com/api/store#carts).\n\nThe hooks listed have general examples on how to use them, but it's highly recommended to use the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "CartProvider",
										"target": 16558
									},
									{
										"kind": "text",
										"text": " provider and\nthe "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "useCart",
										"target": 16553
									},
									{
										"kind": "text",
										"text": " hook to manage your cart and access the current cart across your application."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 19406,
									"name": "useCreateLineItem",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 19407,
											"name": "useCreateLineItem",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook generates a Line Item with a given Product Variant and adds it to the Cart."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useCreateLineItem } from \"medusa-react\"\n\ntype Props = {\n  cartId: string\n}\n\nconst Cart = ({ cartId }: Props) => {\n  const createLineItem = useCreateLineItem(cartId)\n\n  const handleAddItem = (\n    variantId: string,\n    quantity: number\n  ) => {\n    createLineItem.mutate({\n      variant_id: variantId,\n      quantity,\n    }, {\n      onSuccess: ({ cart }) => {\n        console.log(cart.items)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Cart\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 19408,
													"name": "cartId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The cart's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 19409,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
																	"qualifiedName": "StoreCartsRes"
																},
																"name": "StoreCartsRes",
																"package": "@medusajs/medusa"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/create-line-item/index.d.ts",
																	"qualifiedName": "StorePostCartsCartLineItemsReq"
																},
																"name": "StorePostCartsCartLineItemsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
																	"qualifiedName": "StoreCartsRes"
																},
																"name": "StoreCartsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/create-line-item/index.d.ts",
															"qualifiedName": "StorePostCartsCartLineItemsReq"
														},
														"name": "StorePostCartsCartLineItemsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 19413,
									"name": "useUpdateLineItem",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 19414,
											"name": "useUpdateLineItem",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a line item's data."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useUpdateLineItem } from \"medusa-react\"\n\ntype Props = {\n  cartId: string\n}\n\nconst Cart = ({ cartId }: Props) => {\n  const updateLineItem = useUpdateLineItem(cartId)\n\n  const handleUpdateItem = (\n    lineItemId: string,\n    quantity: number\n  ) => {\n    updateLineItem.mutate({\n      lineId: lineItemId,\n      quantity,\n    }, {\n      onSuccess: ({ cart }) => {\n        console.log(cart.items)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Cart\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 19415,
													"name": "cartId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The cart's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 19416,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
																	"qualifiedName": "StoreCartsRes"
																},
																"name": "StoreCartsRes",
																"package": "@medusajs/medusa"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": 19410,
																"name": "UpdateLineItemReq",
																"package": "medusa-react"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
																	"qualifiedName": "StoreCartsRes"
																},
																"name": "StoreCartsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": 19410,
														"name": "UpdateLineItemReq",
														"package": "medusa-react"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 19417,
									"name": "useDeleteLineItem",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 19418,
											"name": "useDeleteLineItem",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a line item from a cart. The payment sessions will be updated and the totals will be recalculated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useDeleteLineItem } from \"medusa-react\"\n\ntype Props = {\n  cartId: string\n}\n\nconst Cart = ({ cartId }: Props) => {\n  const deleteLineItem = useDeleteLineItem(cartId)\n\n  const handleDeleteItem = (\n    lineItemId: string\n  ) => {\n    deleteLineItem.mutate({\n      lineId: lineItemId,\n    }, {\n      onSuccess: ({ cart }) => {\n        console.log(cart.items)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Cart\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 19419,
													"name": "cartId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The cart's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 19420,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
																	"qualifiedName": "StoreCartsRes"
																},
																"name": "StoreCartsRes",
																"package": "@medusajs/medusa"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 19421,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 19422,
																			"name": "lineId",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "The line item's ID."
																					}
																				]
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				19422
																			]
																		}
																	]
																}
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
																	"qualifiedName": "StoreCartsRes"
																},
																"name": "StoreCartsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19423,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19424,
																	"name": "lineId",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The line item's ID."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19424
																	]
																}
															]
														}
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										19406,
										19413,
										19417
									]
								}
							],
							"categories": [
								{
									"title": "Mutations",
									"children": [
										19406,
										19413,
										19417
									]
								}
							]
						},
						{
							"id": 16436,
							"name": "Order Edits",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Store Order Edits API Routes](https://docs.medusajs.com/api/store#order-edits).\n\nOrder edits are changes made to items in an order such as adding, updating their quantity, or deleting them. Order edits are created by the admin.\nA customer can review order edit requests created by an admin and confirm or decline them.\n\nRelated Guide: [How to handle order edits in a storefront](https://docs.medusajs.com/modules/orders/storefront/handle-order-edits)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 19442,
									"name": "useDeclineOrderEdit",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 19443,
											"name": "useDeclineOrderEdit",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook declines an Order Edit. The changes are not reflected on the original order."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useDeclineOrderEdit } from \"medusa-react\"\n\ntype Props = {\n  orderEditId: string\n}\n\nconst OrderEdit = ({ orderEditId }: Props) => {\n  const declineOrderEdit = useDeclineOrderEdit(orderEditId)\n  // ...\n\n  const handleDeclineOrderEdit = (\n    declinedReason: string\n  ) => {\n    declineOrderEdit.mutate({\n      declined_reason: declinedReason,\n    }, {\n      onSuccess: ({ order_edit }) => {\n        console.log(order_edit.declined_at)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default OrderEdit\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 19444,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The order edit's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 19445,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/order-edits/index.d.ts",
																			"qualifiedName": "StoreOrderEditsRes"
																		},
																		"name": "StoreOrderEditsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/order-edits/decline-order-edit.d.ts",
																	"qualifiedName": "StorePostOrderEditsOrderEditDecline"
																},
																"name": "StorePostOrderEditsOrderEditDecline",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/order-edits/index.d.ts",
																	"qualifiedName": "StoreOrderEditsRes"
																},
																"name": "StoreOrderEditsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/store/order-edits/decline-order-edit.d.ts",
															"qualifiedName": "StorePostOrderEditsOrderEditDecline"
														},
														"name": "StorePostOrderEditsOrderEditDecline",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 19446,
									"name": "useCompleteOrderEdit",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 19447,
											"name": "useCompleteOrderEdit",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook completes and confirms an Order Edit and reflect its changes on the original order. Any additional payment required must \nbe authorized first using the "
													},
													{
														"kind": "inline-tag",
														"tag": "@link",
														"text": "useAuthorizePaymentSession",
														"target": 19562
													},
													{
														"kind": "text",
														"text": " hook."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useCompleteOrderEdit } from \"medusa-react\"\n\ntype Props = {\n  orderEditId: string\n}\n\nconst OrderEdit = ({ orderEditId }: Props) => {\n  const completeOrderEdit = useCompleteOrderEdit(\n    orderEditId\n  )\n  // ...\n\n  const handleCompleteOrderEdit = () => {\n    completeOrderEdit.mutate(void 0, {\n      onSuccess: ({ order_edit }) => {\n        console.log(order_edit.confirmed_at)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default OrderEdit\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 19448,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The order edit's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 19449,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/order-edits/index.d.ts",
																			"qualifiedName": "StoreOrderEditsRes"
																		},
																		"name": "StoreOrderEditsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/order-edits/index.d.ts",
																	"qualifiedName": "StoreOrderEditsRes"
																},
																"name": "StoreOrderEditsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 19426,
									"name": "useOrderEdit",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 19427,
											"name": "useOrderEdit",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves an Order Edit's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useOrderEdit } from \"medusa-react\"\n\ntype Props = {\n  orderEditId: string\n}\n\nconst OrderEdit = ({ orderEditId }: Props) => {\n  const { order_edit, isLoading } = useOrderEdit(orderEditId)\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {order_edit && (\n        <ul>\n          {order_edit.changes.map((change) => (\n            <li key={change.id}>{change.type}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default OrderEdit\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 19428,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The order edit's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 19429,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/order-edits/index.d.ts",
																			"qualifiedName": "StoreOrderEditsRes"
																		},
																		"name": "StoreOrderEditsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "orderEdit"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 19430,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19432,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19431,
																	"name": "order_edit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa/dist/models/order-edit.d.ts",
																					"qualifiedName": "OrderEdit"
																				},
																				"name": "OrderEdit",
																				"package": "@medusajs/medusa"
																			},
																			{
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": "internal_note"
																					},
																					{
																						"type": "literal",
																						"value": "created_by"
																					},
																					{
																						"type": "literal",
																						"value": "confirmed_by"
																					},
																					{
																						"type": "literal",
																						"value": "canceled_by"
																					}
																				]
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19432,
																		19431
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19433,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19435,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19434,
																	"name": "order_edit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa/dist/models/order-edit.d.ts",
																					"qualifiedName": "OrderEdit"
																				},
																				"name": "OrderEdit",
																				"package": "@medusajs/medusa"
																			},
																			{
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": "internal_note"
																					},
																					{
																						"type": "literal",
																						"value": "created_by"
																					},
																					{
																						"type": "literal",
																						"value": "confirmed_by"
																					},
																					{
																						"type": "literal",
																						"value": "canceled_by"
																					}
																				]
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19435,
																		19434
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19436,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19438,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19437,
																	"name": "order_edit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa/dist/models/order-edit.d.ts",
																					"qualifiedName": "OrderEdit"
																				},
																				"name": "OrderEdit",
																				"package": "@medusajs/medusa"
																			},
																			{
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": "internal_note"
																					},
																					{
																						"type": "literal",
																						"value": "created_by"
																					},
																					{
																						"type": "literal",
																						"value": "confirmed_by"
																					},
																					{
																						"type": "literal",
																						"value": "canceled_by"
																					}
																				]
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19438,
																		19437
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19439,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19441,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19440,
																	"name": "order_edit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa/dist/models/order-edit.d.ts",
																					"qualifiedName": "OrderEdit"
																				},
																				"name": "OrderEdit",
																				"package": "@medusajs/medusa"
																			},
																			{
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": "internal_note"
																					},
																					{
																						"type": "literal",
																						"value": "created_by"
																					},
																					{
																						"type": "literal",
																						"value": "confirmed_by"
																					},
																					{
																						"type": "literal",
																						"value": "canceled_by"
																					}
																				]
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19441,
																		19440
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										19442,
										19446,
										19426
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										19426
									]
								},
								{
									"title": "Mutations",
									"children": [
										19442,
										19446
									]
								}
							]
						},
						{
							"id": 16437,
							"name": "Orders",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Store Order API Routes](https://docs.medusajs.com/api/store#orders).\n\nOrders are purchases made by customers, typically through a storefront.\nOrders are placed and created using "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "cart",
										"target": 16431
									},
									{
										"kind": "text",
										"text": " hooks. The listed hooks allow retrieving and claiming orders.\n\nRelated Guide: [How to retrieve order details in a storefront](https://docs.medusajs.com/modules/orders/storefront/retrieve-order-details)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 19523,
									"name": "useRequestOrderAccess",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 19524,
											"name": "useRequestOrderAccess",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook allows the logged-in customer to claim ownership of one or more orders. This generates a token that can be used later on to verify the claim \nusing the "
													},
													{
														"kind": "inline-tag",
														"tag": "@link",
														"text": "useGrantOrderAccess",
														"target": 19530,
														"tsLinkText": ""
													},
													{
														"kind": "text",
														"text": " hook. This also emits the event "
													},
													{
														"kind": "code",
														"text": "`order-update-token.created`"
													},
													{
														"kind": "text",
														"text": ". So, if you have a notification provider installed \nthat handles this event and sends the customer a notification, such as an email, the customer should receive instructions on how to \nfinalize their claim ownership."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useRequestOrderAccess } from \"medusa-react\"\n\nconst ClaimOrder = () => {\n  const claimOrder = useRequestOrderAccess()\n\n  const handleClaimOrder = (\n    orderIds: string[]\n  ) => {\n    claimOrder.mutate({\n      order_ids: orderIds\n    }, {\n      onSuccess: () => {\n        // successful\n      },\n      onError: () => {\n        // an error occurred.\n      }\n    })\n  }\n  \n  // ...\n}\n\nexport default ClaimOrder\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 19525,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reflection",
																"declaration": {
																	"id": 19526,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 19527,
																			"name": "response",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																					"qualifiedName": "HTTPResponse"
																				},
																				"name": "HTTPResponse",
																				"package": "@medusajs/medusa-js"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				19527
																			]
																		}
																	]
																}
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/orders/request-order.d.ts",
																	"qualifiedName": "StorePostCustomersCustomerOrderClaimReq"
																},
																"name": "StorePostCustomersCustomerOrderClaimReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reflection",
														"declaration": {
															"id": 19528,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19529,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19529
																	]
																}
															]
														}
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/store/orders/request-order.d.ts",
															"qualifiedName": "StorePostCustomersCustomerOrderClaimReq"
														},
														"name": "StorePostCustomersCustomerOrderClaimReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 19530,
									"name": "useGrantOrderAccess",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 19531,
											"name": "useGrantOrderAccess",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook verifies the claim order token provided to the customer when they request ownership of an order."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useGrantOrderAccess } from \"medusa-react\"\n\nconst ClaimOrder = () => {\n  const confirmOrderRequest = useGrantOrderAccess()\n\n  const handleOrderRequestConfirmation = (\n    token: string\n  ) => {\n    confirmOrderRequest.mutate({\n      token\n    }, {\n      onSuccess: () => {\n        // successful\n      },\n      onError: () => {\n        // an error occurred.\n      }\n    })\n  }\n  \n  // ...\n}\n\nexport default ClaimOrder\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 19532,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reflection",
																"declaration": {
																	"id": 19533,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 19534,
																			"name": "response",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																					"qualifiedName": "HTTPResponse"
																				},
																				"name": "HTTPResponse",
																				"package": "@medusajs/medusa-js"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				19534
																			]
																		}
																	]
																}
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/orders/confirm-order-request.d.ts",
																	"qualifiedName": "StorePostCustomersCustomerAcceptClaimReq"
																},
																"name": "StorePostCustomersCustomerAcceptClaimReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reflection",
														"declaration": {
															"id": 19535,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19536,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19536
																	]
																}
															]
														}
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/store/orders/confirm-order-request.d.ts",
															"qualifiedName": "StorePostCustomersCustomerAcceptClaimReq"
														},
														"name": "StorePostCustomersCustomerAcceptClaimReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 19473,
									"name": "useOrder",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 19474,
											"name": "useOrder",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves an Order's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useOrder } from \"medusa-react\"\n\ntype Props = {\n  orderId: string\n}\n\nconst Order = ({ orderId }: Props) => {\n  const { \n    order, \n    isLoading, \n  } = useOrder(orderId)\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {order && <span>{order.display_id}</span>}\n      \n    </div>\n  )\n}\n\nexport default Order\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 19475,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 19476,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/orders/index.d.ts",
																			"qualifiedName": "StoreOrdersRes"
																		},
																		"name": "StoreOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "orders"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 19477,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19479,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19478,
																	"name": "order",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/order.d.ts",
																			"qualifiedName": "Order"
																		},
																		"name": "Order",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19479,
																		19478
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19480,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19482,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19481,
																	"name": "order",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/order.d.ts",
																			"qualifiedName": "Order"
																		},
																		"name": "Order",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19482,
																		19481
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19483,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19485,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19484,
																	"name": "order",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/order.d.ts",
																			"qualifiedName": "Order"
																		},
																		"name": "Order",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19485,
																		19484
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19486,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19488,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19487,
																	"name": "order",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/order.d.ts",
																			"qualifiedName": "Order"
																		},
																		"name": "Order",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19488,
																		19487
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 19489,
									"name": "useCartOrder",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 19490,
											"name": "useCartOrder",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves an order's details by the ID of the cart that was used to create the order."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useCartOrder } from \"medusa-react\"\n\ntype Props = {\n  cartId: string\n}\n\nconst Order = ({ cartId }: Props) => {\n  const { \n    order, \n    isLoading, \n  } = useCartOrder(cartId)\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {order && <span>{order.display_id}</span>}\n      \n    </div>\n  )\n}\n\nexport default Order\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 19491,
													"name": "cartId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The cart's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 19492,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/orders/index.d.ts",
																			"qualifiedName": "StoreOrdersRes"
																		},
																		"name": "StoreOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "typeOperator",
																"operator": "readonly",
																"target": {
																	"type": "tuple",
																	"elements": [
																		{
																			"type": "literal",
																			"value": "orders"
																		},
																		{
																			"type": "literal",
																			"value": "detail"
																		},
																		{
																			"type": "literal",
																			"value": "cart"
																		},
																		{
																			"type": "intrinsic",
																			"name": "string"
																		}
																	]
																}
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 19493,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19495,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19494,
																	"name": "order",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/order.d.ts",
																			"qualifiedName": "Order"
																		},
																		"name": "Order",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19495,
																		19494
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19496,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19498,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19497,
																	"name": "order",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/order.d.ts",
																			"qualifiedName": "Order"
																		},
																		"name": "Order",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19498,
																		19497
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19499,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19501,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19500,
																	"name": "order",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/order.d.ts",
																			"qualifiedName": "Order"
																		},
																		"name": "Order",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19501,
																		19500
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19502,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19504,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19503,
																	"name": "order",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/order.d.ts",
																			"qualifiedName": "Order"
																		},
																		"name": "Order",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19504,
																		19503
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 19505,
									"name": "useOrders",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 19506,
											"name": "useOrders",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook looks up an order using filters. If the filters don't narrow down the results to a single order, a "
													},
													{
														"kind": "code",
														"text": "`404`"
													},
													{
														"kind": "text",
														"text": " response is returned with no orders."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useOrders } from \"medusa-react\"\n\ntype Props = {\n  displayId: number\n  email: string\n}\n\nconst Order = ({\n  displayId,\n  email\n}: Props) => {\n  const { \n    order, \n    isLoading, \n  } = useOrders({\n    display_id: displayId,\n    email,\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {order && <span>{order.display_id}</span>}\n      \n    </div>\n  )\n}\n\nexport default Order\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 19507,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters used to retrieve the order."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/store/orders/lookup-order.d.ts",
															"qualifiedName": "StoreGetOrdersParams"
														},
														"name": "StoreGetOrdersParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 19508,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/orders/index.d.ts",
																			"qualifiedName": "StoreOrdersRes"
																		},
																		"name": "StoreOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "orders"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 19509,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 19510,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "union",
																						"types": [
																							{
																								"type": "intrinsic",
																								"name": "undefined"
																							},
																							{
																								"type": "reference",
																								"target": {
																									"sourceFileName": "../../../packages/medusa/dist/api/routes/store/orders/lookup-order.d.ts",
																									"qualifiedName": "StoreGetOrdersParams"
																								},
																								"name": "StoreGetOrdersParams",
																								"package": "@medusajs/medusa"
																							}
																						]
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						19510
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 19511,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19513,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19512,
																	"name": "order",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/order.d.ts",
																			"qualifiedName": "Order"
																		},
																		"name": "Order",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19513,
																		19512
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19514,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19516,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19515,
																	"name": "order",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/order.d.ts",
																			"qualifiedName": "Order"
																		},
																		"name": "Order",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19516,
																		19515
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19517,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19519,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19518,
																	"name": "order",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/order.d.ts",
																			"qualifiedName": "Order"
																		},
																		"name": "Order",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19519,
																		19518
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19520,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19522,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19521,
																	"name": "order",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/order.d.ts",
																			"qualifiedName": "Order"
																		},
																		"name": "Order",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19522,
																		19521
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										19523,
										19530,
										19473,
										19489,
										19505
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										19473,
										19489,
										19505
									]
								},
								{
									"title": "Mutations",
									"children": [
										19523,
										19530
									]
								}
							]
						},
						{
							"id": 16438,
							"name": "Payment Collections",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Store Payment Collection API Routes](https://docs.medusajs.com/api/store#payment-collections).\n\nA payment collection is useful for managing additional payments, such as for Order Edits, or installment payments."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 19554,
									"name": "useManageMultiplePaymentSessions",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 19555,
											"name": "useManageMultiplePaymentSessions",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates, updates, or deletes a list of payment sessions of a Payment Collections. If a payment session is not provided in the "
													},
													{
														"kind": "code",
														"text": "`sessions`"
													},
													{
														"kind": "text",
														"text": " array, it's deleted."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To add two new payment sessions:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useManageMultiplePaymentSessions } from \"medusa-react\"\n\ntype Props = {\n  paymentCollectionId: string\n}\n\nconst PaymentCollection = ({\n  paymentCollectionId\n}: Props) => {\n  const managePaymentSessions = useManageMultiplePaymentSessions(\n    paymentCollectionId\n  )\n\n  const handleManagePaymentSessions = () => {\n    managePaymentSessions.mutate({\n      // Total amount = 10000\n      sessions: [\n        {\n          provider_id: \"stripe\",\n          amount: 5000,\n        },\n        {\n          provider_id: \"manual\",\n          amount: 5000,\n        },\n      ]\n    }, {\n      onSuccess: ({ payment_collection }) => {\n        console.log(payment_collection.payment_sessions)\n      }\n    })\n  }\n  \n  // ...\n}\n\nexport default PaymentCollection\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo update a payment session and another one by not including it in the payload:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useManageMultiplePaymentSessions } from \"medusa-react\"\n\ntype Props = {\n  paymentCollectionId: string\n}\n\nconst PaymentCollection = ({\n  paymentCollectionId\n}: Props) => {\n  const managePaymentSessions = useManageMultiplePaymentSessions(\n    paymentCollectionId\n  )\n\n  const handleManagePaymentSessions = () => {\n    managePaymentSessions.mutate({\n      // Total amount = 10000\n      sessions: [\n        {\n          provider_id: \"stripe\",\n          amount: 10000,\n          session_id: \"ps_123456\"\n        },\n      ]\n    }, {\n      onSuccess: ({ payment_collection }) => {\n        console.log(payment_collection.payment_sessions)\n      }\n    })\n  }\n  \n  // ...\n}\n\nexport default PaymentCollection\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 19556,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The payment collection's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 19557,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/payment-collections/index.d.ts",
																			"qualifiedName": "StorePaymentCollectionsRes"
																		},
																		"name": "StorePaymentCollectionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/payment-collections/manage-batch-payment-sessions.d.ts",
																	"qualifiedName": "StorePostPaymentCollectionsBatchSessionsReq"
																},
																"name": "StorePostPaymentCollectionsBatchSessionsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/payment-collections/index.d.ts",
																	"qualifiedName": "StorePaymentCollectionsRes"
																},
																"name": "StorePaymentCollectionsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/store/payment-collections/manage-batch-payment-sessions.d.ts",
															"qualifiedName": "StorePostPaymentCollectionsBatchSessionsReq"
														},
														"name": "StorePostPaymentCollectionsBatchSessionsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 19558,
									"name": "useManagePaymentSession",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 19559,
											"name": "useManagePaymentSession",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a Payment Session for a payment provider in a Payment Collection."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useManagePaymentSession } from \"medusa-react\"\n\ntype Props = {\n  paymentCollectionId: string\n}\n\nconst PaymentCollection = ({\n  paymentCollectionId\n}: Props) => {\n  const managePaymentSession = useManagePaymentSession(\n    paymentCollectionId\n  )\n\n  const handleManagePaymentSession = (\n    providerId: string\n  ) => {\n    managePaymentSession.mutate({\n      provider_id: providerId\n    }, {\n      onSuccess: ({ payment_collection }) => {\n        console.log(payment_collection.payment_sessions)\n      }\n    })\n  }\n  \n  // ...\n}\n\nexport default PaymentCollection\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 19560,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The payment collection's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 19561,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/payment-collections/index.d.ts",
																			"qualifiedName": "StorePaymentCollectionsRes"
																		},
																		"name": "StorePaymentCollectionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/payment-collections/manage-payment-session.d.ts",
																	"qualifiedName": "StorePaymentCollectionSessionsReq"
																},
																"name": "StorePaymentCollectionSessionsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/payment-collections/index.d.ts",
																	"qualifiedName": "StorePaymentCollectionsRes"
																},
																"name": "StorePaymentCollectionsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/store/payment-collections/manage-payment-session.d.ts",
															"qualifiedName": "StorePaymentCollectionSessionsReq"
														},
														"name": "StorePaymentCollectionSessionsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 19562,
									"name": "useAuthorizePaymentSession",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 19563,
											"name": "useAuthorizePaymentSession",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook authorizes a Payment Session of a Payment Collection."
													}
												],
												"blockTags": [
													{
														"tag": "@typeParamDefinition",
														"content": [
															{
																"kind": "text",
																"text": "string - The payment session's ID."
															}
														]
													},
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAuthorizePaymentSession } from \"medusa-react\"\n\ntype Props = {\n  paymentCollectionId: string\n}\n\nconst PaymentCollection = ({\n  paymentCollectionId\n}: Props) => {\n  const authorizePaymentSession = useAuthorizePaymentSession(\n    paymentCollectionId\n  )\n  // ...\n\n  const handleAuthorizePayment = (paymentSessionId: string) => {\n    authorizePaymentSession.mutate(paymentSessionId, {\n      onSuccess: ({ payment_collection }) => {\n        console.log(payment_collection.payment_sessions)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default PaymentCollection\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 19564,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The payment collection's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 19565,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/payment-collections/index.d.ts",
																			"qualifiedName": "StorePaymentCollectionsRes"
																		},
																		"name": "StorePaymentCollectionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/payment-collections/index.d.ts",
																	"qualifiedName": "StorePaymentCollectionsRes"
																},
																"name": "StorePaymentCollectionsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 19566,
									"name": "useAuthorizePaymentSessionsBatch",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 19567,
											"name": "useAuthorizePaymentSessionsBatch",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook authorize the Payment Sessions of a Payment Collection."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAuthorizePaymentSessionsBatch } from \"medusa-react\"\n\ntype Props = {\n  paymentCollectionId: string\n}\n\nconst PaymentCollection = ({\n  paymentCollectionId\n}: Props) => {\n  const authorizePaymentSessions = useAuthorizePaymentSessionsBatch(\n    paymentCollectionId\n  )\n  // ...\n\n  const handleAuthorizePayments = (paymentSessionIds: string[]) => {\n    authorizePaymentSessions.mutate({\n      session_ids: paymentSessionIds\n    }, {\n      onSuccess: ({ payment_collection }) => {\n        console.log(payment_collection.payment_sessions)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default PaymentCollection\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 19568,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The payment collection's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 19569,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/payment-collections/index.d.ts",
																			"qualifiedName": "StorePaymentCollectionsRes"
																		},
																		"name": "StorePaymentCollectionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/payment-collections/authorize-batch-payment-sessions.d.ts",
																	"qualifiedName": "StorePostPaymentCollectionsBatchSessionsAuthorizeReq"
																},
																"name": "StorePostPaymentCollectionsBatchSessionsAuthorizeReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/payment-collections/index.d.ts",
																	"qualifiedName": "StorePaymentCollectionsRes"
																},
																"name": "StorePaymentCollectionsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/store/payment-collections/authorize-batch-payment-sessions.d.ts",
															"qualifiedName": "StorePostPaymentCollectionsBatchSessionsAuthorizeReq"
														},
														"name": "StorePostPaymentCollectionsBatchSessionsAuthorizeReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 19570,
									"name": "usePaymentCollectionRefreshPaymentSession",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 19571,
											"name": "usePaymentCollectionRefreshPaymentSession",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook refreshes a Payment Session's data to ensure that it is in sync with the Payment Collection."
													}
												],
												"blockTags": [
													{
														"tag": "@typeParamDefinition",
														"content": [
															{
																"kind": "text",
																"text": "string - The payment session's ID."
															}
														]
													},
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { usePaymentCollectionRefreshPaymentSession } from \"medusa-react\"\n\ntype Props = {\n  paymentCollectionId: string\n}\n\nconst PaymentCollection = ({\n  paymentCollectionId\n}: Props) => {\n  const refreshPaymentSession = usePaymentCollectionRefreshPaymentSession(\n    paymentCollectionId\n  )\n  // ...\n\n  const handleRefreshPaymentSession = (paymentSessionId: string) => {\n    refreshPaymentSession.mutate(paymentSessionId, {\n      onSuccess: ({ payment_session }) => {\n        console.log(payment_session.status)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default PaymentCollection\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 19572,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The payment collection's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 19573,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/payment-collections/index.d.ts",
																			"qualifiedName": "StorePaymentCollectionsSessionRes"
																		},
																		"name": "StorePaymentCollectionsSessionRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/payment-collections/index.d.ts",
																	"qualifiedName": "StorePaymentCollectionsSessionRes"
																},
																"name": "StorePaymentCollectionsSessionRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 19538,
									"name": "usePaymentCollection",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 19539,
											"name": "usePaymentCollection",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a Payment Collection's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { usePaymentCollection } from \"medusa-react\"\n\ntype Props = {\n  paymentCollectionId: string\n}\n\nconst PaymentCollection = ({\n  paymentCollectionId\n}: Props) => {\n  const { \n    payment_collection, \n    isLoading\n  } = usePaymentCollection(\n    paymentCollectionId\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {payment_collection && (\n        <span>{payment_collection.status}</span>\n      )}\n    </div>\n  )\n}\n\nexport default PaymentCollection\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 19540,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The payment collection's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 19541,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/payment-collections/index.d.ts",
																			"qualifiedName": "StorePaymentCollectionsRes"
																		},
																		"name": "StorePaymentCollectionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "paymentCollection"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 19542,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19544,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19543,
																	"name": "payment_collection",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/payment-collection.d.ts",
																			"qualifiedName": "PaymentCollection"
																		},
																		"name": "PaymentCollection",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19544,
																		19543
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19545,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19547,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19546,
																	"name": "payment_collection",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/payment-collection.d.ts",
																			"qualifiedName": "PaymentCollection"
																		},
																		"name": "PaymentCollection",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19547,
																		19546
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19548,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19550,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19549,
																	"name": "payment_collection",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/payment-collection.d.ts",
																			"qualifiedName": "PaymentCollection"
																		},
																		"name": "PaymentCollection",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19550,
																		19549
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19551,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19553,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19552,
																	"name": "payment_collection",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/payment-collection.d.ts",
																			"qualifiedName": "PaymentCollection"
																		},
																		"name": "PaymentCollection",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19553,
																		19552
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										19554,
										19558,
										19562,
										19566,
										19570,
										19538
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										19538
									]
								},
								{
									"title": "Mutations",
									"children": [
										19554,
										19558,
										19562,
										19566,
										19570
									]
								}
							]
						},
						{
							"id": 16439,
							"name": "Product Categories",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries listed here are used to send requests to the [Store Product Category API Routes](https://docs.medusajs.com/api/store#product-categories_getproductcategories).\n\nProducts can be categoriezed into categories. A product can be associated more than one category.\n\nRelated Guide: [How to use product categories in a storefront](https://docs.medusajs.com/modules/products/storefront/use-categories)."
									}
								],
								"blockTags": [
									{
										"tag": "@featureFlag",
										"content": [
											{
												"kind": "text",
												"text": "product_categories"
											}
										]
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 19575,
									"name": "useProductCategories",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 19576,
											"name": "useProductCategories",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of product categories. The product categories can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`handle`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`q`"
													},
													{
														"kind": "text",
														"text": " passed in the "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " parameter. \nThe product categories can also be paginated. This hook can also be used to retrieve a product category by its handle."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list product categories:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useProductCategories } from \"medusa-react\"\n\nfunction Categories() {\n  const { \n    product_categories, \n    isLoading,\n  } = useProductCategories()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {product_categories && !product_categories.length && (\n        <span>No Categories</span>\n      )}\n      {product_categories && product_categories.length > 0 && (\n        <ul>\n          {product_categories.map(\n            (category) => (\n              <li key={category.id}>{category.name}</li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Categories\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo retrieve a product category by its handle:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useProductCategories } from \"medusa-react\"\n\nfunction Categories(\n  handle: string\n) {\n  const { \n    product_categories, \n    isLoading,\n  } = useProductCategories({\n    handle\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {product_categories && !product_categories.length && (\n        <span>No Categories</span>\n      )}\n      {product_categories && product_categories.length > 0 && (\n        <ul>\n          {product_categories.map(\n            (category) => (\n              <li key={category.id}>{category.name}</li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Categories\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify relations that should be retrieved within the product categories:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useProductCategories } from \"medusa-react\"\n\nfunction Categories(\n  handle: string\n) {\n  const { \n    product_categories, \n    isLoading,\n  } = useProductCategories({\n    handle,\n    expand: \"products\"\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {product_categories && !product_categories.length && (\n        <span>No Categories</span>\n      )}\n      {product_categories && product_categories.length > 0 && (\n        <ul>\n          {product_categories.map(\n            (category) => (\n              <li key={category.id}>{category.name}</li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Categories\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`100`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport { useProductCategories } from \"medusa-react\"\n\nfunction Categories(\n  handle: string\n) {\n  const { \n    product_categories,\n    limit,\n    offset, \n    isLoading,\n  } = useProductCategories({\n    handle,\n    expand: \"products\",\n    limit: 50,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {product_categories && !product_categories.length && (\n        <span>No Categories</span>\n      )}\n      {product_categories && product_categories.length > 0 && (\n        <ul>\n          {product_categories.map(\n            (category) => (\n              <li key={category.id}>{category.name}</li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Categories\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 19577,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations to apply on the retrieved product categories."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/store/product-categories/list-product-categories.d.ts",
															"qualifiedName": "StoreGetProductCategoriesParams"
														},
														"name": "StoreGetProductCategoriesParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 19578,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/product-categories/index.d.ts",
																			"qualifiedName": "StoreGetProductCategoriesRes"
																		},
																		"name": "StoreGetProductCategoriesRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "product_categories"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 19579,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 19580,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						19580
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 19581,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19586,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19585,
																	"name": "product_categories",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-category.d.ts",
																				"qualifiedName": "ProductCategory"
																			},
																			"name": "ProductCategory",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 19582,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 19583,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 19584,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19586,
																		19585,
																		19582,
																		19583,
																		19584
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19587,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19592,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19591,
																	"name": "product_categories",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-category.d.ts",
																				"qualifiedName": "ProductCategory"
																			},
																			"name": "ProductCategory",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 19588,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 19589,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 19590,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19592,
																		19591,
																		19588,
																		19589,
																		19590
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19593,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19598,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19597,
																	"name": "product_categories",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-category.d.ts",
																				"qualifiedName": "ProductCategory"
																			},
																			"name": "ProductCategory",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 19594,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 19595,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 19596,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19598,
																		19597,
																		19594,
																		19595,
																		19596
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19599,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19604,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19603,
																	"name": "product_categories",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-category.d.ts",
																				"qualifiedName": "ProductCategory"
																			},
																			"name": "ProductCategory",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 19600,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 19601,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 19602,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19604,
																		19603,
																		19600,
																		19601,
																		19602
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 19605,
									"name": "useProductCategory",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 19606,
											"name": "useProductCategory",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a Product Category's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "A simple example that retrieves a product category by its ID:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useProductCategory } from \"medusa-react\"\n\ntype Props = {\n  categoryId: string\n}\n\nconst Category = ({ categoryId }: Props) => {\n  const { product_category, isLoading } = useProductCategory(\n    categoryId\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {product_category && <span>{product_category.name}</span>}\n    </div>\n  )\n}\n\nexport default Category\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify relations that should be retrieved:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useProductCategory } from \"medusa-react\"\n\ntype Props = {\n  categoryId: string\n}\n\nconst Category = ({ categoryId }: Props) => {\n  const { product_category, isLoading } = useProductCategory(\n    categoryId,\n    {\n      expand: \"products\"\n    }\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {product_category && <span>{product_category.name}</span>}\n    </div>\n  )\n}\n\nexport default Category\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 19607,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product category's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 19608,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Configurations to apply on the retrieved product categories."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/store/product-categories/get-product-category.d.ts",
															"qualifiedName": "StoreGetProductCategoriesCategoryParams"
														},
														"name": "StoreGetProductCategoriesCategoryParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 19609,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/product-categories/index.d.ts",
																			"qualifiedName": "StoreGetProductCategoriesCategoryRes"
																		},
																		"name": "StoreGetProductCategoriesCategoryRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "product_categories"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 19610,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19612,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19611,
																	"name": "product_category",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/product-category.d.ts",
																			"qualifiedName": "ProductCategory"
																		},
																		"name": "ProductCategory",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19612,
																		19611
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19613,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19615,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19614,
																	"name": "product_category",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/product-category.d.ts",
																			"qualifiedName": "ProductCategory"
																		},
																		"name": "ProductCategory",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19615,
																		19614
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19616,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19618,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19617,
																	"name": "product_category",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/product-category.d.ts",
																			"qualifiedName": "ProductCategory"
																		},
																		"name": "ProductCategory",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19618,
																		19617
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19619,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19621,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19620,
																	"name": "product_category",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/product-category.d.ts",
																			"qualifiedName": "ProductCategory"
																		},
																		"name": "ProductCategory",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19621,
																		19620
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										19575,
										19605
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										19575,
										19605
									]
								}
							]
						},
						{
							"id": 16440,
							"name": "Product Tags",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries listed here are used to send requests to the [Store Product Tag API Routes](https://docs.medusajs.com/api/store#product-tags).\n\nProduct tags are string values that can be used to filter products by.\nProducts can have more than one tag, and products can share tags."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 19623,
									"name": "useProductTags",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 19624,
											"name": "useProductTags",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of product tags. The product tags can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`id`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`q`"
													},
													{
														"kind": "text",
														"text": " \npassed in the "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " parameter. The product tags can also be sorted or paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list product tags:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useProductTags } from \"medusa-react\"\n\nfunction Tags() {\n  const { \n    product_tags, \n    isLoading,\n  } = useProductTags()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {product_tags && !product_tags.length && (\n        <span>No Product Tags</span>\n      )}\n      {product_tags && product_tags.length > 0 && (\n        <ul>\n          {product_tags.map(\n            (tag) => (\n              <li key={tag.id}>{tag.value}</li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Tags\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`20`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useProductTags } from \"medusa-react\"\n\nfunction Tags() {\n  const { \n    product_tags, \n    limit,\n    offset,\n    isLoading,\n  } = useProductTags({\n    limit: 10,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {product_tags && !product_tags.length && (\n        <span>No Product Tags</span>\n      )}\n      {product_tags && product_tags.length > 0 && (\n        <ul>\n          {product_tags.map(\n            (tag) => (\n              <li key={tag.id}>{tag.value}</li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Tags\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 19625,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations to apply on the retrieved product tags."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/store/product-tags/list-product-tags.d.ts",
															"qualifiedName": "StoreGetProductTagsParams"
														},
														"name": "StoreGetProductTagsParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 19626,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/product-tags/index.d.ts",
																			"qualifiedName": "StoreProductTagsListRes"
																		},
																		"name": "StoreProductTagsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "product_tags"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 19627,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 19628,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						19628
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 19629,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19634,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19633,
																	"name": "product_tags",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-tag.d.ts",
																				"qualifiedName": "ProductTag"
																			},
																			"name": "ProductTag",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 19630,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 19631,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 19632,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19634,
																		19633,
																		19630,
																		19631,
																		19632
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19635,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19640,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19639,
																	"name": "product_tags",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-tag.d.ts",
																				"qualifiedName": "ProductTag"
																			},
																			"name": "ProductTag",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 19636,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 19637,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 19638,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19640,
																		19639,
																		19636,
																		19637,
																		19638
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19641,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19646,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19645,
																	"name": "product_tags",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-tag.d.ts",
																				"qualifiedName": "ProductTag"
																			},
																			"name": "ProductTag",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 19642,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 19643,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 19644,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19646,
																		19645,
																		19642,
																		19643,
																		19644
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19647,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19652,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19651,
																	"name": "product_tags",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-tag.d.ts",
																				"qualifiedName": "ProductTag"
																			},
																			"name": "ProductTag",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 19648,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 19649,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 19650,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19652,
																		19651,
																		19648,
																		19649,
																		19650
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										19623
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										19623
									]
								}
							]
						},
						{
							"id": 16441,
							"name": "Product Types",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries listed here are used to send requests to the [Store Product Type API Routes](https://docs.medusajs.com/api/store#product-types).\n\nProduct types are string values that can be used to filter products by.\nProducts can have more than one tag, and products can share types."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 19654,
									"name": "useProductTypes",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 19655,
											"name": "useProductTypes",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of product types. The product types can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`value`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`q`"
													},
													{
														"kind": "text",
														"text": " passed \nin the "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " parameter. The product types can also be sorted or paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list product types:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useProductTypes } from \"medusa-react\"\n\nfunction Types() {\n  const { \n    product_types, \n    isLoading,\n  } = useProductTypes()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {product_types && !product_types.length && (\n        <span>No Product Types</span>\n      )}\n      {product_types && product_types.length > 0 && (\n        <ul>\n          {product_types.map(\n            (type) => (\n              <li key={type.id}>{type.value}</li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Types\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`20`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useProductTypes } from \"medusa-react\"\n\nfunction Types() {\n  const { \n    product_types,\n    limit,\n    offset, \n    isLoading,\n  } = useProductTypes({\n    limit: 10,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {product_types && !product_types.length && (\n        <span>No Product Types</span>\n      )}\n      {product_types && product_types.length > 0 && (\n        <ul>\n          {product_types.map(\n            (type) => (\n              <li key={type.id}>{type.value}</li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Types\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 19656,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations to apply on retrieved product types."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/store/product-types/list-product-types.d.ts",
															"qualifiedName": "StoreGetProductTypesParams"
														},
														"name": "StoreGetProductTypesParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 19657,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/product-types/index.d.ts",
																			"qualifiedName": "StoreProductTypesListRes"
																		},
																		"name": "StoreProductTypesListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "product_types"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 19658,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 19659,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						19659
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 19660,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19665,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19664,
																	"name": "product_types",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-type.d.ts",
																				"qualifiedName": "ProductType"
																			},
																			"name": "ProductType",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 19661,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 19662,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 19663,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19665,
																		19664,
																		19661,
																		19662,
																		19663
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19666,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19671,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19670,
																	"name": "product_types",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-type.d.ts",
																				"qualifiedName": "ProductType"
																			},
																			"name": "ProductType",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 19667,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 19668,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 19669,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19671,
																		19670,
																		19667,
																		19668,
																		19669
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19672,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19677,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19676,
																	"name": "product_types",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-type.d.ts",
																				"qualifiedName": "ProductType"
																			},
																			"name": "ProductType",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 19673,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 19674,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 19675,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19677,
																		19676,
																		19673,
																		19674,
																		19675
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19678,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19683,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19682,
																	"name": "product_types",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-type.d.ts",
																				"qualifiedName": "ProductType"
																			},
																			"name": "ProductType",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 19679,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 19680,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 19681,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19683,
																		19682,
																		19679,
																		19680,
																		19681
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										19654
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										19654
									]
								}
							]
						},
						{
							"id": 16442,
							"name": "Products",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries listed here are used to send requests to the [Store Product API Routes](https://docs.medusajs.com/api/store#products).\n\nProducts are saleable items in a store. This also includes [saleable gift cards](https://docs.medusajs.com/modules/gift-cards/storefront/use-gift-cards) in a store.\nUsing the methods in this class, you can filter products by categories, collections, sales channels, and more.\n\nRelated Guide: [How to show products in a storefront](https://docs.medusajs.com/modules/products/storefront/show-products)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 19685,
									"name": "useProducts",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 19686,
											"name": "useProducts",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of products. The products can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`id`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`q`"
													},
													{
														"kind": "text",
														"text": " passed in the "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " parameter. The products can also be sorted or paginated.\nThis hook can also be used to retrieve a product by its handle.\n\nFor accurate and correct pricing of the products based on the customer's context, it's highly recommended to pass fields such as\n"
													},
													{
														"kind": "code",
														"text": "`region_id`"
													},
													{
														"kind": "text",
														"text": ", "
													},
													{
														"kind": "code",
														"text": "`currency_code`"
													},
													{
														"kind": "text",
														"text": ", and "
													},
													{
														"kind": "code",
														"text": "`cart_id`"
													},
													{
														"kind": "text",
														"text": " when available.\n\nPassing "
													},
													{
														"kind": "code",
														"text": "`sales_channel_id`"
													},
													{
														"kind": "text",
														"text": " ensures retrieving only products available in the specified sales channel.\nYou can alternatively use a publishable API key in the request header instead of passing a "
													},
													{
														"kind": "code",
														"text": "`sales_channel_id`"
													},
													{
														"kind": "text",
														"text": "."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list products:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useProducts } from \"medusa-react\"\n\nconst Products = () => {\n  const { products, isLoading } = useProducts()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {products && !products.length && <span>No Products</span>}\n      {products && products.length > 0 && (\n        <ul>\n          {products.map((product) => (\n            <li key={product.id}>{product.title}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Products\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify relations that should be retrieved within the products:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useProducts } from \"medusa-react\"\n\nconst Products = () => {\n  const { products, isLoading } = useProducts({\n    expand: \"variants\"\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {products && !products.length && <span>No Products</span>}\n      {products && products.length > 0 && (\n        <ul>\n          {products.map((product) => (\n            <li key={product.id}>{product.title}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Products\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`100`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useProducts } from \"medusa-react\"\n\nconst Products = () => {\n  const { \n    products,\n    limit,\n    offset, \n    isLoading\n  } = useProducts({\n    expand: \"variants\",\n    limit: 50,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {products && !products.length && <span>No Products</span>}\n      {products && products.length > 0 && (\n        <ul>\n          {products.map((product) => (\n            <li key={product.id}>{product.title}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Products\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 19687,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations to apply on the retrieved products."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/store/products/list-products.d.ts",
															"qualifiedName": "StoreGetProductsParams"
														},
														"name": "StoreGetProductsParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 19688,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/products/index.d.ts",
																			"qualifiedName": "StoreProductsListRes"
																		},
																		"name": "StoreProductsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "products"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 19689,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 19690,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "union",
																						"types": [
																							{
																								"type": "intrinsic",
																								"name": "undefined"
																							},
																							{
																								"type": "reference",
																								"target": {
																									"sourceFileName": "../../../packages/medusa/dist/api/routes/store/products/list-products.d.ts",
																									"qualifiedName": "StoreGetProductsParams"
																								},
																								"name": "StoreGetProductsParams",
																								"package": "@medusajs/medusa"
																							}
																						]
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						19690
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 19691,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19696,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19695,
																	"name": "products",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																				"qualifiedName": "PricedProduct"
																			},
																			"name": "PricedProduct",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 19692,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 19693,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 19694,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19696,
																		19695,
																		19692,
																		19693,
																		19694
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19697,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19702,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19701,
																	"name": "products",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																				"qualifiedName": "PricedProduct"
																			},
																			"name": "PricedProduct",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 19698,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 19699,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 19700,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19702,
																		19701,
																		19698,
																		19699,
																		19700
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19703,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19708,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19707,
																	"name": "products",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																				"qualifiedName": "PricedProduct"
																			},
																			"name": "PricedProduct",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 19704,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 19705,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 19706,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19708,
																		19707,
																		19704,
																		19705,
																		19706
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19709,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19714,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19713,
																	"name": "products",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																				"qualifiedName": "PricedProduct"
																			},
																			"name": "PricedProduct",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 19710,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 19711,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 19712,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19714,
																		19713,
																		19710,
																		19711,
																		19712
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 19715,
									"name": "useProduct",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 19716,
											"name": "useProduct",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a Product's details. For accurate and correct pricing of the product based on the customer's context, it's highly recommended to pass fields such as\n"
													},
													{
														"kind": "code",
														"text": "`region_id`"
													},
													{
														"kind": "text",
														"text": ", "
													},
													{
														"kind": "code",
														"text": "`currency_code`"
													},
													{
														"kind": "text",
														"text": ", and "
													},
													{
														"kind": "code",
														"text": "`cart_id`"
													},
													{
														"kind": "text",
														"text": " when available.\n\nPassing "
													},
													{
														"kind": "code",
														"text": "`sales_channel_id`"
													},
													{
														"kind": "text",
														"text": " ensures retrieving only products available in the current sales channel.\nYou can alternatively use a publishable API key in the request header instead of passing a "
													},
													{
														"kind": "code",
														"text": "`sales_channel_id`"
													},
													{
														"kind": "text",
														"text": "."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useProduct } from \"medusa-react\"\n\ntype Props = {\n  productId: string\n}\n\nconst Product = ({ productId }: Props) => {\n  const { product, isLoading } = useProduct(productId)\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {product && <span>{product.title}</span>}\n    </div>\n  )\n}\n\nexport default Product\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 19717,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 19718,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/products/index.d.ts",
																			"qualifiedName": "StoreProductsRes"
																		},
																		"name": "StoreProductsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "products"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 19719,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19721,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19720,
																	"name": "product",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																			"qualifiedName": "PricedProduct"
																		},
																		"name": "PricedProduct",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19721,
																		19720
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19722,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19724,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19723,
																	"name": "product",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																			"qualifiedName": "PricedProduct"
																		},
																		"name": "PricedProduct",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19724,
																		19723
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19725,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19727,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19726,
																	"name": "product",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																			"qualifiedName": "PricedProduct"
																		},
																		"name": "PricedProduct",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19727,
																		19726
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19728,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19730,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19729,
																	"name": "product",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																			"qualifiedName": "PricedProduct"
																		},
																		"name": "PricedProduct",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19730,
																		19729
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										19685,
										19715
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										19685,
										19715
									]
								}
							]
						},
						{
							"id": 16443,
							"name": "Regions",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries listed here are used to send requests to the [Store Region API Routes](https://docs.medusajs.com/api/store#regions_getregions).\n\nRegions are different countries or geographical regions that the commerce store serves customers in.\nCustomers can choose what region they're in, which can be used to change the prices shown based on the region and its currency.\n\nRelated Guide: [How to use regions in a storefront](https://docs.medusajs.com/modules/regions-and-currencies/storefront/use-regions)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 19731,
									"name": "useRegions",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 19732,
											"name": "useRegions",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of regions. This hook is useful to show the customer all available regions to choose from."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useRegions } from \"medusa-react\"\n\nconst Regions = () => {\n  const { regions, isLoading } = useRegions()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {regions?.length && (\n        <ul>\n          {regions.map((region) => (\n            <li key={region.id}>\n              {region.name}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Regions\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 19733,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/regions/index.d.ts",
																			"qualifiedName": "StoreRegionsListRes"
																		},
																		"name": "StoreRegionsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "regions"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 19734,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19739,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19738,
																	"name": "regions",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/region.d.ts",
																				"qualifiedName": "Region"
																			},
																			"name": "Region",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 19735,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The limit applied on the retrieved items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 19736,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before retrieving the list of items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 19737,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total count of items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19739,
																		19738,
																		19735,
																		19736,
																		19737
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19740,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19745,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19744,
																	"name": "regions",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/region.d.ts",
																				"qualifiedName": "Region"
																			},
																			"name": "Region",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 19741,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The limit applied on the retrieved items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 19742,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before retrieving the list of items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 19743,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total count of items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19745,
																		19744,
																		19741,
																		19742,
																		19743
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19746,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19751,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19750,
																	"name": "regions",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/region.d.ts",
																				"qualifiedName": "Region"
																			},
																			"name": "Region",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 19747,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The limit applied on the retrieved items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 19748,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before retrieving the list of items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 19749,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total count of items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19751,
																		19750,
																		19747,
																		19748,
																		19749
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19752,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19757,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19756,
																	"name": "regions",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/region.d.ts",
																				"qualifiedName": "Region"
																			},
																			"name": "Region",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 19753,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The limit applied on the retrieved items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 19754,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before retrieving the list of items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 19755,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total count of items."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19757,
																		19756,
																		19753,
																		19754,
																		19755
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 19758,
									"name": "useRegion",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 19759,
											"name": "useRegion",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a Region's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useRegion } from \"medusa-react\"\n\ntype Props = {\n  regionId: string\n}\n\nconst Region = ({ regionId }: Props) => {\n  const { region, isLoading } = useRegion(\n    regionId\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {region && <span>{region.name}</span>}\n    </div>\n  )\n}\n\nexport default Region\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 19760,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The region's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 19761,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/regions/index.d.ts",
																			"qualifiedName": "StoreRegionsRes"
																		},
																		"name": "StoreRegionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "regions"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 19762,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19764,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19763,
																	"name": "region",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/region.d.ts",
																			"qualifiedName": "Region"
																		},
																		"name": "Region",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19764,
																		19763
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19765,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19767,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19766,
																	"name": "region",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/region.d.ts",
																			"qualifiedName": "Region"
																		},
																		"name": "Region",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19767,
																		19766
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19768,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19770,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19769,
																	"name": "region",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/region.d.ts",
																			"qualifiedName": "Region"
																		},
																		"name": "Region",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19770,
																		19769
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19771,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19773,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19772,
																	"name": "region",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/region.d.ts",
																			"qualifiedName": "Region"
																		},
																		"name": "Region",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19773,
																		19772
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										19731,
										19758
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										19731,
										19758
									]
								}
							]
						},
						{
							"id": 16444,
							"name": "Return Reasons",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries listed here are used to send requests to the [Store Return Reason API Routes](https://docs.medusajs.com/api/store#return-reasons).\n\nReturn reasons are key-value pairs that are used to specify why an order return is being created."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 19774,
									"name": "useReturnReasons",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 19775,
											"name": "useReturnReasons",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of Return Reasons. This is useful when implementing a Create Return flow in the storefront."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useReturnReasons } from \"medusa-react\"\n\nconst ReturnReasons = () => {\n  const { \n    return_reasons, \n    isLoading\n  } = useReturnReasons()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {return_reasons?.length && (\n        <ul>\n          {return_reasons.map((returnReason) => (\n            <li key={returnReason.id}>\n              {returnReason.label}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default ReturnReasons\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 19776,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/return-reasons/index.d.ts",
																			"qualifiedName": "StoreReturnReasonsListRes"
																		},
																		"name": "StoreReturnReasonsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "return_reasons"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 19777,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19779,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19778,
																	"name": "return_reasons",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/return-reason.d.ts",
																				"qualifiedName": "ReturnReason"
																			},
																			"name": "ReturnReason",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19779,
																		19778
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19780,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19782,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19781,
																	"name": "return_reasons",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/return-reason.d.ts",
																				"qualifiedName": "ReturnReason"
																			},
																			"name": "ReturnReason",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19782,
																		19781
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19783,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19785,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19784,
																	"name": "return_reasons",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/return-reason.d.ts",
																				"qualifiedName": "ReturnReason"
																			},
																			"name": "ReturnReason",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19785,
																		19784
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19786,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19788,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19787,
																	"name": "return_reasons",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/return-reason.d.ts",
																				"qualifiedName": "ReturnReason"
																			},
																			"name": "ReturnReason",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19788,
																		19787
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 19789,
									"name": "useReturnReason",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 19790,
											"name": "useReturnReason",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a Return Reason's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useReturnReason } from \"medusa-react\"\n\ntype Props = {\n  returnReasonId: string\n}\n\nconst ReturnReason = ({ returnReasonId }: Props) => {\n  const { \n    return_reason, \n    isLoading\n  } = useReturnReason(\n    returnReasonId\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {return_reason && <span>{return_reason.label}</span>}\n    </div>\n  )\n}\n\nexport default ReturnReason\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 19791,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The return reason's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 19792,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/return-reasons/index.d.ts",
																			"qualifiedName": "StoreReturnReasonsRes"
																		},
																		"name": "StoreReturnReasonsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "return_reasons"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 19793,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19795,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19794,
																	"name": "return_reason",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/return-reason.d.ts",
																			"qualifiedName": "ReturnReason"
																		},
																		"name": "ReturnReason",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19795,
																		19794
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19796,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19798,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19797,
																	"name": "return_reason",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/return-reason.d.ts",
																			"qualifiedName": "ReturnReason"
																		},
																		"name": "ReturnReason",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19798,
																		19797
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19799,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19801,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19800,
																	"name": "return_reason",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/return-reason.d.ts",
																			"qualifiedName": "ReturnReason"
																		},
																		"name": "ReturnReason",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19801,
																		19800
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19802,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19804,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19803,
																	"name": "return_reason",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/return-reason.d.ts",
																			"qualifiedName": "ReturnReason"
																		},
																		"name": "ReturnReason",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19804,
																		19803
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										19774,
										19789
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										19774,
										19789
									]
								}
							]
						},
						{
							"id": 16445,
							"name": "Returns",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Mutations listed here are used to send requests to the [Store Return API Routes](https://docs.medusajs.com/api/store#returns).\n\nA return can be created by a customer to return items in an order.\n\nRelated Guide: [How to create a return in a storefront](https://docs.medusajs.com/modules/orders/storefront/create-return)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 19805,
									"name": "useCreateReturn",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 19806,
											"name": "useCreateReturn",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a return for an order. If a return shipping method is specified, the return is automatically fulfilled."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useCreateReturn } from \"medusa-react\"\n\ntype CreateReturnData = {\n  items: {\n    item_id: string,\n    quantity: number\n  }[]\n  return_shipping: {\n    option_id: string\n  }\n}\n\ntype Props = {\n  orderId: string\n}\n\nconst CreateReturn = ({ orderId }: Props) => {\n  const createReturn = useCreateReturn()\n  // ...\n\n  const handleCreate = (data: CreateReturnData) => {\n    createReturn.mutate({\n      ...data,\n      order_id: orderId\n    }, {\n      onSuccess: ({ return: returnData }) => {\n        console.log(returnData.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CreateReturn\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 19807,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/returns/index.d.ts",
																	"qualifiedName": "StoreReturnsRes"
																},
																"name": "StoreReturnsRes",
																"package": "@medusajs/medusa"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/returns/create-return.d.ts",
																	"qualifiedName": "StorePostReturnsReq"
																},
																"name": "StorePostReturnsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/returns/index.d.ts",
																	"qualifiedName": "StoreReturnsRes"
																},
																"name": "StoreReturnsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/store/returns/create-return.d.ts",
															"qualifiedName": "StorePostReturnsReq"
														},
														"name": "StorePostReturnsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										19805
									]
								}
							],
							"categories": [
								{
									"title": "Mutations",
									"children": [
										19805
									]
								}
							]
						},
						{
							"id": 16446,
							"name": "Shipping Options",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries listed here are used to send requests to the [Store Shipping Option API Routes](https://docs.medusajs.com/api/store#shipping-options).\n\nA shipping option is used to define the available shipping methods during checkout or when creating a return.\n\nRelated Guide: [Shipping Option architecture](https://docs.medusajs.com/modules/carts-and-checkout/shipping#shipping-option)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 19808,
									"name": "useShippingOptions",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 19809,
											"name": "useShippingOptions",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of shipping options. The shipping options can be filtered using the "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " parameter."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useShippingOptions } from \"medusa-react\"\n\nconst ShippingOptions = () => {\n  const { \n    shipping_options, \n    isLoading, \n  } = useShippingOptions()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {shipping_options?.length && \n        shipping_options?.length > 0 && (\n        <ul>\n          {shipping_options?.map((shipping_option) => (\n            <li key={shipping_option.id}>\n              {shipping_option.id}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default ShippingOptions\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 19810,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The filters to apply on the shipping options."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/store/shipping-options/list-options.d.ts",
															"qualifiedName": "StoreGetShippingOptionsParams"
														},
														"name": "StoreGetShippingOptionsParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 19811,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/shipping-options/index.d.ts",
																			"qualifiedName": "StoreShippingOptionsListRes"
																		},
																		"name": "StoreShippingOptionsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "shipping_options"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 19812,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 19813,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						19813
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 19814,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19816,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19815,
																	"name": "shipping_options",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																				"qualifiedName": "PricedShippingOption"
																			},
																			"name": "PricedShippingOption",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19816,
																		19815
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19817,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19819,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19818,
																	"name": "shipping_options",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																				"qualifiedName": "PricedShippingOption"
																			},
																			"name": "PricedShippingOption",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19819,
																		19818
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19820,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19822,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19821,
																	"name": "shipping_options",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																				"qualifiedName": "PricedShippingOption"
																			},
																			"name": "PricedShippingOption",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19822,
																		19821
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19823,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19825,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19824,
																	"name": "shipping_options",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																				"qualifiedName": "PricedShippingOption"
																			},
																			"name": "PricedShippingOption",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19825,
																		19824
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 19826,
									"name": "useCartShippingOptions",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 19827,
											"name": "useCartShippingOptions",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of shipping options available for a cart."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useCartShippingOptions } from \"medusa-react\"\n\ntype Props = {\n  cartId: string\n}\n\nconst ShippingOptions = ({ cartId }: Props) => {\n  const { shipping_options, isLoading } =\n    useCartShippingOptions(cartId)\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {shipping_options && !shipping_options.length && (\n        <span>No shipping options</span>\n      )}\n      {shipping_options && (\n        <ul>\n          {shipping_options.map(\n            (shipping_option) => (\n              <li key={shipping_option.id}>\n                {shipping_option.name}\n              </li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default ShippingOptions\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 19828,
													"name": "cartId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The cart's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 19829,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/shipping-options/index.d.ts",
																			"qualifiedName": "StoreShippingOptionsListRes"
																		},
																		"name": "StoreShippingOptionsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "typeOperator",
																"operator": "readonly",
																"target": {
																	"type": "tuple",
																	"elements": [
																		{
																			"type": "literal",
																			"value": "shipping_options"
																		},
																		{
																			"type": "literal",
																			"value": "cart"
																		},
																		{
																			"type": "intrinsic",
																			"name": "string"
																		}
																	]
																}
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 19830,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19832,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19831,
																	"name": "shipping_options",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																				"qualifiedName": "PricedShippingOption"
																			},
																			"name": "PricedShippingOption",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19832,
																		19831
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19833,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19835,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19834,
																	"name": "shipping_options",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																				"qualifiedName": "PricedShippingOption"
																			},
																			"name": "PricedShippingOption",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19835,
																		19834
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19836,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19838,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19837,
																	"name": "shipping_options",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																				"qualifiedName": "PricedShippingOption"
																			},
																			"name": "PricedShippingOption",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19838,
																		19837
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19839,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19841,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19840,
																	"name": "shipping_options",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																				"qualifiedName": "PricedShippingOption"
																			},
																			"name": "PricedShippingOption",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19841,
																		19840
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										19808,
										19826
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										19808,
										19826
									]
								}
							]
						},
						{
							"id": 16447,
							"name": "Swaps",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Store Swap API Routes](https://docs.medusajs.com/api/store#swaps).\n\nA swap is created by a customer or an admin to exchange an item with a new one.\nCreating a swap implicitely includes creating a return for the item being exchanged.\n\nRelated Guide: [How to create a swap in a storefront](https://docs.medusajs.com/modules/orders/storefront/create-swap)"
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 19858,
									"name": "useCreateSwap",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 19859,
											"name": "useCreateSwap",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a Swap for an Order. This will also create a return and associate it with the swap. If a return shipping option is specified, the return will automatically be fulfilled.\nTo complete the swap, you must use the "
													},
													{
														"kind": "inline-tag",
														"tag": "@link",
														"text": "useCompleteCart",
														"target": 19227
													},
													{
														"kind": "text",
														"text": " hook passing it the ID of the swap's cart.\n\nAn idempotency key will be generated if none is provided in the header "
													},
													{
														"kind": "code",
														"text": "`Idempotency-Key`"
													},
													{
														"kind": "text",
														"text": " and added to\nthe response. If an error occurs during swap creation or the request is interrupted for any reason, the swap creation can be retried by passing the idempotency\nkey in the "
													},
													{
														"kind": "code",
														"text": "`Idempotency-Key`"
													},
													{
														"kind": "text",
														"text": " header."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useCreateSwap } from \"medusa-react\"\n\ntype Props = {\n  orderId: string\n}\n\ntype CreateData = {\n  return_items: {\n    item_id: string\n    quantity: number\n  }[]\n  additional_items: {\n    variant_id: string\n    quantity: number\n  }[]\n  return_shipping_option: string\n}\n\nconst CreateSwap = ({\n  orderId\n}: Props) => {\n  const createSwap = useCreateSwap()\n  // ...\n\n  const handleCreate = (\n    data: CreateData\n  ) => {\n    createSwap.mutate({\n      ...data,\n      order_id: orderId\n    }, {\n      onSuccess: ({ swap }) => {\n        console.log(swap.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CreateSwap\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 19860,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/swaps/index.d.ts",
																	"qualifiedName": "StoreSwapsRes"
																},
																"name": "StoreSwapsRes",
																"package": "@medusajs/medusa"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/swaps/create-swap.d.ts",
																	"qualifiedName": "StorePostSwapsReq"
																},
																"name": "StorePostSwapsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/swaps/index.d.ts",
																	"qualifiedName": "StoreSwapsRes"
																},
																"name": "StoreSwapsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/store/swaps/create-swap.d.ts",
															"qualifiedName": "StorePostSwapsReq"
														},
														"name": "StorePostSwapsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 19842,
									"name": "useCartSwap",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 19843,
											"name": "useCartSwap",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a Swap's details by the ID of its cart."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useCartSwap } from \"medusa-react\"\n\ntype Props = {\n  cartId: string\n}\n\nconst Swap = ({ cartId }: Props) => {\n  const { \n    swap, \n    isLoading, \n  } = useCartSwap(cartId)\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {swap && <span>{swap.id}</span>}\n      \n    </div>\n  )\n}\n\nexport default Swap\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 19844,
													"name": "cartId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The ID of the swap's cart."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 19845,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19876,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/swaps/index.d.ts",
																			"qualifiedName": "StoreSwapsRes"
																		},
																		"name": "StoreSwapsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "typeOperator",
																"operator": "readonly",
																"target": {
																	"type": "tuple",
																	"elements": [
																		{
																			"type": "literal",
																			"value": "swaps"
																		},
																		{
																			"type": "literal",
																			"value": "cart"
																		},
																		{
																			"type": "intrinsic",
																			"name": "string"
																		}
																	]
																}
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 19846,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19848,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19847,
																	"name": "swap",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/swap.d.ts",
																			"qualifiedName": "Swap"
																		},
																		"name": "Swap",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19848,
																		19847
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19849,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19851,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19850,
																	"name": "swap",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/swap.d.ts",
																			"qualifiedName": "Swap"
																		},
																		"name": "Swap",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19851,
																		19850
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19852,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19854,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19853,
																	"name": "swap",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/swap.d.ts",
																			"qualifiedName": "Swap"
																		},
																		"name": "Swap",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19854,
																		19853
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19855,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19857,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 19856,
																	"name": "swap",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/swap.d.ts",
																			"qualifiedName": "Swap"
																		},
																		"name": "Swap",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19857,
																		19856
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										19858,
										19842
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										19842
									]
								},
								{
									"title": "Mutations",
									"children": [
										19858
									]
								}
							]
						}
					],
					"groups": [
						{
							"title": "Namespaces",
							"children": [
								16431,
								16432,
								16433,
								16434,
								16435,
								16436,
								16437,
								16438,
								16439,
								16440,
								16441,
								16442,
								16443,
								16444,
								16445,
								16446,
								16447
							]
						}
					]
				}
			],
			"groups": [
				{
					"title": "Namespaces",
					"children": [
						16390,
						16430
					]
				}
			]
		},
		{
			"id": 16540,
			"name": "CartContext",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The cart context available if the "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "CartProvider",
						"target": 16558,
						"tsLinkText": ""
					},
					{
						"kind": "text",
						"text": " is used previously in the React components tree."
					}
				]
			},
			"children": [
				{
					"id": 16552,
					"name": "cart",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The currently-used cart."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/dist/models/cart.d.ts",
									"qualifiedName": "Cart"
								},
								"name": "Cart",
								"package": "@medusajs/medusa"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "refundable_amount"
									},
									{
										"type": "literal",
										"value": "refunded_total"
									}
								]
							}
						],
						"name": "Omit",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "CartState.cart"
					}
				},
				{
					"id": 16541,
					"name": "setCart",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A state function used to set the cart object."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 16542,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 16543,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 16544,
											"name": "cart",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The new value of the cart."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Omit"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/models/cart.d.ts",
															"qualifiedName": "Cart"
														},
														"name": "Cart",
														"package": "@medusajs/medusa"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "refundable_amount"
															},
															{
																"type": "literal",
																"value": "refunded_total"
															}
														]
													}
												],
												"name": "Omit",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 16545,
					"name": "pay",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A mutation used to select a payment processor during checkout.\nUsing it is equivalent to using the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "useSetPaymentSession",
								"target": 19249,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": " mutation."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
									"qualifiedName": "Response"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
											"qualifiedName": "StoreCartsRes"
										},
										"name": "StoreCartsRes",
										"package": "@medusajs/medusa"
									}
								],
								"name": "Response",
								"package": "@medusajs/medusa-js"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Error"
								},
								"name": "Error",
								"package": "typescript"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/set-payment-session.d.ts",
									"qualifiedName": "StorePostCartsCartPaymentSessionReq"
								},
								"name": "StorePostCartsCartPaymentSessionReq",
								"package": "@medusajs/medusa"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				},
				{
					"id": 16546,
					"name": "createCart",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A mutation used to create a cart.\nUsing it is equivalent to using the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "useCreateCart",
								"target": 19220,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": " mutation."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
									"qualifiedName": "Response"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
											"qualifiedName": "StoreCartsRes"
										},
										"name": "StoreCartsRes",
										"package": "@medusajs/medusa"
									}
								],
								"name": "Response",
								"package": "@medusajs/medusa-js"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Error"
								},
								"name": "Error",
								"package": "typescript"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/create-cart.d.ts",
											"qualifiedName": "StorePostCartReq"
										},
										"name": "StorePostCartReq",
										"package": "@medusajs/medusa"
									}
								]
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				},
				{
					"id": 16547,
					"name": "startCheckout",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A mutation used to initialize payment sessions during checkout.\nUsing it is equivalent to using the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "useCreatePaymentSession",
								"target": 19231,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": " mutation."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
									"qualifiedName": "Response"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
											"qualifiedName": "StoreCartsRes"
										},
										"name": "StoreCartsRes",
										"package": "@medusajs/medusa"
									}
								],
								"name": "Response",
								"package": "@medusajs/medusa-js"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Error"
								},
								"name": "Error",
								"package": "typescript"
							},
							{
								"type": "intrinsic",
								"name": "void"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				},
				{
					"id": 16548,
					"name": "completeCheckout",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A mutation used to complete the cart and place the order.\nUsing it is equivalent to using the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "useCompleteCart",
								"target": 19227,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": " mutation."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
									"qualifiedName": "Response"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
											"qualifiedName": "StoreCompleteCartRes"
										},
										"name": "StoreCompleteCartRes",
										"package": "@medusajs/medusa"
									}
								],
								"name": "Response",
								"package": "@medusajs/medusa-js"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Error"
								},
								"name": "Error",
								"package": "typescript"
							},
							{
								"type": "intrinsic",
								"name": "void"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				},
				{
					"id": 16549,
					"name": "updateCart",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A mutation used to update a cart’s details such as region, customer email, shipping address, and more.\nUsing it is equivalent to using the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "useUpdateCart",
								"target": 19223,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": " mutation."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
									"qualifiedName": "Response"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
											"qualifiedName": "StoreCartsRes"
										},
										"name": "StoreCartsRes",
										"package": "@medusajs/medusa"
									}
								],
								"name": "Response",
								"package": "@medusajs/medusa-js"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Error"
								},
								"name": "Error",
								"package": "typescript"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/update-cart.d.ts",
									"qualifiedName": "StorePostCartsCartReq"
								},
								"name": "StorePostCartsCartReq",
								"package": "@medusajs/medusa"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				},
				{
					"id": 16550,
					"name": "addShippingMethod",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A mutation used to add a shipping method to the cart during checkout.\nUsing it is equivalent to using the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "useAddShippingMethodToCart",
								"target": 19253,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": " mutation."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
									"qualifiedName": "Response"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
											"qualifiedName": "StoreCartsRes"
										},
										"name": "StoreCartsRes",
										"package": "@medusajs/medusa"
									}
								],
								"name": "Response",
								"package": "@medusajs/medusa-js"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Error"
								},
								"name": "Error",
								"package": "typescript"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/add-shipping-method.d.ts",
									"qualifiedName": "StorePostCartsCartShippingMethodReq"
								},
								"name": "StorePostCartsCartShippingMethodReq",
								"package": "@medusajs/medusa"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				},
				{
					"id": 16551,
					"name": "totalItems",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items in the cart."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						16552,
						16541,
						16545,
						16546,
						16547,
						16548,
						16549,
						16550,
						16551
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../packages/medusa-react/src/contexts/cart.tsx",
						"qualifiedName": "CartState"
					},
					"name": "CartState",
					"package": "medusa-react"
				}
			]
		},
		{
			"id": 16555,
			"name": "CartProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 16557,
					"name": "initialState",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional initial value to be used for the cart."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/dist/models/cart.d.ts",
									"qualifiedName": "Cart"
								},
								"name": "Cart",
								"package": "@medusajs/medusa"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "refundable_amount"
									},
									{
										"type": "literal",
										"value": "refunded_total"
									}
								]
							}
						],
						"name": "Omit",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						16557
					]
				}
			]
		},
		{
			"id": 16448,
			"name": "MedusaContextState",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 16449,
					"name": "client",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Medusa JS Client instance."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
							"qualifiedName": "Medusa"
						},
						"name": "Medusa",
						"package": "@medusajs/medusa-js"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						16449
					]
				}
			]
		},
		{
			"id": 16452,
			"name": "MedusaProviderProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 16453,
					"name": "baseUrl",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The URL to your Medusa backend."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 16454,
					"name": "queryClientProviderProps",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to set the Tanstack Query client. The object requires a "
							},
							{
								"kind": "code",
								"text": "`client`"
							},
							{
								"kind": "text",
								"text": " property, \nwhich should be an instance of [QueryClient](https://tanstack.com/query/v4/docs/react/reference/QueryClient)."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/QueryClientProvider.d.ts",
							"qualifiedName": "QueryClientProviderProps"
						},
						"name": "QueryClientProviderProps",
						"package": "@tanstack/react-query"
					}
				},
				{
					"id": 16456,
					"name": "apiKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "API key used for authenticating admin requests. Follow [this guide](https://docs.medusajs.com/api/admin#authentication) to learn how to create an API key for an admin user."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 16457,
					"name": "publishableApiKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Publishable API key used for storefront requests. You can create a publishable API key either using the \n[admin APIs](https://docs.medusajs.com/development/publishable-api-keys/admin/manage-publishable-api-keys) or the \n[Medusa admin](https://docs.medusajs.com/user-guide/settings/publishable-api-keys#create-publishable-api-key)."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 16458,
					"name": "maxRetries",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Number of times to retry a request if it fails."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n3\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 16459,
					"name": "customHeaders",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object of custom headers to pass with every request. Each key of the object is the name of the header, and its value is the header's value."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "`{}`"
									}
								]
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 16460,
					"name": "medusaClient",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of the Medusa JS Client. If you don't provide an instance, one will be created using the "
							},
							{
								"kind": "code",
								"text": "`baseUrl`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`apiKey`"
							},
							{
								"kind": "text",
								"text": ", \n"
							},
							{
								"kind": "code",
								"text": "`publishableApiKey`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`maxRetries`"
							},
							{
								"kind": "text",
								"text": ", and "
							},
							{
								"kind": "code",
								"text": "`customHeaders`"
							},
							{
								"kind": "text",
								"text": " props."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
							"qualifiedName": "Medusa"
						},
						"name": "Medusa",
						"package": "@medusajs/medusa-js"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						16453,
						16454,
						16456,
						16457,
						16458,
						16459,
						16460
					]
				}
			]
		},
		{
			"id": 16464,
			"name": "Item",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A session cart's item."
					}
				]
			},
			"children": [
				{
					"id": 16465,
					"name": "variant",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product variant represented by this item in the cart."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa-react/src/types.ts",
							"qualifiedName": "ConvertDateToString"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/dist/models/product-variant.d.ts",
											"qualifiedName": "ProductVariant"
										},
										"name": "ProductVariant",
										"package": "@medusajs/medusa"
									},
									{
										"type": "literal",
										"value": "beforeInsert"
									}
								],
								"name": "Omit",
								"package": "typescript"
							}
						],
						"name": "ConvertDateToString",
						"package": "medusa-react"
					}
				},
				{
					"id": 16466,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity added in the cart."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 16467,
					"name": "total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The total amount of the item in the cart."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						16465,
						16466,
						16467
					]
				}
			]
		},
		{
			"id": 16468,
			"name": "SessionCartState",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 16469,
					"name": "region",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The region of the cart."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 16602,
						"name": "RegionInfo",
						"package": "medusa-react"
					}
				},
				{
					"id": 16470,
					"name": "items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The items in the cart."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 16464,
							"name": "Item",
							"package": "medusa-react"
						}
					}
				},
				{
					"id": 16471,
					"name": "totalItems",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The total items in the cart."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 16472,
					"name": "total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The total amount of the cart."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						16469,
						16470,
						16471,
						16472
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 16473,
					"name": "SessionCartContextState"
				}
			]
		},
		{
			"id": 16473,
			"name": "SessionCartContextState",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 16515,
					"name": "region",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The region of the cart."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 16602,
						"name": "RegionInfo",
						"package": "medusa-react"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 16469,
						"name": "SessionCartState.region"
					}
				},
				{
					"id": 16516,
					"name": "items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The items in the cart."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 16464,
							"name": "Item",
							"package": "medusa-react"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 16470,
						"name": "SessionCartState.items"
					}
				},
				{
					"id": 16517,
					"name": "totalItems",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The total items in the cart."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 16471,
						"name": "SessionCartState.totalItems"
					}
				},
				{
					"id": 16518,
					"name": "total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The total amount of the cart."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 16472,
						"name": "SessionCartState.total"
					}
				},
				{
					"id": 16474,
					"name": "setRegion",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A state function used to set the region."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 16475,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 16476,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 16477,
											"name": "region",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The new value of the region."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 16602,
												"name": "RegionInfo",
												"package": "medusa-react"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 16478,
					"name": "addItem",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This function adds an item to the session cart."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 16479,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 16480,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 16481,
											"name": "item",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The item to add."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 16464,
												"name": "Item",
												"package": "medusa-react"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 16482,
					"name": "removeItem",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This function removes an item from the session cart."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 16483,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 16484,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 16485,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the item."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 16486,
					"name": "updateItem",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This function updates an item in the session cart."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 16487,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 16488,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 16489,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the item."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 16490,
											"name": "item",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The item's data to update."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Partial"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 16464,
														"name": "Item",
														"package": "medusa-react"
													}
												],
												"name": "Partial",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 16491,
					"name": "setItems",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A state function used to set the items in the cart."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 16492,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 16493,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 16494,
											"name": "items",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The items to set in the cart."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 16464,
													"name": "Item",
													"package": "medusa-react"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 16495,
					"name": "updateItemQuantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This function updates an item's quantity in the cart."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 16496,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 16497,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 16498,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the item."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 16499,
											"name": "quantity",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The new quantity of the item."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 16500,
					"name": "incrementItemQuantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This function increments the item's quantity in the cart."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 16501,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 16502,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 16503,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the item."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 16504,
					"name": "decrementItemQuantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This function decrements the item's quantity in the cart."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 16505,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 16506,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 16507,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the item."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 16508,
					"name": "getItem",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This function retrieves an item's details by its ID."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "The item in the cart, if found."
									}
								]
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 16509,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 16510,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 16511,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the item."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"target": 16464,
												"name": "Item",
												"package": "medusa-react"
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 16512,
					"name": "clearItems",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Removes all items in the cart."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 16513,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 16514,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						16515,
						16516,
						16517,
						16518,
						16474,
						16478,
						16482,
						16486,
						16491,
						16495,
						16500,
						16504,
						16508,
						16512
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 16468,
					"name": "SessionCartState",
					"package": "medusa-react"
				}
			]
		},
		{
			"id": 16532,
			"name": "SessionCartProviderProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 16534,
					"name": "initialState",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional initial value to be used for the session cart."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 16468,
						"name": "SessionCartState",
						"package": "medusa-react"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						16534
					]
				}
			]
		},
		{
			"id": 16561,
			"name": "FormatVariantPriceParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Options to format a variant's price."
					}
				]
			},
			"children": [
				{
					"id": 16562,
					"name": "variant",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A variant's details."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 16601,
						"name": "ProductVariantInfo",
						"package": "medusa-react"
					}
				},
				{
					"id": 16563,
					"name": "region",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A region's details."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 16602,
						"name": "RegionInfo",
						"package": "medusa-react"
					}
				},
				{
					"id": 16564,
					"name": "includeTaxes",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the computed price should include taxes or not."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\ntrue\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 16565,
					"name": "minimumFractionDigits",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The minimum number of fraction digits to use when formatting the price. This is passed as an option to "
							},
							{
								"kind": "code",
								"text": "`Intl.NumberFormat`"
							},
							{
								"kind": "text",
								"text": " in the underlying layer. \nYou can learn more about this method’s options in \n[MDN’s documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#parameters)."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 16566,
					"name": "maximumFractionDigits",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum number of fraction digits to use when formatting the price. This is passed as an option to "
							},
							{
								"kind": "code",
								"text": "`Intl.NumberFormat`"
							},
							{
								"kind": "text",
								"text": " which is used within the utility method.\nYou can learn more about this method’s options in \n[MDN’s documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#parameters)."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 16567,
					"name": "locale",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A BCP 47 language tag. The default value is "
							},
							{
								"kind": "code",
								"text": "`en-US`"
							},
							{
								"kind": "text",
								"text": ". This is passed as a first parameter to "
							},
							{
								"kind": "code",
								"text": "`Intl.NumberFormat`"
							},
							{
								"kind": "text",
								"text": " which is used within the utility method. \nYou can learn more about this method’s parameters in \n[MDN’s documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#parameters)."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						16562,
						16563,
						16564,
						16565,
						16566,
						16567
					]
				}
			]
		},
		{
			"id": 16571,
			"name": "ComputeVariantPriceParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Options to format a variant's price."
					}
				]
			},
			"children": [
				{
					"id": 16572,
					"name": "variant",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A variant's details."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 16601,
						"name": "ProductVariantInfo",
						"package": "medusa-react"
					}
				},
				{
					"id": 16573,
					"name": "region",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A region's details."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 16602,
						"name": "RegionInfo",
						"package": "medusa-react"
					}
				},
				{
					"id": 16574,
					"name": "includeTaxes",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the computed price should include taxes or not."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\ntrue\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						16572,
						16573,
						16574
					]
				}
			]
		},
		{
			"id": 16582,
			"name": "ComputeAmountParams",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Options to compute an amount."
					}
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 16583,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 16584,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The original amount used for computation."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 16585,
							"name": "region",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The region's details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 16602,
								"name": "RegionInfo",
								"package": "medusa-react"
							}
						},
						{
							"id": 16586,
							"name": "includeTaxes",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the computed price should include taxes or not."
									}
								],
								"blockTags": [
									{
										"tag": "@defaultValue",
										"content": [
											{
												"kind": "code",
												"text": "```ts\ntrue\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								16584,
								16585,
								16586
							]
						}
					]
				}
			}
		},
		{
			"id": 16590,
			"name": "FormatAmountParams",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Options to format an amount."
					}
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 16591,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 16592,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The original amount used for computation."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 16593,
							"name": "region",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The region's details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 16602,
								"name": "RegionInfo",
								"package": "medusa-react"
							}
						},
						{
							"id": 16594,
							"name": "includeTaxes",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the computed price should include taxes or not."
									}
								],
								"blockTags": [
									{
										"tag": "@defaultValue",
										"content": [
											{
												"kind": "code",
												"text": "```ts\ntrue\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 16595,
							"name": "minimumFractionDigits",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The minimum number of fraction digits to use when formatting the price. This is passed as an option to "
									},
									{
										"kind": "code",
										"text": "`Intl.NumberFormat`"
									},
									{
										"kind": "text",
										"text": " in the underlying layer. \nYou can learn more about this method’s options in \n[MDN’s documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#parameters)."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 16596,
							"name": "maximumFractionDigits",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The maximum number of fraction digits to use when formatting the price. This is passed as an option to "
									},
									{
										"kind": "code",
										"text": "`Intl.NumberFormat`"
									},
									{
										"kind": "text",
										"text": " which is used within the utility method. \nYou can learn more about this method’s options in \n[MDN’s documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#parameters)."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 16597,
							"name": "locale",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A BCP 47 language tag. The default value is "
									},
									{
										"kind": "code",
										"text": "`en-US`"
									},
									{
										"kind": "text",
										"text": ". This is passed as a first parameter to "
									},
									{
										"kind": "code",
										"text": "`Intl.NumberFormat`"
									},
									{
										"kind": "text",
										"text": " which is used within the utility method. \nYou can learn more about this method’s parameters in \n[MDN’s documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#parameters)."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								16592,
								16593,
								16594,
								16595,
								16596,
								16597
							]
						}
					]
				}
			}
		},
		{
			"id": 16603,
			"name": "adminAuthKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 19882,
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_auth"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 16679,
			"name": "useAdminConfirmBatchJob",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 16680,
					"name": "useAdminConfirmBatchJob",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When a batch job is created, it's not executed automatically if "
							},
							{
								"kind": "code",
								"text": "`dry_run`"
							},
							{
								"kind": "text",
								"text": " is set to "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": ". This hook confirms that the batch job should be executed."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nimport React from \"react\"\nimport { useAdminConfirmBatchJob } from \"medusa-react\"\n\ntype Props = {\n  batchJobId: string\n}\n\nconst BatchJob = ({ batchJobId }: Props) => {\n  const confirmBatchJob = useAdminConfirmBatchJob(batchJobId)\n  // ...\n\n  const handleConfirm = () => {\n    confirmBatchJob.mutate(undefined, {\n      onSuccess: ({ batch_job }) => {\n        console.log(batch_job)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default BatchJob\n```"
									}
								]
							}
						]
					},
					"parameters": [
						{
							"id": 16681,
							"name": "id",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the batch job."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 16682,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
									"qualifiedName": "UseMutationOptions"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
											"qualifiedName": "Response"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/batch/index.d.ts",
													"qualifiedName": "AdminBatchJobRes"
												},
												"name": "AdminBatchJobRes",
												"package": "@medusajs/medusa"
											}
										],
										"name": "Response",
										"package": "@medusajs/medusa-js"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Error"
										},
										"name": "Error",
										"package": "typescript"
									},
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "UseMutationOptions",
								"package": "@tanstack/react-query"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
									"qualifiedName": "Response"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/batch/index.d.ts",
											"qualifiedName": "AdminBatchJobRes"
										},
										"name": "AdminBatchJobRes",
										"package": "@medusajs/medusa"
									}
								],
								"name": "Response",
								"package": "@medusajs/medusa-js"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Error"
								},
								"name": "Error",
								"package": "typescript"
							},
							{
								"type": "intrinsic",
								"name": "void"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 16625,
			"name": "adminBatchJobsKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 19882,
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_batches"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 16687,
			"name": "AdminUpdateClaimReq",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/update-claim.d.ts",
							"qualifiedName": "AdminPostOrdersOrderClaimsClaimReq"
						},
						"name": "AdminPostOrdersOrderClaimsClaimReq",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 16688,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 16689,
									"name": "claim_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The claim's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										16689
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 16698,
			"name": "AdminFulfillClaimReq",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the claim's fulfillment."
					}
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/fulfill-claim.d.ts",
							"qualifiedName": "AdminPostOrdersOrderClaimsClaimFulfillmentsReq"
						},
						"name": "AdminPostOrdersOrderClaimsClaimFulfillmentsReq",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 16699,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 16700,
									"name": "claim_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The claim's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										16700
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 16705,
			"name": "AdminCancelClaimFulfillmentReq",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The cancelation details."
					}
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 16706,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 16707,
							"name": "claim_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The claim's ID."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 16708,
							"name": "fulfillment_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The fulfillment's ID."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								16707,
								16708
							]
						}
					]
				}
			}
		},
		{
			"id": 16721,
			"name": "adminCollectionKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 19882,
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_collections"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 16791,
			"name": "adminCurrenciesKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 19882,
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_currencies"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 16993,
			"name": "adminCustomerKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 19882,
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_customers"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 17047,
			"name": "adminDiscountKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 17048,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 17049,
							"name": "detailCondition",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 17050,
									"name": "detailCondition",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 17051,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 17052,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "typeOperator",
										"operator": "readonly",
										"target": {
											"type": "tuple",
											"elements": [
												{
													"type": "literal",
													"value": "admin_discounts"
												},
												{
													"type": "literal",
													"value": "detail"
												},
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "literal",
													"value": "condition"
												},
												{
													"type": "intrinsic",
													"name": "any"
												}
											]
										}
									}
								}
							]
						},
						{
							"id": 17053,
							"name": "all",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "tuple",
								"elements": [
									{
										"type": "literal",
										"value": "admin_discounts"
									}
								]
							}
						},
						{
							"id": 17054,
							"name": "lists",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 17055,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 17056,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "admin_discounts"
													},
													{
														"type": "literal",
														"value": "list"
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 17057,
							"name": "list",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 17058,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 17059,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 17060,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "admin_discounts"
													},
													{
														"type": "literal",
														"value": "list"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17061,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17062,
																	"name": "query",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17062
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 17063,
							"name": "details",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 17064,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 17065,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "admin_discounts"
													},
													{
														"type": "literal",
														"value": "detail"
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 17066,
							"name": "detail",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 17067,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 17068,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 17069,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "admin_discounts"
													},
													{
														"type": "literal",
														"value": "detail"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								17053,
								17054,
								17057,
								17063,
								17066
							]
						},
						{
							"title": "Methods",
							"children": [
								17049
							]
						}
					]
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 17272,
			"name": "AdminDraftOrderUpdateLineItemReq",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details to update of the line item."
					}
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/update-line-item.d.ts",
							"qualifiedName": "AdminPostDraftOrdersDraftOrderLineItemsItemReq"
						},
						"name": "AdminPostDraftOrdersDraftOrderLineItemsItemReq",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 17273,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 17274,
									"name": "item_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The line item's ID to update."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										17274
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 17202,
			"name": "adminDraftOrderKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 19882,
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_draft_orders"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 17279,
			"name": "adminGiftCardKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 19882,
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_gift_cards"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 17425,
			"name": "AdminUpdateLocationLevelReq",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/update-location-level.d.ts",
							"qualifiedName": "AdminPostInventoryItemsItemLocationLevelsLevelReq"
						},
						"name": "AdminPostInventoryItemsItemLocationLevelsLevelReq",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 17426,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 17427,
									"name": "stockLocationId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the location level to update."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										17427
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 17337,
			"name": "adminInventoryItemsKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 19882,
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_inventory_items"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 17463,
			"name": "useAdminCreateInvite",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 17464,
					"name": "useAdminCreateInvite",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 17465,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
									"qualifiedName": "UseMutationOptions"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
											"qualifiedName": "Response"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Response",
										"package": "@medusajs/medusa-js"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Error"
										},
										"name": "Error",
										"package": "typescript"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
											"qualifiedName": "AdminPostInvitesPayload"
										},
										"name": "AdminPostInvitesPayload",
										"package": "@medusajs/medusa-js"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "UseMutationOptions",
								"package": "@tanstack/react-query"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
									"qualifiedName": "Response"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Response",
								"package": "@medusajs/medusa-js"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Error"
								},
								"name": "Error",
								"package": "typescript"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
									"qualifiedName": "AdminPostInvitesPayload"
								},
								"name": "AdminPostInvitesPayload",
								"package": "@medusajs/medusa-js"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 17440,
			"name": "adminInviteKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 19882,
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_invites"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 17470,
			"name": "adminNoteKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 19882,
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_notes"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 17528,
			"name": "adminNotificationKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 19882,
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_notifications"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 17563,
			"name": "adminOrderEditsKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 19882,
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_order_edits"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 17653,
			"name": "adminOrderKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 17654,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 17655,
							"name": "detailOrder",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 17656,
									"name": "detailOrder",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 17657,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 17658,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
													"qualifiedName": "FindParams"
												},
												"name": "FindParams",
												"package": "@medusajs/medusa"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "reflection",
													"declaration": {
														"id": 17659,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 17660,
																"name": "expand",
																"variant": "declaration",
																"kind": 1024,
																"flags": {
																	"isOptional": true
																},
																"comment": {
																	"summary": [
																		{
																			"kind": "inline-tag",
																			"tag": "@inheritDoc",
																			"text": "RequestQueryFields.expand"
																		}
																	],
																	"blockTags": [
																		{
																			"tag": "@deprecated",
																			"content": []
																		}
																	]
																},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															},
															{
																"id": 17661,
																"name": "fields",
																"variant": "declaration",
																"kind": 1024,
																"flags": {
																	"isOptional": true
																},
																"comment": {
																	"summary": [
																		{
																			"kind": "inline-tag",
																			"tag": "@inheritDoc",
																			"text": "RequestQueryFields.fields"
																		}
																	]
																},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"children": [
																	17660,
																	17661
																]
															}
														]
													}
												}
											]
										}
									}
								}
							]
						},
						{
							"id": 17662,
							"name": "all",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "tuple",
								"elements": [
									{
										"type": "literal",
										"value": "admin_orders"
									}
								]
							}
						},
						{
							"id": 17663,
							"name": "lists",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 17664,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 17665,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "admin_orders"
													},
													{
														"type": "literal",
														"value": "list"
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 17666,
							"name": "list",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 17667,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 17668,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 17669,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "admin_orders"
													},
													{
														"type": "literal",
														"value": "list"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17670,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17671,
																	"name": "query",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17671
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 17672,
							"name": "details",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 17673,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 17674,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "admin_orders"
													},
													{
														"type": "literal",
														"value": "detail"
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 17675,
							"name": "detail",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 17676,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 17677,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 17678,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "admin_orders"
													},
													{
														"type": "literal",
														"value": "detail"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								17662,
								17663,
								17666,
								17672,
								17675
							]
						},
						{
							"title": "Methods",
							"children": [
								17655
							]
						}
					]
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 17773,
			"name": "adminPaymentCollectionQueryKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 19882,
				"typeArguments": [
					{
						"type": "literal",
						"value": "paymentCollection"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 17802,
			"name": "adminPaymentQueryKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 19882,
				"typeArguments": [
					{
						"type": "literal",
						"value": "payment"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 17827,
			"name": "adminPriceListKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 17828,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 17829,
							"name": "detailProducts",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 17830,
									"name": "detailProducts",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 17831,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 17832,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "typeOperator",
										"operator": "readonly",
										"target": {
											"type": "tuple",
											"elements": [
												{
													"type": "literal",
													"value": "admin_price_lists"
												},
												{
													"type": "literal",
													"value": "detail"
												},
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "literal",
													"value": "products"
												},
												{
													"type": "intrinsic",
													"name": "any"
												}
											]
										}
									}
								}
							]
						},
						{
							"id": 17833,
							"name": "all",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "tuple",
								"elements": [
									{
										"type": "literal",
										"value": "admin_price_lists"
									}
								]
							}
						},
						{
							"id": 17834,
							"name": "lists",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 17835,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 17836,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "admin_price_lists"
													},
													{
														"type": "literal",
														"value": "list"
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 17837,
							"name": "list",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 17838,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 17839,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 17840,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "admin_price_lists"
													},
													{
														"type": "literal",
														"value": "list"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 17841,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 17842,
																	"name": "query",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		17842
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 17843,
							"name": "details",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 17844,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 17845,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "admin_price_lists"
													},
													{
														"type": "literal",
														"value": "detail"
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 17846,
							"name": "detail",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 17847,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 17848,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 17849,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "admin_price_lists"
													},
													{
														"type": "literal",
														"value": "detail"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								17833,
								17834,
								17837,
								17843,
								17846
							]
						},
						{
							"title": "Methods",
							"children": [
								17829
							]
						}
					]
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 17958,
			"name": "adminProductCategoryKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 19882,
				"typeArguments": [
					{
						"type": "literal",
						"value": "product_categories"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 18025,
			"name": "adminProductTagKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 19882,
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_product_tags"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 18056,
			"name": "adminProductTypeKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 19882,
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_product_types"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 18224,
			"name": "AdminUpdateVariantReq",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/update-variant.d.ts",
							"qualifiedName": "AdminPostProductsProductVariantsVariantReq"
						},
						"name": "AdminPostProductsProductVariantsVariantReq",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 18225,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 18226,
									"name": "variant_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The product variant's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										18226
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 18239,
			"name": "AdminUpdateProductOptionReq",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/update-option.d.ts",
							"qualifiedName": "AdminPostProductsProductOptionsOption"
						},
						"name": "AdminPostProductsProductOptionsOption",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 18240,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 18241,
									"name": "option_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the product option to update."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										18241
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 18087,
			"name": "adminProductKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 18088,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 18089,
							"name": "detailVariants",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 18090,
									"name": "detailVariants",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 18091,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 18092,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "typeOperator",
										"operator": "readonly",
										"target": {
											"type": "tuple",
											"elements": [
												{
													"type": "literal",
													"value": "admin_products"
												},
												{
													"type": "literal",
													"value": "detail"
												},
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "literal",
													"value": "variants"
												},
												{
													"type": "intrinsic",
													"name": "any"
												}
											]
										}
									}
								}
							]
						},
						{
							"id": 18093,
							"name": "all",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "tuple",
								"elements": [
									{
										"type": "literal",
										"value": "admin_products"
									}
								]
							}
						},
						{
							"id": 18094,
							"name": "lists",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 18095,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 18096,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "admin_products"
													},
													{
														"type": "literal",
														"value": "list"
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 18097,
							"name": "list",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 18098,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 18099,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 18100,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "admin_products"
													},
													{
														"type": "literal",
														"value": "list"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18101,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18102,
																	"name": "query",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18102
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 18103,
							"name": "details",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 18104,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 18105,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "admin_products"
													},
													{
														"type": "literal",
														"value": "detail"
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 18106,
							"name": "detail",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 18107,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 18108,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 18109,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "admin_products"
													},
													{
														"type": "literal",
														"value": "detail"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								18093,
								18094,
								18097,
								18103,
								18106
							]
						},
						{
							"title": "Methods",
							"children": [
								18089
							]
						}
					]
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 18157,
			"name": "useAdminProductVariants",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 18158,
					"name": "useAdminProductVariants",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 18159,
							"name": "id",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The product's ID."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 18160,
							"name": "query",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Configurations to apply on the retrieved product variants."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/list-variants.d.ts",
									"qualifiedName": "AdminGetProductsVariantsParams"
								},
								"name": "AdminGetProductsVariantsParams",
								"package": "@medusajs/medusa"
							}
						},
						{
							"id": 18161,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 19876,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
											"qualifiedName": "Response"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
													"qualifiedName": "AdminProductsListVariantsRes"
												},
												"name": "AdminProductsListVariantsRes",
												"package": "@medusajs/medusa"
											}
										],
										"name": "Response",
										"package": "@medusajs/medusa-js"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Error"
										},
										"name": "Error",
										"package": "typescript"
									},
									{
										"type": "typeOperator",
										"operator": "readonly",
										"target": {
											"type": "tuple",
											"elements": [
												{
													"type": "literal",
													"value": "admin_products"
												},
												{
													"type": "literal",
													"value": "detail"
												},
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "literal",
													"value": "variants"
												},
												{
													"type": "intrinsic",
													"name": "any"
												}
											]
										}
									}
								],
								"name": "UseQueryOptionsWrapper",
								"package": "medusa-react"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 18162,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 18167,
											"name": "response",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
													"qualifiedName": "HTTPResponse"
												},
												"name": "HTTPResponse",
												"package": "@medusajs/medusa-js"
											}
										},
										{
											"id": 18166,
											"name": "variants",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../packages/medusa/dist/models/product-variant.d.ts",
														"qualifiedName": "ProductVariant"
													},
													"name": "ProductVariant",
													"package": "@medusajs/medusa"
												}
											}
										},
										{
											"id": 18163,
											"name": "limit",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The maximum number of items that can be returned in the list."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 18164,
											"name": "offset",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The number of items skipped before the returned items in the list."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 18165,
											"name": "count",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The total number of items available."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												18167,
												18166,
												18163,
												18164,
												18165
											]
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 18168,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 18173,
											"name": "response",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
													"qualifiedName": "HTTPResponse"
												},
												"name": "HTTPResponse",
												"package": "@medusajs/medusa-js"
											}
										},
										{
											"id": 18172,
											"name": "variants",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../packages/medusa/dist/models/product-variant.d.ts",
														"qualifiedName": "ProductVariant"
													},
													"name": "ProductVariant",
													"package": "@medusajs/medusa"
												}
											}
										},
										{
											"id": 18169,
											"name": "limit",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The maximum number of items that can be returned in the list."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 18170,
											"name": "offset",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The number of items skipped before the returned items in the list."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 18171,
											"name": "count",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The total number of items available."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												18173,
												18172,
												18169,
												18170,
												18171
											]
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 18174,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 18179,
											"name": "response",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
													"qualifiedName": "HTTPResponse"
												},
												"name": "HTTPResponse",
												"package": "@medusajs/medusa-js"
											}
										},
										{
											"id": 18178,
											"name": "variants",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../packages/medusa/dist/models/product-variant.d.ts",
														"qualifiedName": "ProductVariant"
													},
													"name": "ProductVariant",
													"package": "@medusajs/medusa"
												}
											}
										},
										{
											"id": 18175,
											"name": "limit",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The maximum number of items that can be returned in the list."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 18176,
											"name": "offset",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The number of items skipped before the returned items in the list."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 18177,
											"name": "count",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The total number of items available."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												18179,
												18178,
												18175,
												18176,
												18177
											]
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 18180,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 18185,
											"name": "response",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
													"qualifiedName": "HTTPResponse"
												},
												"name": "HTTPResponse",
												"package": "@medusajs/medusa-js"
											}
										},
										{
											"id": 18184,
											"name": "variants",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../packages/medusa/dist/models/product-variant.d.ts",
														"qualifiedName": "ProductVariant"
													},
													"name": "ProductVariant",
													"package": "@medusajs/medusa"
												}
											}
										},
										{
											"id": 18181,
											"name": "limit",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The maximum number of items that can be returned in the list."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 18182,
											"name": "offset",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The number of items skipped before the returned items in the list."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 18183,
											"name": "count",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true,
												"isReadonly": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The total number of items available."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												18185,
												18184,
												18181,
												18182,
												18183
											]
										}
									]
								}
							}
						]
					}
				}
			]
		},
		{
			"id": 18250,
			"name": "adminPublishableApiKeysKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 18251,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 18252,
							"name": "detailSalesChannels",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 18253,
									"name": "detailSalesChannels",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 18254,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 18255,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "typeOperator",
										"operator": "readonly",
										"target": {
											"type": "tuple",
											"elements": [
												{
													"type": "literal",
													"value": "admin_publishable_api_keys"
												},
												{
													"type": "literal",
													"value": "detail"
												},
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "literal",
													"value": "sales_channels"
												},
												{
													"type": "intrinsic",
													"name": "any"
												}
											]
										}
									}
								}
							]
						},
						{
							"id": 18256,
							"name": "all",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "tuple",
								"elements": [
									{
										"type": "literal",
										"value": "admin_publishable_api_keys"
									}
								]
							}
						},
						{
							"id": 18257,
							"name": "lists",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 18258,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 18259,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "admin_publishable_api_keys"
													},
													{
														"type": "literal",
														"value": "list"
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 18260,
							"name": "list",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 18261,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 18262,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 18263,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "admin_publishable_api_keys"
													},
													{
														"type": "literal",
														"value": "list"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 18264,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 18265,
																	"name": "query",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		18265
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 18266,
							"name": "details",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 18267,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 18268,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "admin_publishable_api_keys"
													},
													{
														"type": "literal",
														"value": "detail"
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 18269,
							"name": "detail",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 18270,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 18271,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 18272,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "admin_publishable_api_keys"
													},
													{
														"type": "literal",
														"value": "detail"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								18256,
								18257,
								18260,
								18266,
								18269
							]
						},
						{
							"title": "Methods",
							"children": [
								18252
							]
						}
					]
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 18359,
			"name": "adminRegionKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 19882,
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_regions"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 18468,
			"name": "adminReservationsKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 19882,
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_reservations"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 18515,
			"name": "adminReturnReasonKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 19882,
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_return_reasons"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 18558,
			"name": "adminReturnKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 19882,
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_returns"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 18594,
			"name": "adminSalesChannelsKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 19882,
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_sales_channels"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 18678,
			"name": "adminShippingOptionKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 19882,
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_shipping_options"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 18736,
			"name": "adminShippingProfileKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 19882,
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_shippingProfiles"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 18779,
			"name": "adminStockLocationsKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 19882,
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_stock_locations"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 18837,
			"name": "adminStoreKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 19882,
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_store"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 18947,
			"name": "AdminFulfillSwapReq",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/fulfill-swap.d.ts",
							"qualifiedName": "AdminPostOrdersOrderSwapsSwapFulfillmentsReq"
						},
						"name": "AdminPostOrdersOrderSwapsSwapFulfillmentsReq",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 18948,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 18949,
									"name": "swap_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The swap's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										18949
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 18954,
			"name": "AdminCreateSwapShipmentReq",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/create-swap-shipment.d.ts",
							"qualifiedName": "AdminPostOrdersOrderSwapsSwapShipmentsReq"
						},
						"name": "AdminPostOrdersOrderSwapsSwapShipmentsReq",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 18955,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 18956,
									"name": "swap_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The swap's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										18956
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 18965,
			"name": "AdminCancelSwapFulfillmentReq",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the swap's fulfillment to cancel."
					}
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 18966,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 18967,
							"name": "swap_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The swap's ID."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 18968,
							"name": "fulfillment_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The fulfillment's ID."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								18967,
								18968
							]
						}
					]
				}
			}
		},
		{
			"id": 18892,
			"name": "adminSwapKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 19882,
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_swaps"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 18979,
			"name": "adminTaxRateKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 19882,
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_tax_rates"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 19074,
			"name": "adminUserKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 19882,
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_users"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 19138,
			"name": "adminVariantKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 19882,
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_variants"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 19219,
			"name": "CreateCartReq",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the cart to create."
					}
				]
			},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/create-cart.d.ts",
							"qualifiedName": "StorePostCartReq"
						},
						"name": "StorePostCartReq",
						"package": "@medusajs/medusa"
					},
					{
						"type": "intrinsic",
						"name": "undefined"
					}
				]
			}
		},
		{
			"id": 19235,
			"name": "UpdatePaymentSessionReq",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the payment session to update."
					}
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/update-payment-session.d.ts",
							"qualifiedName": "StorePostCartsCartPaymentSessionUpdateReq"
						},
						"name": "StorePostCartsCartPaymentSessionUpdateReq",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 19236,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 19237,
									"name": "provider_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The payment provider's identifier."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										19237
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 19242,
			"name": "RefreshPaymentSessionMutationData",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the payment session to refresh."
					}
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 19243,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 19244,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The payment provider's identifier."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								19244
							]
						}
					]
				}
			}
		},
		{
			"id": 19257,
			"name": "DeletePaymentSessionMutationData",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the payment session to delete."
					}
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 19258,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 19259,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The payment provider's identifier."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								19259
							]
						}
					]
				}
			}
		},
		{
			"id": 19202,
			"name": "cartKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 19882,
				"typeArguments": [
					{
						"type": "literal",
						"value": "carts"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 19267,
			"name": "collectionKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 19882,
				"typeArguments": [
					{
						"type": "literal",
						"value": "collections"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 19383,
			"name": "UpdateMeReq",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/dist/api/routes/store/customers/update-customer.d.ts",
							"qualifiedName": "StorePostCustomersCustomerReq"
						},
						"name": "StorePostCustomersCustomerReq",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 19384,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 19385,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The customer's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										19385
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 19314,
			"name": "customerKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 19315,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 19316,
							"name": "orders",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 19317,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 19318,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 19319,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "typeOperator",
												"operator": "readonly",
												"target": {
													"type": "tuple",
													"elements": [
														{
															"type": "literal",
															"value": "customers"
														},
														{
															"type": "literal",
															"value": "detail"
														},
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "literal",
															"value": "orders"
														}
													]
												}
											}
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 19320,
							"name": "all",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "tuple",
								"elements": [
									{
										"type": "literal",
										"value": "customers"
									}
								]
							}
						},
						{
							"id": 19321,
							"name": "lists",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 19322,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 19323,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "customers"
													},
													{
														"type": "literal",
														"value": "list"
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 19324,
							"name": "list",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 19325,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 19326,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 19327,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "customers"
													},
													{
														"type": "literal",
														"value": "list"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19328,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19329,
																	"name": "query",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19329
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 19330,
							"name": "details",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 19331,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 19332,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "customers"
													},
													{
														"type": "literal",
														"value": "detail"
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 19333,
							"name": "detail",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 19334,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 19335,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 19336,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "customers"
													},
													{
														"type": "literal",
														"value": "detail"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								19316,
								19320,
								19321,
								19324,
								19330,
								19333
							]
						}
					]
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 19389,
			"name": "giftCardKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 19882,
				"typeArguments": [
					{
						"type": "literal",
						"value": "gift_cards"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 19410,
			"name": "UpdateLineItemReq",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/update-line-item.d.ts",
							"qualifiedName": "StorePostCartsCartLineItemsItemReq"
						},
						"name": "StorePostCartsCartLineItemsItemReq",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 19411,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 19412,
									"name": "lineId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The line item's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										19412
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 19425,
			"name": "orderEditQueryKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 19882,
				"typeArguments": [
					{
						"type": "literal",
						"value": "orderEdit"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 19450,
			"name": "orderKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 19451,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 19452,
							"name": "cart",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 19453,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 19454,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 19455,
													"name": "cartId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "typeOperator",
												"operator": "readonly",
												"target": {
													"type": "tuple",
													"elements": [
														{
															"type": "literal",
															"value": "orders"
														},
														{
															"type": "literal",
															"value": "detail"
														},
														{
															"type": "literal",
															"value": "cart"
														},
														{
															"type": "intrinsic",
															"name": "string"
														}
													]
												}
											}
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 19456,
							"name": "all",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "tuple",
								"elements": [
									{
										"type": "literal",
										"value": "orders"
									}
								]
							}
						},
						{
							"id": 19457,
							"name": "lists",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 19458,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 19459,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "orders"
													},
													{
														"type": "literal",
														"value": "list"
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 19460,
							"name": "list",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 19461,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 19462,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 19463,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/store/orders/lookup-order.d.ts",
															"qualifiedName": "StoreGetOrdersParams"
														},
														"name": "StoreGetOrdersParams",
														"package": "@medusajs/medusa"
													}
												}
											],
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "orders"
													},
													{
														"type": "literal",
														"value": "list"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19464,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19465,
																	"name": "query",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa/dist/api/routes/store/orders/lookup-order.d.ts",
																					"qualifiedName": "StoreGetOrdersParams"
																				},
																				"name": "StoreGetOrdersParams",
																				"package": "@medusajs/medusa"
																			}
																		]
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19465
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 19466,
							"name": "details",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 19467,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 19468,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "orders"
													},
													{
														"type": "literal",
														"value": "detail"
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 19469,
							"name": "detail",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 19470,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 19471,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 19472,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "orders"
													},
													{
														"type": "literal",
														"value": "detail"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								19452,
								19456,
								19457,
								19460,
								19466,
								19469
							]
						}
					]
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 19537,
			"name": "paymentCollectionQueryKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 19882,
				"typeArguments": [
					{
						"type": "literal",
						"value": "paymentCollection"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 19574,
			"name": "storeProductCategoryKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 19882,
				"typeArguments": [
					{
						"type": "literal",
						"value": "product_categories"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 19622,
			"name": "productTagKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 19882,
				"typeArguments": [
					{
						"type": "literal",
						"value": "product_tags"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 19653,
			"name": "productTypeKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 19882,
				"typeArguments": [
					{
						"type": "literal",
						"value": "product_types"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 19684,
			"name": "productKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": 19882,
				"typeArguments": [
					{
						"type": "literal",
						"value": "products"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/dist/api/routes/store/products/list-products.d.ts",
							"qualifiedName": "StoreGetProductsParams"
						},
						"name": "StoreGetProductsParams",
						"package": "@medusajs/medusa"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 19861,
			"name": "queryKeysFactory",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 19862,
					"name": "queryKeysFactory",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"typeParameter": [
						{
							"id": 19863,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 19864,
							"name": "TListQueryType",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 19865,
							"name": "TDetailQueryType",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"parameters": [
						{
							"id": 19866,
							"name": "globalKey",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 19863,
								"name": "T",
								"package": "medusa-react",
								"refersToTypeParameter": true
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 19882,
						"typeArguments": [
							{
								"type": "reference",
								"target": 19863,
								"name": "T",
								"package": "medusa-react",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 19864,
								"name": "TListQueryType",
								"package": "medusa-react",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 19865,
								"name": "TDetailQueryType",
								"package": "medusa-react",
								"refersToTypeParameter": true
							}
						],
						"name": "TQueryKey",
						"package": "medusa-react"
					}
				}
			]
		},
		{
			"id": 19867,
			"name": "useLocalStorage",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 19868,
					"name": "useLocalStorage",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 19869,
							"name": "key",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 19870,
							"name": "initialState",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "readonly",
						"target": {
							"type": "tuple",
							"elements": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "reflection",
									"declaration": {
										"id": 19871,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"signatures": [
											{
												"id": 19872,
												"name": "__type",
												"variant": "signature",
												"kind": 4096,
												"flags": {},
												"parameters": [
													{
														"id": 19873,
														"name": "data",
														"variant": "param",
														"kind": 32768,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "void"
												}
											}
										]
									}
								},
								{
									"type": "reflection",
									"declaration": {
										"id": 19874,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"signatures": [
											{
												"id": 19875,
												"name": "__type",
												"variant": "signature",
												"kind": 4096,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "void"
												}
											}
										]
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 19876,
			"name": "UseQueryOptionsWrapper",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 19877,
					"name": "TQueryFn",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				},
				{
					"id": 19878,
					"name": "E",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Error"
						},
						"name": "Error",
						"package": "typescript"
					}
				},
				{
					"id": 19879,
					"name": "TQueryKey",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/@tanstack/query-core/build/lib/types.d.ts",
							"qualifiedName": "QueryKey"
						},
						"name": "QueryKey",
						"package": "@tanstack/query-core"
					},
					"default": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/@tanstack/query-core/build/lib/types.d.ts",
							"qualifiedName": "QueryKey"
						},
						"name": "QueryKey",
						"package": "@tanstack/query-core"
					}
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
					"qualifiedName": "Omit"
				},
				"typeArguments": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
							"qualifiedName": "UseQueryOptions"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 19877,
								"name": "TQueryFn",
								"package": "medusa-react",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 19878,
								"name": "E",
								"package": "medusa-react",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 19877,
								"name": "TQueryFn",
								"package": "medusa-react",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 19879,
								"name": "TQueryKey",
								"package": "medusa-react",
								"refersToTypeParameter": true
							}
						],
						"name": "UseQueryOptions",
						"package": "@tanstack/react-query"
					},
					{
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "queryKey"
							},
							{
								"type": "literal",
								"value": "queryFn"
							},
							{
								"type": "literal",
								"value": "select"
							},
							{
								"type": "literal",
								"value": "refetchInterval"
							}
						]
					}
				],
				"name": "Omit",
				"package": "typescript"
			}
		},
		{
			"id": 16602,
			"name": "RegionInfo",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
					"qualifiedName": "Pick"
				},
				"typeArguments": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/dist/models/region.d.ts",
							"qualifiedName": "Region"
						},
						"name": "Region",
						"package": "@medusajs/medusa"
					},
					{
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "currency_code"
							},
							{
								"type": "literal",
								"value": "tax_code"
							},
							{
								"type": "literal",
								"value": "tax_rate"
							}
						]
					}
				],
				"name": "Pick",
				"package": "typescript"
			}
		},
		{
			"id": 19880,
			"name": "ProductVariant",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../../packages/medusa-react/src/types.ts",
					"qualifiedName": "ConvertDateToString"
				},
				"typeArguments": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/dist/models/product-variant.d.ts",
									"qualifiedName": "ProductVariant"
								},
								"name": "ProductVariantEntity",
								"package": "@medusajs/medusa",
								"qualifiedName": "ProductVariant"
							},
							{
								"type": "literal",
								"value": "beforeInsert"
							}
						],
						"name": "Omit",
						"package": "typescript"
					}
				],
				"name": "ConvertDateToString",
				"package": "medusa-react"
			}
		},
		{
			"id": 16601,
			"name": "ProductVariantInfo",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
					"qualifiedName": "Pick"
				},
				"typeArguments": [
					{
						"type": "reference",
						"target": 19880,
						"name": "ProductVariant",
						"package": "medusa-react"
					},
					{
						"type": "literal",
						"value": "prices"
					}
				],
				"name": "Pick",
				"package": "typescript"
			}
		},
		{
			"id": 19881,
			"name": "Cart",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "indexedAccess",
				"indexType": {
					"type": "literal",
					"value": "cart"
				},
				"objectType": {
					"type": "reference",
					"target": {
						"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
						"qualifiedName": "StoreCartsRes"
					},
					"name": "StoreCartsRes",
					"package": "@medusajs/medusa"
				}
			}
		},
		{
			"id": 19882,
			"name": "TQueryKey",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 19901,
					"name": "TKey",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 19902,
					"name": "TListQuery",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 19903,
					"name": "TDetailQuery",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 19883,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 19884,
							"name": "all",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "tuple",
								"elements": [
									{
										"type": "reference",
										"target": 19901,
										"name": "TKey",
										"package": "medusa-react",
										"refersToTypeParameter": true
									}
								]
							}
						},
						{
							"id": 19885,
							"name": "lists",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 19886,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 19887,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "rest",
														"elementType": {
															"type": "indexedAccess",
															"indexType": {
																"type": "literal",
																"value": "all"
															},
															"objectType": {
																"type": "reference",
																"target": 19882,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": 19901,
																		"name": "TKey",
																		"package": "medusa-react",
																		"refersToTypeParameter": true
																	}
																],
																"name": "TQueryKey",
																"package": "medusa-react"
															}
														}
													},
													{
														"type": "literal",
														"value": "list"
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 19888,
							"name": "list",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 19889,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 19890,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 19893,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 19902,
														"name": "TListQuery",
														"package": "medusa-react",
														"refersToTypeParameter": true
													}
												}
											],
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "rest",
														"elementType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "ReturnType"
															},
															"typeArguments": [
																{
																	"type": "indexedAccess",
																	"indexType": {
																		"type": "literal",
																		"value": "lists"
																	},
																	"objectType": {
																		"type": "reference",
																		"target": 19882,
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": 19901,
																				"name": "TKey",
																				"package": "medusa-react",
																				"refersToTypeParameter": true
																			}
																		],
																		"name": "TQueryKey",
																		"package": "medusa-react"
																	}
																}
															],
															"name": "ReturnType",
															"package": "typescript"
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 19891,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 19892,
																	"name": "query",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "reference",
																				"target": 19902,
																				"name": "TListQuery",
																				"package": "medusa-react",
																				"refersToTypeParameter": true
																			},
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			}
																		]
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		19892
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 19894,
							"name": "details",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 19895,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 19896,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "rest",
														"elementType": {
															"type": "indexedAccess",
															"indexType": {
																"type": "literal",
																"value": "all"
															},
															"objectType": {
																"type": "reference",
																"target": 19882,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": 19901,
																		"name": "TKey",
																		"package": "medusa-react",
																		"refersToTypeParameter": true
																	}
																],
																"name": "TQueryKey",
																"package": "medusa-react"
															}
														}
													},
													{
														"type": "literal",
														"value": "detail"
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 19897,
							"name": "detail",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 19898,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 19899,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 19900,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 19903,
														"name": "TDetailQuery",
														"package": "medusa-react",
														"refersToTypeParameter": true
													}
												}
											],
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "rest",
														"elementType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "ReturnType"
															},
															"typeArguments": [
																{
																	"type": "indexedAccess",
																	"indexType": {
																		"type": "literal",
																		"value": "details"
																	},
																	"objectType": {
																		"type": "reference",
																		"target": 19882,
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": 19901,
																				"name": "TKey",
																				"package": "medusa-react",
																				"refersToTypeParameter": true
																			}
																		],
																		"name": "TQueryKey",
																		"package": "medusa-react"
																	}
																}
															],
															"name": "ReturnType",
															"package": "typescript"
														}
													},
													{
														"type": "reference",
														"target": 19903,
														"name": "TDetailQuery",
														"package": "medusa-react",
														"refersToTypeParameter": true
													}
												]
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								19884,
								19885,
								19888,
								19894,
								19897
							]
						}
					]
				}
			}
		}
	],
	"groups": [
		{
			"title": "Namespaces",
			"children": [
				16384,
				16388,
				16389
			]
		},
		{
			"title": "Interfaces",
			"children": [
				16540,
				16555,
				16448,
				16452,
				16464,
				16468,
				16473,
				16532,
				16561,
				16571
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				16582,
				16590,
				16687,
				16698,
				16705,
				17272,
				17425,
				18224,
				18239,
				18947,
				18954,
				18965,
				19219,
				19235,
				19242,
				19257,
				19383,
				19410,
				19876,
				16602,
				19880,
				16601,
				19881,
				19882
			]
		},
		{
			"title": "Variables",
			"children": [
				16603,
				16625,
				16721,
				16791,
				16993,
				17047,
				17202,
				17279,
				17337,
				17440,
				17470,
				17528,
				17563,
				17653,
				17773,
				17802,
				17827,
				17958,
				18025,
				18056,
				18087,
				18250,
				18359,
				18468,
				18515,
				18558,
				18594,
				18678,
				18736,
				18779,
				18837,
				18892,
				18979,
				19074,
				19138,
				19202,
				19267,
				19314,
				19389,
				19425,
				19450,
				19537,
				19574,
				19622,
				19653,
				19684
			]
		},
		{
			"title": "Functions",
			"children": [
				16679,
				17463,
				18157,
				19861,
				19867
			]
		}
	],
	"packageName": "medusa-react",
	"symbolIdMap": {
		"16383": {
			"sourceFileName": "../../../packages/medusa-react/src/index.ts",
			"qualifiedName": ""
		},
		"16448": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/medusa.tsx",
			"qualifiedName": "MedusaContextState"
		},
		"16449": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/medusa.tsx",
			"qualifiedName": "MedusaContextState.client"
		},
		"16450": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/medusa.tsx",
			"qualifiedName": "useMedusa"
		},
		"16451": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/medusa.tsx",
			"qualifiedName": "useMedusa"
		},
		"16452": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/medusa.tsx",
			"qualifiedName": "MedusaProviderProps"
		},
		"16453": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/medusa.tsx",
			"qualifiedName": "MedusaProviderProps.baseUrl"
		},
		"16454": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/medusa.tsx",
			"qualifiedName": "MedusaProviderProps.queryClientProviderProps"
		},
		"16456": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/medusa.tsx",
			"qualifiedName": "MedusaProviderProps.apiKey"
		},
		"16457": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/medusa.tsx",
			"qualifiedName": "MedusaProviderProps.publishableApiKey"
		},
		"16458": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/medusa.tsx",
			"qualifiedName": "MedusaProviderProps.maxRetries"
		},
		"16459": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/medusa.tsx",
			"qualifiedName": "MedusaProviderProps.customHeaders"
		},
		"16460": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/medusa.tsx",
			"qualifiedName": "MedusaProviderProps.medusaClient"
		},
		"16461": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/medusa.tsx",
			"qualifiedName": "MedusaProvider"
		},
		"16462": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/medusa.tsx",
			"qualifiedName": "MedusaProvider"
		},
		"16463": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/medusa.tsx",
			"qualifiedName": "__0"
		},
		"16464": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "Item"
		},
		"16465": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "Item.variant"
		},
		"16466": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "Item.quantity"
		},
		"16467": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "Item.total"
		},
		"16468": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "SessionCartState"
		},
		"16469": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "SessionCartState.region"
		},
		"16470": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "SessionCartState.items"
		},
		"16471": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "SessionCartState.totalItems"
		},
		"16472": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "SessionCartState.total"
		},
		"16473": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "SessionCartContextState"
		},
		"16474": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "SessionCartContextState.setRegion"
		},
		"16475": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "__type"
		},
		"16476": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "__type"
		},
		"16477": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "region"
		},
		"16478": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "SessionCartContextState.addItem"
		},
		"16479": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "__type"
		},
		"16480": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "__type"
		},
		"16481": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "item"
		},
		"16482": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "SessionCartContextState.removeItem"
		},
		"16483": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "__type"
		},
		"16484": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "__type"
		},
		"16485": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "id"
		},
		"16486": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "SessionCartContextState.updateItem"
		},
		"16487": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "__type"
		},
		"16488": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "__type"
		},
		"16489": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "id"
		},
		"16490": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "item"
		},
		"16491": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "SessionCartContextState.setItems"
		},
		"16492": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "__type"
		},
		"16493": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "__type"
		},
		"16494": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "items"
		},
		"16495": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "SessionCartContextState.updateItemQuantity"
		},
		"16496": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "__type"
		},
		"16497": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "__type"
		},
		"16498": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "id"
		},
		"16499": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "quantity"
		},
		"16500": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "SessionCartContextState.incrementItemQuantity"
		},
		"16501": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "__type"
		},
		"16502": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "__type"
		},
		"16503": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "id"
		},
		"16504": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "SessionCartContextState.decrementItemQuantity"
		},
		"16505": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "__type"
		},
		"16506": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "__type"
		},
		"16507": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "id"
		},
		"16508": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "SessionCartContextState.getItem"
		},
		"16509": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "__type"
		},
		"16510": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "__type"
		},
		"16511": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "id"
		},
		"16512": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "SessionCartContextState.clearItems"
		},
		"16513": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "__type"
		},
		"16514": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "__type"
		},
		"16515": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "SessionCartState.region"
		},
		"16516": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "SessionCartState.items"
		},
		"16517": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "SessionCartState.totalItems"
		},
		"16518": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "SessionCartState.total"
		},
		"16532": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "SessionCartProviderProps"
		},
		"16534": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "SessionCartProviderProps.initialState"
		},
		"16535": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "SessionCartProvider"
		},
		"16536": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "SessionCartProvider"
		},
		"16537": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "__0"
		},
		"16538": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "useSessionCart"
		},
		"16539": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "useSessionCart"
		},
		"16540": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/cart.tsx",
			"qualifiedName": "CartContext"
		},
		"16541": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/cart.tsx",
			"qualifiedName": "CartContext.setCart"
		},
		"16542": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/cart.tsx",
			"qualifiedName": "__type"
		},
		"16543": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/cart.tsx",
			"qualifiedName": "__type"
		},
		"16544": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/cart.tsx",
			"qualifiedName": "cart"
		},
		"16545": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/cart.tsx",
			"qualifiedName": "CartContext.pay"
		},
		"16546": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/cart.tsx",
			"qualifiedName": "CartContext.createCart"
		},
		"16547": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/cart.tsx",
			"qualifiedName": "CartContext.startCheckout"
		},
		"16548": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/cart.tsx",
			"qualifiedName": "CartContext.completeCheckout"
		},
		"16549": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/cart.tsx",
			"qualifiedName": "CartContext.updateCart"
		},
		"16550": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/cart.tsx",
			"qualifiedName": "CartContext.addShippingMethod"
		},
		"16551": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/cart.tsx",
			"qualifiedName": "CartContext.totalItems"
		},
		"16552": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/cart.tsx",
			"qualifiedName": "CartState.cart"
		},
		"16553": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/cart.tsx",
			"qualifiedName": "useCart"
		},
		"16554": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/cart.tsx",
			"qualifiedName": "useCart"
		},
		"16555": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/cart.tsx",
			"qualifiedName": "CartProps"
		},
		"16557": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/cart.tsx",
			"qualifiedName": "CartProps.initialState"
		},
		"16558": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/cart.tsx",
			"qualifiedName": "CartProvider"
		},
		"16559": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/cart.tsx",
			"qualifiedName": "CartProvider"
		},
		"16560": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/cart.tsx",
			"qualifiedName": "__0"
		},
		"16561": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "FormatVariantPriceParams"
		},
		"16562": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "__type.variant"
		},
		"16563": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "__type.region"
		},
		"16564": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "__type.includeTaxes"
		},
		"16565": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "__type.minimumFractionDigits"
		},
		"16566": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "__type.maximumFractionDigits"
		},
		"16567": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "__type.locale"
		},
		"16568": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "formatVariantPrice"
		},
		"16569": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "formatVariantPrice"
		},
		"16570": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "__0"
		},
		"16571": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "ComputeVariantPriceParams"
		},
		"16572": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "__type.variant"
		},
		"16573": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "__type.region"
		},
		"16574": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "__type.includeTaxes"
		},
		"16575": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "computeVariantPrice"
		},
		"16576": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "computeVariantPrice"
		},
		"16577": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "__0"
		},
		"16578": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "getVariantPrice"
		},
		"16579": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "getVariantPrice"
		},
		"16580": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "variant"
		},
		"16581": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "region"
		},
		"16582": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "ComputeAmountParams"
		},
		"16583": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "__type"
		},
		"16584": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "__type.amount"
		},
		"16585": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "__type.region"
		},
		"16586": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "__type.includeTaxes"
		},
		"16587": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "computeAmount"
		},
		"16588": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "computeAmount"
		},
		"16589": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "__0"
		},
		"16590": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "FormatAmountParams"
		},
		"16591": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "__type"
		},
		"16592": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "__type.amount"
		},
		"16593": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "__type.region"
		},
		"16594": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "__type.includeTaxes"
		},
		"16595": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "__type.minimumFractionDigits"
		},
		"16596": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "__type.maximumFractionDigits"
		},
		"16597": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "__type.locale"
		},
		"16598": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "formatAmount"
		},
		"16599": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "formatAmount"
		},
		"16600": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "__0"
		},
		"16601": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "ProductVariantInfo"
		},
		"16602": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "RegionInfo"
		},
		"16603": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/auth/queries.ts",
			"qualifiedName": "adminAuthKeys"
		},
		"16604": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/auth/queries.ts",
			"qualifiedName": "useAdminGetSession"
		},
		"16605": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/auth/queries.ts",
			"qualifiedName": "useAdminGetSession"
		},
		"16606": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/auth/queries.ts",
			"qualifiedName": "options"
		},
		"16607": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/auth/queries.ts",
			"qualifiedName": "__object"
		},
		"16608": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/auth/index.d.ts",
			"qualifiedName": "user"
		},
		"16609": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16610": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/auth/queries.ts",
			"qualifiedName": "__object"
		},
		"16611": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/auth/index.d.ts",
			"qualifiedName": "user"
		},
		"16612": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16613": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/auth/queries.ts",
			"qualifiedName": "__object"
		},
		"16614": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/auth/index.d.ts",
			"qualifiedName": "user"
		},
		"16615": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16616": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/auth/queries.ts",
			"qualifiedName": "__object"
		},
		"16617": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/auth/index.d.ts",
			"qualifiedName": "user"
		},
		"16618": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16619": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/auth/mutations.ts",
			"qualifiedName": "useAdminLogin"
		},
		"16620": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/auth/mutations.ts",
			"qualifiedName": "useAdminLogin"
		},
		"16621": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/auth/mutations.ts",
			"qualifiedName": "options"
		},
		"16622": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/auth/mutations.ts",
			"qualifiedName": "useAdminDeleteSession"
		},
		"16623": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/auth/mutations.ts",
			"qualifiedName": "useAdminDeleteSession"
		},
		"16624": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/auth/mutations.ts",
			"qualifiedName": "options"
		},
		"16625": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/queries.ts",
			"qualifiedName": "adminBatchJobsKeys"
		},
		"16626": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/queries.ts",
			"qualifiedName": "useAdminBatchJobs"
		},
		"16627": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/queries.ts",
			"qualifiedName": "useAdminBatchJobs"
		},
		"16628": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/queries.ts",
			"qualifiedName": "query"
		},
		"16629": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/queries.ts",
			"qualifiedName": "options"
		},
		"16630": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"16631": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"16632": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/queries.ts",
			"qualifiedName": "__object"
		},
		"16633": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"16634": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"16635": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"16636": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/batch/index.d.ts",
			"qualifiedName": "batch_jobs"
		},
		"16637": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16638": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/queries.ts",
			"qualifiedName": "__object"
		},
		"16639": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"16640": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"16641": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"16642": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/batch/index.d.ts",
			"qualifiedName": "batch_jobs"
		},
		"16643": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16644": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/queries.ts",
			"qualifiedName": "__object"
		},
		"16645": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"16646": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"16647": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"16648": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/batch/index.d.ts",
			"qualifiedName": "batch_jobs"
		},
		"16649": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16650": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/queries.ts",
			"qualifiedName": "__object"
		},
		"16651": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"16652": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"16653": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"16654": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/batch/index.d.ts",
			"qualifiedName": "batch_jobs"
		},
		"16655": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16656": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/queries.ts",
			"qualifiedName": "useAdminBatchJob"
		},
		"16657": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/queries.ts",
			"qualifiedName": "useAdminBatchJob"
		},
		"16658": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/queries.ts",
			"qualifiedName": "id"
		},
		"16659": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/queries.ts",
			"qualifiedName": "options"
		},
		"16660": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/queries.ts",
			"qualifiedName": "__object"
		},
		"16661": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/batch/index.d.ts",
			"qualifiedName": "batch_job"
		},
		"16662": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16663": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/queries.ts",
			"qualifiedName": "__object"
		},
		"16664": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/batch/index.d.ts",
			"qualifiedName": "batch_job"
		},
		"16665": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16666": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/queries.ts",
			"qualifiedName": "__object"
		},
		"16667": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/batch/index.d.ts",
			"qualifiedName": "batch_job"
		},
		"16668": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16669": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/queries.ts",
			"qualifiedName": "__object"
		},
		"16670": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/batch/index.d.ts",
			"qualifiedName": "batch_job"
		},
		"16671": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16672": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/mutations.ts",
			"qualifiedName": "useAdminCreateBatchJob"
		},
		"16673": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/mutations.ts",
			"qualifiedName": "useAdminCreateBatchJob"
		},
		"16674": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/mutations.ts",
			"qualifiedName": "options"
		},
		"16675": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/mutations.ts",
			"qualifiedName": "useAdminCancelBatchJob"
		},
		"16676": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/mutations.ts",
			"qualifiedName": "useAdminCancelBatchJob"
		},
		"16677": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/mutations.ts",
			"qualifiedName": "id"
		},
		"16678": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/mutations.ts",
			"qualifiedName": "options"
		},
		"16679": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/mutations.ts",
			"qualifiedName": "useAdminConfirmBatchJob"
		},
		"16680": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/mutations.ts",
			"qualifiedName": "useAdminConfirmBatchJob"
		},
		"16681": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/mutations.ts",
			"qualifiedName": "id"
		},
		"16682": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/mutations.ts",
			"qualifiedName": "options"
		},
		"16683": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "useAdminCreateClaim"
		},
		"16684": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "useAdminCreateClaim"
		},
		"16685": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "orderId"
		},
		"16686": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "options"
		},
		"16687": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "AdminUpdateClaimReq"
		},
		"16688": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "__type"
		},
		"16689": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "__type.claim_id"
		},
		"16690": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "useAdminUpdateClaim"
		},
		"16691": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "useAdminUpdateClaim"
		},
		"16692": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "orderId"
		},
		"16693": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "options"
		},
		"16694": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "useAdminCancelClaim"
		},
		"16695": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "useAdminCancelClaim"
		},
		"16696": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "orderId"
		},
		"16697": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "options"
		},
		"16698": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "AdminFulfillClaimReq"
		},
		"16699": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "__type"
		},
		"16700": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "__type.claim_id"
		},
		"16701": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "useAdminFulfillClaim"
		},
		"16702": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "useAdminFulfillClaim"
		},
		"16703": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "orderId"
		},
		"16704": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "options"
		},
		"16705": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "AdminCancelClaimFulfillmentReq"
		},
		"16706": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "__type"
		},
		"16707": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "__type.claim_id"
		},
		"16708": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "__type.fulfillment_id"
		},
		"16709": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "useAdminCancelClaimFulfillment"
		},
		"16710": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "useAdminCancelClaimFulfillment"
		},
		"16711": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "orderId"
		},
		"16712": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "options"
		},
		"16713": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "useAdminCreateClaimShipment"
		},
		"16714": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "useAdminCreateClaimShipment"
		},
		"16715": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "orderId"
		},
		"16716": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "options"
		},
		"16717": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "__type"
		},
		"16718": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "__type.claim_id"
		},
		"16719": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "__type"
		},
		"16720": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "__type.claim_id"
		},
		"16721": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/queries.ts",
			"qualifiedName": "adminCollectionKeys"
		},
		"16722": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/queries.ts",
			"qualifiedName": "useAdminCollections"
		},
		"16723": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/queries.ts",
			"qualifiedName": "useAdminCollections"
		},
		"16724": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/queries.ts",
			"qualifiedName": "query"
		},
		"16725": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/queries.ts",
			"qualifiedName": "options"
		},
		"16726": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"16727": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"16728": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/queries.ts",
			"qualifiedName": "__object"
		},
		"16729": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"16730": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"16731": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"16732": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/index.d.ts",
			"qualifiedName": "collections"
		},
		"16733": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16734": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/queries.ts",
			"qualifiedName": "__object"
		},
		"16735": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"16736": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"16737": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"16738": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/index.d.ts",
			"qualifiedName": "collections"
		},
		"16739": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16740": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/queries.ts",
			"qualifiedName": "__object"
		},
		"16741": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"16742": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"16743": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"16744": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/index.d.ts",
			"qualifiedName": "collections"
		},
		"16745": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16746": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/queries.ts",
			"qualifiedName": "__object"
		},
		"16747": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"16748": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"16749": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"16750": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/index.d.ts",
			"qualifiedName": "collections"
		},
		"16751": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16752": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/queries.ts",
			"qualifiedName": "useAdminCollection"
		},
		"16753": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/queries.ts",
			"qualifiedName": "useAdminCollection"
		},
		"16754": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/queries.ts",
			"qualifiedName": "id"
		},
		"16755": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/queries.ts",
			"qualifiedName": "options"
		},
		"16756": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/queries.ts",
			"qualifiedName": "__object"
		},
		"16757": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/index.d.ts",
			"qualifiedName": "collection"
		},
		"16758": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16759": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/queries.ts",
			"qualifiedName": "__object"
		},
		"16760": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/index.d.ts",
			"qualifiedName": "collection"
		},
		"16761": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16762": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/queries.ts",
			"qualifiedName": "__object"
		},
		"16763": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/index.d.ts",
			"qualifiedName": "collection"
		},
		"16764": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16765": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/queries.ts",
			"qualifiedName": "__object"
		},
		"16766": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/index.d.ts",
			"qualifiedName": "collection"
		},
		"16767": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16768": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/mutations.ts",
			"qualifiedName": "useAdminCreateCollection"
		},
		"16769": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/mutations.ts",
			"qualifiedName": "useAdminCreateCollection"
		},
		"16770": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/mutations.ts",
			"qualifiedName": "options"
		},
		"16771": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/mutations.ts",
			"qualifiedName": "useAdminUpdateCollection"
		},
		"16772": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/mutations.ts",
			"qualifiedName": "useAdminUpdateCollection"
		},
		"16773": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/mutations.ts",
			"qualifiedName": "id"
		},
		"16774": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/mutations.ts",
			"qualifiedName": "options"
		},
		"16775": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/mutations.ts",
			"qualifiedName": "useAdminDeleteCollection"
		},
		"16776": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/mutations.ts",
			"qualifiedName": "useAdminDeleteCollection"
		},
		"16777": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/mutations.ts",
			"qualifiedName": "id"
		},
		"16778": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/mutations.ts",
			"qualifiedName": "options"
		},
		"16779": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/mutations.ts",
			"qualifiedName": "useAdminAddProductsToCollection"
		},
		"16780": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/mutations.ts",
			"qualifiedName": "useAdminAddProductsToCollection"
		},
		"16781": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/mutations.ts",
			"qualifiedName": "id"
		},
		"16782": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/mutations.ts",
			"qualifiedName": "options"
		},
		"16783": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/mutations.ts",
			"qualifiedName": "useAdminRemoveProductsFromCollection"
		},
		"16784": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/mutations.ts",
			"qualifiedName": "useAdminRemoveProductsFromCollection"
		},
		"16785": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/mutations.ts",
			"qualifiedName": "id"
		},
		"16786": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/mutations.ts",
			"qualifiedName": "options"
		},
		"16787": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/currencies/mutations.ts",
			"qualifiedName": "useAdminUpdateCurrency"
		},
		"16788": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/currencies/mutations.ts",
			"qualifiedName": "useAdminUpdateCurrency"
		},
		"16789": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/currencies/mutations.ts",
			"qualifiedName": "code"
		},
		"16790": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/currencies/mutations.ts",
			"qualifiedName": "options"
		},
		"16791": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/currencies/queries.ts",
			"qualifiedName": "adminCurrenciesKeys"
		},
		"16792": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/currencies/queries.ts",
			"qualifiedName": "useAdminCurrencies"
		},
		"16793": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/currencies/queries.ts",
			"qualifiedName": "useAdminCurrencies"
		},
		"16794": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/currencies/queries.ts",
			"qualifiedName": "query"
		},
		"16795": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/currencies/queries.ts",
			"qualifiedName": "options"
		},
		"16796": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"16797": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"16798": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/currencies/queries.ts",
			"qualifiedName": "__object"
		},
		"16799": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"16800": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"16801": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"16802": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/currencies/index.d.ts",
			"qualifiedName": "currencies"
		},
		"16803": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16804": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/currencies/queries.ts",
			"qualifiedName": "__object"
		},
		"16805": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"16806": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"16807": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"16808": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/currencies/index.d.ts",
			"qualifiedName": "currencies"
		},
		"16809": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16810": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/currencies/queries.ts",
			"qualifiedName": "__object"
		},
		"16811": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"16812": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"16813": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"16814": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/currencies/index.d.ts",
			"qualifiedName": "currencies"
		},
		"16815": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16816": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/currencies/queries.ts",
			"qualifiedName": "__object"
		},
		"16817": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"16818": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"16819": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"16820": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/currencies/index.d.ts",
			"qualifiedName": "currencies"
		},
		"16821": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16822": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/mutations.ts",
			"qualifiedName": "useAdminCustomDelete"
		},
		"16823": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/mutations.ts",
			"qualifiedName": "useAdminCustomDelete"
		},
		"16824": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/mutations.ts",
			"qualifiedName": "TResponse"
		},
		"16825": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/mutations.ts",
			"qualifiedName": "path"
		},
		"16826": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/mutations.ts",
			"qualifiedName": "queryKey"
		},
		"16827": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/mutations.ts",
			"qualifiedName": "relatedDomains"
		},
		"16828": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/mutations.ts",
			"qualifiedName": "options"
		},
		"16829": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/mutations.ts",
			"qualifiedName": "useAdminCustomPost"
		},
		"16830": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/mutations.ts",
			"qualifiedName": "useAdminCustomPost"
		},
		"16831": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/mutations.ts",
			"qualifiedName": "TPayload"
		},
		"16832": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/mutations.ts",
			"qualifiedName": "TResponse"
		},
		"16833": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/mutations.ts",
			"qualifiedName": "path"
		},
		"16834": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/mutations.ts",
			"qualifiedName": "queryKey"
		},
		"16835": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/mutations.ts",
			"qualifiedName": "relatedDomains"
		},
		"16836": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/mutations.ts",
			"qualifiedName": "options"
		},
		"16837": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/queries.ts",
			"qualifiedName": "useAdminCustomQuery"
		},
		"16838": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/queries.ts",
			"qualifiedName": "useAdminCustomQuery"
		},
		"16839": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/queries.ts",
			"qualifiedName": "TQuery"
		},
		"16840": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/queries.ts",
			"qualifiedName": "TResponse"
		},
		"16841": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/queries.ts",
			"qualifiedName": "path"
		},
		"16842": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/queries.ts",
			"qualifiedName": "queryKey"
		},
		"16843": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/queries.ts",
			"qualifiedName": "query"
		},
		"16844": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/queries.ts",
			"qualifiedName": "options"
		},
		"16845": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/queries.ts",
			"qualifiedName": "__object"
		},
		"16846": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/queries.ts",
			"qualifiedName": "__object.data"
		},
		"16847": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/queries.ts",
			"qualifiedName": "__object"
		},
		"16848": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/queries.ts",
			"qualifiedName": "__object.data"
		},
		"16849": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/queries.ts",
			"qualifiedName": "__object"
		},
		"16850": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/queries.ts",
			"qualifiedName": "__object.data"
		},
		"16851": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/queries.ts",
			"qualifiedName": "__object"
		},
		"16852": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/queries.ts",
			"qualifiedName": "__object.data"
		},
		"16887": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "useAdminCustomerGroup"
		},
		"16888": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "useAdminCustomerGroup"
		},
		"16889": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "id"
		},
		"16890": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "query"
		},
		"16891": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "options"
		},
		"16892": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "__object"
		},
		"16893": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/index.d.ts",
			"qualifiedName": "customer_group"
		},
		"16894": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16895": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "__object"
		},
		"16896": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/index.d.ts",
			"qualifiedName": "customer_group"
		},
		"16897": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16898": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "__object"
		},
		"16899": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/index.d.ts",
			"qualifiedName": "customer_group"
		},
		"16900": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16901": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "__object"
		},
		"16902": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/index.d.ts",
			"qualifiedName": "customer_group"
		},
		"16903": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16904": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "useAdminCustomerGroups"
		},
		"16905": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "useAdminCustomerGroups"
		},
		"16906": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "query"
		},
		"16907": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "options"
		},
		"16908": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"16909": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"16910": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "__object"
		},
		"16911": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"16912": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"16913": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"16914": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/index.d.ts",
			"qualifiedName": "customer_groups"
		},
		"16915": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16916": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "__object"
		},
		"16917": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"16918": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"16919": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"16920": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/index.d.ts",
			"qualifiedName": "customer_groups"
		},
		"16921": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16922": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "__object"
		},
		"16923": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"16924": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"16925": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"16926": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/index.d.ts",
			"qualifiedName": "customer_groups"
		},
		"16927": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16928": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "__object"
		},
		"16929": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"16930": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"16931": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"16932": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/index.d.ts",
			"qualifiedName": "customer_groups"
		},
		"16933": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16934": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "useAdminCustomerGroupCustomers"
		},
		"16935": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "useAdminCustomerGroupCustomers"
		},
		"16936": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "id"
		},
		"16937": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "query"
		},
		"16938": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "options"
		},
		"16939": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "__object"
		},
		"16940": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/list-customers.d.ts",
			"qualifiedName": "limit"
		},
		"16941": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/list-customers.d.ts",
			"qualifiedName": "offset"
		},
		"16942": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/list-customers.d.ts",
			"qualifiedName": "expand"
		},
		"16943": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/list-customers.d.ts",
			"qualifiedName": "fields"
		},
		"16944": {
			"sourceFileName": "../../../packages/medusa/dist/types/customers.d.ts",
			"qualifiedName": "q"
		},
		"16945": {
			"sourceFileName": "../../../packages/medusa/dist/types/customers.d.ts",
			"qualifiedName": "has_account"
		},
		"16946": {
			"sourceFileName": "../../../packages/medusa/dist/types/customers.d.ts",
			"qualifiedName": "groups"
		},
		"16947": {
			"sourceFileName": "../../../packages/medusa/dist/types/customers.d.ts",
			"qualifiedName": "order"
		},
		"16948": {
			"sourceFileName": "../../../packages/medusa/dist/types/customers.d.ts",
			"qualifiedName": "created_at"
		},
		"16949": {
			"sourceFileName": "../../../packages/medusa/dist/types/customers.d.ts",
			"qualifiedName": "updated_at"
		},
		"16950": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "__object"
		},
		"16951": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"16952": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"16953": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"16954": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/index.d.ts",
			"qualifiedName": "customers"
		},
		"16955": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16956": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "__object"
		},
		"16957": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"16958": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"16959": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"16960": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/index.d.ts",
			"qualifiedName": "customers"
		},
		"16961": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16962": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "__object"
		},
		"16963": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"16964": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"16965": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"16966": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/index.d.ts",
			"qualifiedName": "customers"
		},
		"16967": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16968": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "__object"
		},
		"16969": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"16970": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"16971": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"16972": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/index.d.ts",
			"qualifiedName": "customers"
		},
		"16973": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"16974": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/mutations.ts",
			"qualifiedName": "useAdminCreateCustomerGroup"
		},
		"16975": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/mutations.ts",
			"qualifiedName": "useAdminCreateCustomerGroup"
		},
		"16976": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/mutations.ts",
			"qualifiedName": "options"
		},
		"16977": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/mutations.ts",
			"qualifiedName": "useAdminUpdateCustomerGroup"
		},
		"16978": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/mutations.ts",
			"qualifiedName": "useAdminUpdateCustomerGroup"
		},
		"16979": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/mutations.ts",
			"qualifiedName": "id"
		},
		"16980": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/mutations.ts",
			"qualifiedName": "options"
		},
		"16981": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/mutations.ts",
			"qualifiedName": "useAdminDeleteCustomerGroup"
		},
		"16982": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/mutations.ts",
			"qualifiedName": "useAdminDeleteCustomerGroup"
		},
		"16983": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/mutations.ts",
			"qualifiedName": "id"
		},
		"16984": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/mutations.ts",
			"qualifiedName": "options"
		},
		"16985": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/mutations.ts",
			"qualifiedName": "useAdminAddCustomersToCustomerGroup"
		},
		"16986": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/mutations.ts",
			"qualifiedName": "useAdminAddCustomersToCustomerGroup"
		},
		"16987": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/mutations.ts",
			"qualifiedName": "id"
		},
		"16988": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/mutations.ts",
			"qualifiedName": "options"
		},
		"16989": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/mutations.ts",
			"qualifiedName": "useAdminRemoveCustomersFromCustomerGroup"
		},
		"16990": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/mutations.ts",
			"qualifiedName": "useAdminRemoveCustomersFromCustomerGroup"
		},
		"16991": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/mutations.ts",
			"qualifiedName": "id"
		},
		"16992": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/mutations.ts",
			"qualifiedName": "options"
		},
		"16993": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customers/queries.ts",
			"qualifiedName": "adminCustomerKeys"
		},
		"16994": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customers/queries.ts",
			"qualifiedName": "useAdminCustomers"
		},
		"16995": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customers/queries.ts",
			"qualifiedName": "useAdminCustomers"
		},
		"16996": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customers/queries.ts",
			"qualifiedName": "query"
		},
		"16997": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customers/queries.ts",
			"qualifiedName": "options"
		},
		"16998": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"16999": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"17000": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customers/queries.ts",
			"qualifiedName": "__object"
		},
		"17001": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"17002": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"17003": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"17004": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/index.d.ts",
			"qualifiedName": "customers"
		},
		"17005": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17006": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customers/queries.ts",
			"qualifiedName": "__object"
		},
		"17007": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"17008": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"17009": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"17010": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/index.d.ts",
			"qualifiedName": "customers"
		},
		"17011": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17012": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customers/queries.ts",
			"qualifiedName": "__object"
		},
		"17013": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"17014": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"17015": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"17016": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/index.d.ts",
			"qualifiedName": "customers"
		},
		"17017": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17018": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customers/queries.ts",
			"qualifiedName": "__object"
		},
		"17019": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"17020": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"17021": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"17022": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/index.d.ts",
			"qualifiedName": "customers"
		},
		"17023": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17024": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customers/queries.ts",
			"qualifiedName": "useAdminCustomer"
		},
		"17025": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customers/queries.ts",
			"qualifiedName": "useAdminCustomer"
		},
		"17026": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customers/queries.ts",
			"qualifiedName": "id"
		},
		"17027": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customers/queries.ts",
			"qualifiedName": "options"
		},
		"17028": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customers/queries.ts",
			"qualifiedName": "__object"
		},
		"17029": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/index.d.ts",
			"qualifiedName": "customer"
		},
		"17030": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17031": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customers/queries.ts",
			"qualifiedName": "__object"
		},
		"17032": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/index.d.ts",
			"qualifiedName": "customer"
		},
		"17033": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17034": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customers/queries.ts",
			"qualifiedName": "__object"
		},
		"17035": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/index.d.ts",
			"qualifiedName": "customer"
		},
		"17036": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17037": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customers/queries.ts",
			"qualifiedName": "__object"
		},
		"17038": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/index.d.ts",
			"qualifiedName": "customer"
		},
		"17039": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17040": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customers/mutations.ts",
			"qualifiedName": "useAdminCreateCustomer"
		},
		"17041": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customers/mutations.ts",
			"qualifiedName": "useAdminCreateCustomer"
		},
		"17042": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customers/mutations.ts",
			"qualifiedName": "options"
		},
		"17043": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customers/mutations.ts",
			"qualifiedName": "useAdminUpdateCustomer"
		},
		"17044": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customers/mutations.ts",
			"qualifiedName": "useAdminUpdateCustomer"
		},
		"17045": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customers/mutations.ts",
			"qualifiedName": "id"
		},
		"17046": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customers/mutations.ts",
			"qualifiedName": "options"
		},
		"17047": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "adminDiscountKeys"
		},
		"17048": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "__object"
		},
		"17049": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "__object.detailCondition"
		},
		"17050": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "__object.detailCondition"
		},
		"17051": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "id"
		},
		"17052": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "query"
		},
		"17053": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.all"
		},
		"17054": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.lists"
		},
		"17055": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"17056": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"17057": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.list"
		},
		"17058": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"17059": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"17060": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "query"
		},
		"17061": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"17062": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"17063": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.details"
		},
		"17064": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"17065": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"17066": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.detail"
		},
		"17067": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"17068": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"17069": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "id"
		},
		"17070": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "useAdminDiscounts"
		},
		"17071": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "useAdminDiscounts"
		},
		"17072": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "query"
		},
		"17073": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "options"
		},
		"17074": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"17075": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"17076": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "__object"
		},
		"17077": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"17078": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"17079": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"17080": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
			"qualifiedName": "discounts"
		},
		"17081": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17082": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "__object"
		},
		"17083": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"17084": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"17085": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"17086": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
			"qualifiedName": "discounts"
		},
		"17087": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17088": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "__object"
		},
		"17089": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"17090": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"17091": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"17092": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
			"qualifiedName": "discounts"
		},
		"17093": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17094": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "__object"
		},
		"17095": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"17096": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"17097": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"17098": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
			"qualifiedName": "discounts"
		},
		"17099": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17100": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "useAdminDiscount"
		},
		"17101": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "useAdminDiscount"
		},
		"17102": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "id"
		},
		"17103": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "query"
		},
		"17104": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "options"
		},
		"17105": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "__object"
		},
		"17106": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
			"qualifiedName": "discount"
		},
		"17107": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17108": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "__object"
		},
		"17109": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
			"qualifiedName": "discount"
		},
		"17110": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17111": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "__object"
		},
		"17112": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
			"qualifiedName": "discount"
		},
		"17113": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17114": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "__object"
		},
		"17115": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
			"qualifiedName": "discount"
		},
		"17116": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17117": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "useAdminGetDiscountByCode"
		},
		"17118": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "useAdminGetDiscountByCode"
		},
		"17119": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "code"
		},
		"17120": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "options"
		},
		"17121": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "__object"
		},
		"17122": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
			"qualifiedName": "discount"
		},
		"17123": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17124": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "__object"
		},
		"17125": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
			"qualifiedName": "discount"
		},
		"17126": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17127": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "__object"
		},
		"17128": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
			"qualifiedName": "discount"
		},
		"17129": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17130": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "__object"
		},
		"17131": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
			"qualifiedName": "discount"
		},
		"17132": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17133": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "useAdminGetDiscountCondition"
		},
		"17134": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "useAdminGetDiscountCondition"
		},
		"17135": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "id"
		},
		"17136": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "conditionId"
		},
		"17137": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "query"
		},
		"17138": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "options"
		},
		"17139": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "__object"
		},
		"17140": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
			"qualifiedName": "discount_condition"
		},
		"17141": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17142": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "__object"
		},
		"17143": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
			"qualifiedName": "discount_condition"
		},
		"17144": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17145": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "__object"
		},
		"17146": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
			"qualifiedName": "discount_condition"
		},
		"17147": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17148": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "__object"
		},
		"17149": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
			"qualifiedName": "discount_condition"
		},
		"17150": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17151": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "useAdminAddDiscountConditionResourceBatch"
		},
		"17152": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "useAdminAddDiscountConditionResourceBatch"
		},
		"17153": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "discountId"
		},
		"17154": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "conditionId"
		},
		"17155": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "query"
		},
		"17156": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "options"
		},
		"17157": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "useAdminDeleteDiscountConditionResourceBatch"
		},
		"17158": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "useAdminDeleteDiscountConditionResourceBatch"
		},
		"17159": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "discountId"
		},
		"17160": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "conditionId"
		},
		"17161": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "options"
		},
		"17162": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "useAdminCreateDiscount"
		},
		"17163": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "useAdminCreateDiscount"
		},
		"17164": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "options"
		},
		"17165": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "useAdminUpdateDiscount"
		},
		"17166": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "useAdminUpdateDiscount"
		},
		"17167": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "id"
		},
		"17168": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "options"
		},
		"17169": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "useAdminDeleteDiscount"
		},
		"17170": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "useAdminDeleteDiscount"
		},
		"17171": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "id"
		},
		"17172": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "options"
		},
		"17173": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "useAdminDiscountAddRegion"
		},
		"17174": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "useAdminDiscountAddRegion"
		},
		"17175": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "id"
		},
		"17176": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "options"
		},
		"17177": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "useAdminDiscountRemoveRegion"
		},
		"17178": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "useAdminDiscountRemoveRegion"
		},
		"17179": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "id"
		},
		"17180": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "options"
		},
		"17181": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "useAdminCreateDynamicDiscountCode"
		},
		"17182": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "useAdminCreateDynamicDiscountCode"
		},
		"17183": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "id"
		},
		"17184": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "options"
		},
		"17185": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "useAdminDeleteDynamicDiscountCode"
		},
		"17186": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "useAdminDeleteDynamicDiscountCode"
		},
		"17187": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "id"
		},
		"17188": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "options"
		},
		"17189": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "useAdminDiscountCreateCondition"
		},
		"17190": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "useAdminDiscountCreateCondition"
		},
		"17191": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "discountId"
		},
		"17192": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "options"
		},
		"17193": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "useAdminDiscountUpdateCondition"
		},
		"17194": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "useAdminDiscountUpdateCondition"
		},
		"17195": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "discountId"
		},
		"17196": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "conditionId"
		},
		"17197": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "options"
		},
		"17198": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "useAdminDiscountRemoveCondition"
		},
		"17199": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "useAdminDiscountRemoveCondition"
		},
		"17200": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "discountId"
		},
		"17201": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "options"
		},
		"17202": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/queries.ts",
			"qualifiedName": "adminDraftOrderKeys"
		},
		"17203": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/queries.ts",
			"qualifiedName": "useAdminDraftOrders"
		},
		"17204": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/queries.ts",
			"qualifiedName": "useAdminDraftOrders"
		},
		"17205": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/queries.ts",
			"qualifiedName": "query"
		},
		"17206": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/queries.ts",
			"qualifiedName": "options"
		},
		"17207": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"17208": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"17209": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/queries.ts",
			"qualifiedName": "__object"
		},
		"17210": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"17211": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"17212": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"17213": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/index.d.ts",
			"qualifiedName": "draft_orders"
		},
		"17214": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17215": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/queries.ts",
			"qualifiedName": "__object"
		},
		"17216": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"17217": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"17218": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"17219": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/index.d.ts",
			"qualifiedName": "draft_orders"
		},
		"17220": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17221": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/queries.ts",
			"qualifiedName": "__object"
		},
		"17222": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"17223": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"17224": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"17225": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/index.d.ts",
			"qualifiedName": "draft_orders"
		},
		"17226": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17227": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/queries.ts",
			"qualifiedName": "__object"
		},
		"17228": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"17229": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"17230": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"17231": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/index.d.ts",
			"qualifiedName": "draft_orders"
		},
		"17232": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17233": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/queries.ts",
			"qualifiedName": "useAdminDraftOrder"
		},
		"17234": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/queries.ts",
			"qualifiedName": "useAdminDraftOrder"
		},
		"17235": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/queries.ts",
			"qualifiedName": "id"
		},
		"17236": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/queries.ts",
			"qualifiedName": "options"
		},
		"17237": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/queries.ts",
			"qualifiedName": "__object"
		},
		"17238": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/index.d.ts",
			"qualifiedName": "draft_order"
		},
		"17239": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17240": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/queries.ts",
			"qualifiedName": "__object"
		},
		"17241": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/index.d.ts",
			"qualifiedName": "draft_order"
		},
		"17242": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17243": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/queries.ts",
			"qualifiedName": "__object"
		},
		"17244": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/index.d.ts",
			"qualifiedName": "draft_order"
		},
		"17245": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17246": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/queries.ts",
			"qualifiedName": "__object"
		},
		"17247": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/index.d.ts",
			"qualifiedName": "draft_order"
		},
		"17248": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17249": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "useAdminCreateDraftOrder"
		},
		"17250": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "useAdminCreateDraftOrder"
		},
		"17251": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "options"
		},
		"17252": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "useAdminUpdateDraftOrder"
		},
		"17253": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "useAdminUpdateDraftOrder"
		},
		"17254": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "id"
		},
		"17255": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "options"
		},
		"17256": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "useAdminDeleteDraftOrder"
		},
		"17257": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "useAdminDeleteDraftOrder"
		},
		"17258": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "id"
		},
		"17259": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "options"
		},
		"17260": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "useAdminDraftOrderRegisterPayment"
		},
		"17261": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "useAdminDraftOrderRegisterPayment"
		},
		"17262": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "id"
		},
		"17263": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "options"
		},
		"17264": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "useAdminDraftOrderAddLineItem"
		},
		"17265": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "useAdminDraftOrderAddLineItem"
		},
		"17266": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "id"
		},
		"17267": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "options"
		},
		"17268": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "useAdminDraftOrderRemoveLineItem"
		},
		"17269": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "useAdminDraftOrderRemoveLineItem"
		},
		"17270": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "id"
		},
		"17271": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "options"
		},
		"17272": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "AdminDraftOrderUpdateLineItemReq"
		},
		"17273": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "__type"
		},
		"17274": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "__type.item_id"
		},
		"17275": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "useAdminDraftOrderUpdateLineItem"
		},
		"17276": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "useAdminDraftOrderUpdateLineItem"
		},
		"17277": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "id"
		},
		"17278": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "options"
		},
		"17279": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/queries.ts",
			"qualifiedName": "adminGiftCardKeys"
		},
		"17280": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/queries.ts",
			"qualifiedName": "useAdminGiftCards"
		},
		"17281": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/queries.ts",
			"qualifiedName": "useAdminGiftCards"
		},
		"17282": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/queries.ts",
			"qualifiedName": "query"
		},
		"17283": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/queries.ts",
			"qualifiedName": "options"
		},
		"17284": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"17285": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"17286": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/queries.ts",
			"qualifiedName": "__object"
		},
		"17287": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"17288": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"17289": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"17290": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/gift-cards/index.d.ts",
			"qualifiedName": "gift_cards"
		},
		"17291": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17292": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/queries.ts",
			"qualifiedName": "__object"
		},
		"17293": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"17294": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"17295": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"17296": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/gift-cards/index.d.ts",
			"qualifiedName": "gift_cards"
		},
		"17297": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17298": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/queries.ts",
			"qualifiedName": "__object"
		},
		"17299": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"17300": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"17301": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"17302": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/gift-cards/index.d.ts",
			"qualifiedName": "gift_cards"
		},
		"17303": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17304": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/queries.ts",
			"qualifiedName": "__object"
		},
		"17305": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"17306": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"17307": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"17308": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/gift-cards/index.d.ts",
			"qualifiedName": "gift_cards"
		},
		"17309": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17310": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/queries.ts",
			"qualifiedName": "useAdminGiftCard"
		},
		"17311": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/queries.ts",
			"qualifiedName": "useAdminGiftCard"
		},
		"17312": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/queries.ts",
			"qualifiedName": "id"
		},
		"17313": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/queries.ts",
			"qualifiedName": "options"
		},
		"17314": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/queries.ts",
			"qualifiedName": "__object"
		},
		"17315": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/gift-cards/index.d.ts",
			"qualifiedName": "gift_card"
		},
		"17316": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17317": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/queries.ts",
			"qualifiedName": "__object"
		},
		"17318": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/gift-cards/index.d.ts",
			"qualifiedName": "gift_card"
		},
		"17319": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17320": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/queries.ts",
			"qualifiedName": "__object"
		},
		"17321": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/gift-cards/index.d.ts",
			"qualifiedName": "gift_card"
		},
		"17322": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17323": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/queries.ts",
			"qualifiedName": "__object"
		},
		"17324": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/gift-cards/index.d.ts",
			"qualifiedName": "gift_card"
		},
		"17325": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17326": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/mutations.ts",
			"qualifiedName": "useAdminCreateGiftCard"
		},
		"17327": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/mutations.ts",
			"qualifiedName": "useAdminCreateGiftCard"
		},
		"17328": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/mutations.ts",
			"qualifiedName": "options"
		},
		"17329": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/mutations.ts",
			"qualifiedName": "useAdminUpdateGiftCard"
		},
		"17330": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/mutations.ts",
			"qualifiedName": "useAdminUpdateGiftCard"
		},
		"17331": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/mutations.ts",
			"qualifiedName": "id"
		},
		"17332": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/mutations.ts",
			"qualifiedName": "options"
		},
		"17333": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/mutations.ts",
			"qualifiedName": "useAdminDeleteGiftCard"
		},
		"17334": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/mutations.ts",
			"qualifiedName": "useAdminDeleteGiftCard"
		},
		"17335": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/mutations.ts",
			"qualifiedName": "id"
		},
		"17336": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/mutations.ts",
			"qualifiedName": "options"
		},
		"17337": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "adminInventoryItemsKeys"
		},
		"17338": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "useAdminInventoryItems"
		},
		"17339": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "useAdminInventoryItems"
		},
		"17340": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "query"
		},
		"17341": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "options"
		},
		"17342": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"17343": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"17344": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "__object"
		},
		"17345": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"17346": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"17347": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"17348": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
			"qualifiedName": "inventory_items"
		},
		"17349": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17350": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "__object"
		},
		"17351": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"17352": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"17353": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"17354": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
			"qualifiedName": "inventory_items"
		},
		"17355": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17356": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "__object"
		},
		"17357": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"17358": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"17359": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"17360": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
			"qualifiedName": "inventory_items"
		},
		"17361": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17362": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "__object"
		},
		"17363": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"17364": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"17365": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"17366": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
			"qualifiedName": "inventory_items"
		},
		"17367": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17368": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "useAdminInventoryItem"
		},
		"17369": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "useAdminInventoryItem"
		},
		"17370": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "inventoryItemId"
		},
		"17371": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "query"
		},
		"17372": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "options"
		},
		"17373": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "__object"
		},
		"17374": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
			"qualifiedName": "inventory_item"
		},
		"17375": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17376": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "__object"
		},
		"17377": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
			"qualifiedName": "inventory_item"
		},
		"17378": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17379": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "__object"
		},
		"17380": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
			"qualifiedName": "inventory_item"
		},
		"17381": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17382": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "__object"
		},
		"17383": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
			"qualifiedName": "inventory_item"
		},
		"17384": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17385": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "useAdminInventoryItemLocationLevels"
		},
		"17386": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "useAdminInventoryItemLocationLevels"
		},
		"17387": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "inventoryItemId"
		},
		"17388": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "query"
		},
		"17389": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "options"
		},
		"17390": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "__object"
		},
		"17391": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
			"qualifiedName": "inventory_item"
		},
		"17392": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
			"qualifiedName": "__type"
		},
		"17393": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
			"qualifiedName": "__type.id"
		},
		"17394": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
			"qualifiedName": "__type.location_levels"
		},
		"17395": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17396": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "__object"
		},
		"17397": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
			"qualifiedName": "inventory_item"
		},
		"17398": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
			"qualifiedName": "__type"
		},
		"17399": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
			"qualifiedName": "__type.id"
		},
		"17400": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
			"qualifiedName": "__type.location_levels"
		},
		"17401": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17402": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "__object"
		},
		"17403": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
			"qualifiedName": "inventory_item"
		},
		"17404": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
			"qualifiedName": "__type"
		},
		"17405": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
			"qualifiedName": "__type.id"
		},
		"17406": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
			"qualifiedName": "__type.location_levels"
		},
		"17407": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17408": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "__object"
		},
		"17409": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
			"qualifiedName": "inventory_item"
		},
		"17410": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
			"qualifiedName": "__type"
		},
		"17411": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
			"qualifiedName": "__type.id"
		},
		"17412": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
			"qualifiedName": "__type.location_levels"
		},
		"17413": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17414": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "useAdminCreateInventoryItem"
		},
		"17415": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "useAdminCreateInventoryItem"
		},
		"17416": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "options"
		},
		"17417": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "useAdminUpdateInventoryItem"
		},
		"17418": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "useAdminUpdateInventoryItem"
		},
		"17419": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "inventoryItemId"
		},
		"17420": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "options"
		},
		"17421": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "useAdminDeleteInventoryItem"
		},
		"17422": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "useAdminDeleteInventoryItem"
		},
		"17423": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "inventoryItemId"
		},
		"17424": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "options"
		},
		"17425": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "AdminUpdateLocationLevelReq"
		},
		"17426": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "__type"
		},
		"17427": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "__type.stockLocationId"
		},
		"17428": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "useAdminUpdateLocationLevel"
		},
		"17429": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "useAdminUpdateLocationLevel"
		},
		"17430": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "inventoryItemId"
		},
		"17431": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "options"
		},
		"17432": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "useAdminDeleteLocationLevel"
		},
		"17433": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "useAdminDeleteLocationLevel"
		},
		"17434": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "inventoryItemId"
		},
		"17435": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "options"
		},
		"17436": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "useAdminCreateLocationLevel"
		},
		"17437": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "useAdminCreateLocationLevel"
		},
		"17438": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "inventoryItemId"
		},
		"17439": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "options"
		},
		"17440": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/invites/queries.ts",
			"qualifiedName": "adminInviteKeys"
		},
		"17441": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/invites/queries.ts",
			"qualifiedName": "useAdminInvites"
		},
		"17442": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/invites/queries.ts",
			"qualifiedName": "useAdminInvites"
		},
		"17443": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/invites/queries.ts",
			"qualifiedName": "options"
		},
		"17444": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/invites/queries.ts",
			"qualifiedName": "__object"
		},
		"17445": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/invites/index.d.ts",
			"qualifiedName": "invites"
		},
		"17446": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17447": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/invites/queries.ts",
			"qualifiedName": "__object"
		},
		"17448": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/invites/index.d.ts",
			"qualifiedName": "invites"
		},
		"17449": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17450": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/invites/queries.ts",
			"qualifiedName": "__object"
		},
		"17451": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/invites/index.d.ts",
			"qualifiedName": "invites"
		},
		"17452": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17453": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/invites/queries.ts",
			"qualifiedName": "__object"
		},
		"17454": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/invites/index.d.ts",
			"qualifiedName": "invites"
		},
		"17455": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17456": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/invites/mutations.ts",
			"qualifiedName": "useAdminAcceptInvite"
		},
		"17457": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/invites/mutations.ts",
			"qualifiedName": "useAdminAcceptInvite"
		},
		"17458": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/invites/mutations.ts",
			"qualifiedName": "options"
		},
		"17459": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/invites/mutations.ts",
			"qualifiedName": "useAdminResendInvite"
		},
		"17460": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/invites/mutations.ts",
			"qualifiedName": "useAdminResendInvite"
		},
		"17461": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/invites/mutations.ts",
			"qualifiedName": "id"
		},
		"17462": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/invites/mutations.ts",
			"qualifiedName": "options"
		},
		"17463": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/invites/mutations.ts",
			"qualifiedName": "useAdminCreateInvite"
		},
		"17464": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/invites/mutations.ts",
			"qualifiedName": "useAdminCreateInvite"
		},
		"17465": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/invites/mutations.ts",
			"qualifiedName": "options"
		},
		"17466": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/invites/mutations.ts",
			"qualifiedName": "useAdminDeleteInvite"
		},
		"17467": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/invites/mutations.ts",
			"qualifiedName": "useAdminDeleteInvite"
		},
		"17468": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/invites/mutations.ts",
			"qualifiedName": "id"
		},
		"17469": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/invites/mutations.ts",
			"qualifiedName": "options"
		},
		"17470": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/queries.ts",
			"qualifiedName": "adminNoteKeys"
		},
		"17471": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/queries.ts",
			"qualifiedName": "useAdminNotes"
		},
		"17472": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/queries.ts",
			"qualifiedName": "useAdminNotes"
		},
		"17473": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/queries.ts",
			"qualifiedName": "query"
		},
		"17474": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/queries.ts",
			"qualifiedName": "options"
		},
		"17475": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"17476": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"17477": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/queries.ts",
			"qualifiedName": "__object"
		},
		"17478": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"17479": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"17480": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"17481": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notes/index.d.ts",
			"qualifiedName": "notes"
		},
		"17482": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17483": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/queries.ts",
			"qualifiedName": "__object"
		},
		"17484": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"17485": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"17486": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"17487": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notes/index.d.ts",
			"qualifiedName": "notes"
		},
		"17488": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17489": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/queries.ts",
			"qualifiedName": "__object"
		},
		"17490": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"17491": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"17492": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"17493": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notes/index.d.ts",
			"qualifiedName": "notes"
		},
		"17494": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17495": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/queries.ts",
			"qualifiedName": "__object"
		},
		"17496": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"17497": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"17498": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"17499": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notes/index.d.ts",
			"qualifiedName": "notes"
		},
		"17500": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17501": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/queries.ts",
			"qualifiedName": "useAdminNote"
		},
		"17502": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/queries.ts",
			"qualifiedName": "useAdminNote"
		},
		"17503": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/queries.ts",
			"qualifiedName": "id"
		},
		"17504": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/queries.ts",
			"qualifiedName": "options"
		},
		"17505": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/queries.ts",
			"qualifiedName": "__object"
		},
		"17506": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notes/index.d.ts",
			"qualifiedName": "note"
		},
		"17507": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17508": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/queries.ts",
			"qualifiedName": "__object"
		},
		"17509": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notes/index.d.ts",
			"qualifiedName": "note"
		},
		"17510": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17511": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/queries.ts",
			"qualifiedName": "__object"
		},
		"17512": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notes/index.d.ts",
			"qualifiedName": "note"
		},
		"17513": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17514": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/queries.ts",
			"qualifiedName": "__object"
		},
		"17515": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notes/index.d.ts",
			"qualifiedName": "note"
		},
		"17516": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17517": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/mutations.ts",
			"qualifiedName": "useAdminCreateNote"
		},
		"17518": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/mutations.ts",
			"qualifiedName": "useAdminCreateNote"
		},
		"17519": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/mutations.ts",
			"qualifiedName": "options"
		},
		"17520": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/mutations.ts",
			"qualifiedName": "useAdminUpdateNote"
		},
		"17521": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/mutations.ts",
			"qualifiedName": "useAdminUpdateNote"
		},
		"17522": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/mutations.ts",
			"qualifiedName": "id"
		},
		"17523": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/mutations.ts",
			"qualifiedName": "options"
		},
		"17524": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/mutations.ts",
			"qualifiedName": "useAdminDeleteNote"
		},
		"17525": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/mutations.ts",
			"qualifiedName": "useAdminDeleteNote"
		},
		"17526": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/mutations.ts",
			"qualifiedName": "id"
		},
		"17527": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/mutations.ts",
			"qualifiedName": "options"
		},
		"17528": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notifications/queries.ts",
			"qualifiedName": "adminNotificationKeys"
		},
		"17529": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notifications/queries.ts",
			"qualifiedName": "useAdminNotifications"
		},
		"17530": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notifications/queries.ts",
			"qualifiedName": "useAdminNotifications"
		},
		"17531": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notifications/queries.ts",
			"qualifiedName": "query"
		},
		"17532": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notifications/queries.ts",
			"qualifiedName": "options"
		},
		"17533": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"17534": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"17535": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notifications/queries.ts",
			"qualifiedName": "__object"
		},
		"17536": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "limit"
		},
		"17537": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "offset"
		},
		"17538": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "count"
		},
		"17539": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notifications/index.d.ts",
			"qualifiedName": "notifications"
		},
		"17540": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17541": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notifications/queries.ts",
			"qualifiedName": "__object"
		},
		"17542": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "limit"
		},
		"17543": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "offset"
		},
		"17544": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "count"
		},
		"17545": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notifications/index.d.ts",
			"qualifiedName": "notifications"
		},
		"17546": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17547": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notifications/queries.ts",
			"qualifiedName": "__object"
		},
		"17548": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "limit"
		},
		"17549": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "offset"
		},
		"17550": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "count"
		},
		"17551": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notifications/index.d.ts",
			"qualifiedName": "notifications"
		},
		"17552": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17553": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notifications/queries.ts",
			"qualifiedName": "__object"
		},
		"17554": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "limit"
		},
		"17555": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "offset"
		},
		"17556": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "count"
		},
		"17557": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notifications/index.d.ts",
			"qualifiedName": "notifications"
		},
		"17558": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17559": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notifications/mutations.ts",
			"qualifiedName": "useAdminResendNotification"
		},
		"17560": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notifications/mutations.ts",
			"qualifiedName": "useAdminResendNotification"
		},
		"17561": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notifications/mutations.ts",
			"qualifiedName": "id"
		},
		"17562": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notifications/mutations.ts",
			"qualifiedName": "options"
		},
		"17563": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/queries.ts",
			"qualifiedName": "adminOrderEditsKeys"
		},
		"17564": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/queries.ts",
			"qualifiedName": "useAdminOrderEdit"
		},
		"17565": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/queries.ts",
			"qualifiedName": "useAdminOrderEdit"
		},
		"17566": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/queries.ts",
			"qualifiedName": "id"
		},
		"17567": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/queries.ts",
			"qualifiedName": "query"
		},
		"17568": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/queries.ts",
			"qualifiedName": "options"
		},
		"17569": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/queries.ts",
			"qualifiedName": "__object"
		},
		"17570": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
			"qualifiedName": "order_edit"
		},
		"17571": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17572": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/queries.ts",
			"qualifiedName": "__object"
		},
		"17573": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
			"qualifiedName": "order_edit"
		},
		"17574": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17575": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/queries.ts",
			"qualifiedName": "__object"
		},
		"17576": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
			"qualifiedName": "order_edit"
		},
		"17577": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17578": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/queries.ts",
			"qualifiedName": "__object"
		},
		"17579": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
			"qualifiedName": "order_edit"
		},
		"17580": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17581": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/queries.ts",
			"qualifiedName": "useAdminOrderEdits"
		},
		"17582": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/queries.ts",
			"qualifiedName": "useAdminOrderEdits"
		},
		"17583": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/queries.ts",
			"qualifiedName": "query"
		},
		"17584": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/queries.ts",
			"qualifiedName": "options"
		},
		"17585": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"17586": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"17587": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/queries.ts",
			"qualifiedName": "__object"
		},
		"17588": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"17589": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"17590": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"17591": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
			"qualifiedName": "order_edits"
		},
		"17592": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17593": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/queries.ts",
			"qualifiedName": "__object"
		},
		"17594": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"17595": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"17596": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"17597": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
			"qualifiedName": "order_edits"
		},
		"17598": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17599": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/queries.ts",
			"qualifiedName": "__object"
		},
		"17600": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"17601": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"17602": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"17603": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
			"qualifiedName": "order_edits"
		},
		"17604": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17605": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/queries.ts",
			"qualifiedName": "__object"
		},
		"17606": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"17607": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"17608": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"17609": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
			"qualifiedName": "order_edits"
		},
		"17610": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17611": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "useAdminCreateOrderEdit"
		},
		"17612": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "useAdminCreateOrderEdit"
		},
		"17613": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "options"
		},
		"17614": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "useAdminDeleteOrderEdit"
		},
		"17615": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "useAdminDeleteOrderEdit"
		},
		"17616": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "id"
		},
		"17617": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "options"
		},
		"17618": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "useAdminDeleteOrderEditItemChange"
		},
		"17619": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "useAdminDeleteOrderEditItemChange"
		},
		"17620": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "orderEditId"
		},
		"17621": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "itemChangeId"
		},
		"17622": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "options"
		},
		"17623": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "useAdminOrderEditUpdateLineItem"
		},
		"17624": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "useAdminOrderEditUpdateLineItem"
		},
		"17625": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "orderEditId"
		},
		"17626": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "itemId"
		},
		"17627": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "options"
		},
		"17628": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "useAdminOrderEditDeleteLineItem"
		},
		"17629": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "useAdminOrderEditDeleteLineItem"
		},
		"17630": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "orderEditId"
		},
		"17631": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "itemId"
		},
		"17632": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "options"
		},
		"17633": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "useAdminUpdateOrderEdit"
		},
		"17634": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "useAdminUpdateOrderEdit"
		},
		"17635": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "id"
		},
		"17636": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "options"
		},
		"17637": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "useAdminOrderEditAddLineItem"
		},
		"17638": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "useAdminOrderEditAddLineItem"
		},
		"17639": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "id"
		},
		"17640": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "options"
		},
		"17641": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "useAdminRequestOrderEditConfirmation"
		},
		"17642": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "useAdminRequestOrderEditConfirmation"
		},
		"17643": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "id"
		},
		"17644": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "options"
		},
		"17645": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "useAdminCancelOrderEdit"
		},
		"17646": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "useAdminCancelOrderEdit"
		},
		"17647": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "id"
		},
		"17648": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "options"
		},
		"17649": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "useAdminConfirmOrderEdit"
		},
		"17650": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "useAdminConfirmOrderEdit"
		},
		"17651": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "id"
		},
		"17652": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "options"
		},
		"17653": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/queries.ts",
			"qualifiedName": "adminOrderKeys"
		},
		"17654": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/queries.ts",
			"qualifiedName": "__object"
		},
		"17655": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/queries.ts",
			"qualifiedName": "__object.detailOrder"
		},
		"17656": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/queries.ts",
			"qualifiedName": "__object.detailOrder"
		},
		"17657": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/queries.ts",
			"qualifiedName": "id"
		},
		"17658": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/queries.ts",
			"qualifiedName": "query"
		},
		"17659": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/queries.ts",
			"qualifiedName": "__object"
		},
		"17660": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "FindParams.expand"
		},
		"17661": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "FindParams.fields"
		},
		"17662": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.all"
		},
		"17663": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.lists"
		},
		"17664": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"17665": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"17666": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.list"
		},
		"17667": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"17668": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"17669": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "query"
		},
		"17670": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"17671": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"17672": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.details"
		},
		"17673": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"17674": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"17675": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.detail"
		},
		"17676": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"17677": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"17678": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "id"
		},
		"17679": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/queries.ts",
			"qualifiedName": "useAdminOrders"
		},
		"17680": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/queries.ts",
			"qualifiedName": "useAdminOrders"
		},
		"17681": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/queries.ts",
			"qualifiedName": "query"
		},
		"17682": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/queries.ts",
			"qualifiedName": "options"
		},
		"17683": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"17684": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"17685": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/queries.ts",
			"qualifiedName": "__object"
		},
		"17686": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"17687": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"17688": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"17689": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
			"qualifiedName": "orders"
		},
		"17690": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17691": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/queries.ts",
			"qualifiedName": "__object"
		},
		"17692": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"17693": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"17694": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"17695": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
			"qualifiedName": "orders"
		},
		"17696": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17697": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/queries.ts",
			"qualifiedName": "__object"
		},
		"17698": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"17699": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"17700": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"17701": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
			"qualifiedName": "orders"
		},
		"17702": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17703": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/queries.ts",
			"qualifiedName": "__object"
		},
		"17704": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"17705": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"17706": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"17707": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
			"qualifiedName": "orders"
		},
		"17708": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17709": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/queries.ts",
			"qualifiedName": "useAdminOrder"
		},
		"17710": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/queries.ts",
			"qualifiedName": "useAdminOrder"
		},
		"17711": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/queries.ts",
			"qualifiedName": "id"
		},
		"17712": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/queries.ts",
			"qualifiedName": "query"
		},
		"17713": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/queries.ts",
			"qualifiedName": "options"
		},
		"17714": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/queries.ts",
			"qualifiedName": "__object"
		},
		"17715": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "FindParams.expand"
		},
		"17716": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "FindParams.fields"
		},
		"17717": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/queries.ts",
			"qualifiedName": "__object"
		},
		"17718": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
			"qualifiedName": "order"
		},
		"17719": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17720": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/queries.ts",
			"qualifiedName": "__object"
		},
		"17721": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
			"qualifiedName": "order"
		},
		"17722": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17723": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/queries.ts",
			"qualifiedName": "__object"
		},
		"17724": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
			"qualifiedName": "order"
		},
		"17725": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17726": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/queries.ts",
			"qualifiedName": "__object"
		},
		"17727": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
			"qualifiedName": "order"
		},
		"17728": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17729": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "useAdminUpdateOrder"
		},
		"17730": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "useAdminUpdateOrder"
		},
		"17731": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "id"
		},
		"17732": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "options"
		},
		"17733": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "useAdminCancelOrder"
		},
		"17734": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "useAdminCancelOrder"
		},
		"17735": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "id"
		},
		"17736": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "options"
		},
		"17737": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "useAdminCompleteOrder"
		},
		"17738": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "useAdminCompleteOrder"
		},
		"17739": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "id"
		},
		"17740": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "options"
		},
		"17741": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "useAdminCapturePayment"
		},
		"17742": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "useAdminCapturePayment"
		},
		"17743": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "id"
		},
		"17744": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "options"
		},
		"17745": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "useAdminRefundPayment"
		},
		"17746": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "useAdminRefundPayment"
		},
		"17747": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "id"
		},
		"17748": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "options"
		},
		"17749": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "useAdminCreateFulfillment"
		},
		"17750": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "useAdminCreateFulfillment"
		},
		"17751": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "orderId"
		},
		"17752": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "options"
		},
		"17753": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "useAdminCancelFulfillment"
		},
		"17754": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "useAdminCancelFulfillment"
		},
		"17755": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "orderId"
		},
		"17756": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "options"
		},
		"17757": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "useAdminCreateShipment"
		},
		"17758": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "useAdminCreateShipment"
		},
		"17759": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "orderId"
		},
		"17760": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "options"
		},
		"17761": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "useAdminRequestReturn"
		},
		"17762": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "useAdminRequestReturn"
		},
		"17763": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "orderId"
		},
		"17764": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "options"
		},
		"17765": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "useAdminAddShippingMethod"
		},
		"17766": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "useAdminAddShippingMethod"
		},
		"17767": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "orderId"
		},
		"17768": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "options"
		},
		"17769": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "useAdminArchiveOrder"
		},
		"17770": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "useAdminArchiveOrder"
		},
		"17771": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "id"
		},
		"17772": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "options"
		},
		"17773": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payment-collections/queries.ts",
			"qualifiedName": "adminPaymentCollectionQueryKeys"
		},
		"17774": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payment-collections/queries.ts",
			"qualifiedName": "useAdminPaymentCollection"
		},
		"17775": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payment-collections/queries.ts",
			"qualifiedName": "useAdminPaymentCollection"
		},
		"17776": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payment-collections/queries.ts",
			"qualifiedName": "id"
		},
		"17777": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payment-collections/queries.ts",
			"qualifiedName": "options"
		},
		"17778": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payment-collections/queries.ts",
			"qualifiedName": "__object"
		},
		"17779": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/payment-collections/index.d.ts",
			"qualifiedName": "payment_collection"
		},
		"17780": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17781": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payment-collections/queries.ts",
			"qualifiedName": "__object"
		},
		"17782": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/payment-collections/index.d.ts",
			"qualifiedName": "payment_collection"
		},
		"17783": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17784": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payment-collections/queries.ts",
			"qualifiedName": "__object"
		},
		"17785": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/payment-collections/index.d.ts",
			"qualifiedName": "payment_collection"
		},
		"17786": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17787": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payment-collections/queries.ts",
			"qualifiedName": "__object"
		},
		"17788": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/payment-collections/index.d.ts",
			"qualifiedName": "payment_collection"
		},
		"17789": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17790": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payment-collections/mutations.ts",
			"qualifiedName": "useAdminDeletePaymentCollection"
		},
		"17791": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payment-collections/mutations.ts",
			"qualifiedName": "useAdminDeletePaymentCollection"
		},
		"17792": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payment-collections/mutations.ts",
			"qualifiedName": "id"
		},
		"17793": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payment-collections/mutations.ts",
			"qualifiedName": "options"
		},
		"17794": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payment-collections/mutations.ts",
			"qualifiedName": "useAdminUpdatePaymentCollection"
		},
		"17795": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payment-collections/mutations.ts",
			"qualifiedName": "useAdminUpdatePaymentCollection"
		},
		"17796": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payment-collections/mutations.ts",
			"qualifiedName": "id"
		},
		"17797": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payment-collections/mutations.ts",
			"qualifiedName": "options"
		},
		"17798": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payment-collections/mutations.ts",
			"qualifiedName": "useAdminMarkPaymentCollectionAsAuthorized"
		},
		"17799": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payment-collections/mutations.ts",
			"qualifiedName": "useAdminMarkPaymentCollectionAsAuthorized"
		},
		"17800": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payment-collections/mutations.ts",
			"qualifiedName": "id"
		},
		"17801": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payment-collections/mutations.ts",
			"qualifiedName": "options"
		},
		"17802": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payments/queries.ts",
			"qualifiedName": "adminPaymentQueryKeys"
		},
		"17803": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payments/queries.ts",
			"qualifiedName": "useAdminPayment"
		},
		"17804": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payments/queries.ts",
			"qualifiedName": "useAdminPayment"
		},
		"17805": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payments/queries.ts",
			"qualifiedName": "id"
		},
		"17806": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payments/queries.ts",
			"qualifiedName": "options"
		},
		"17807": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payments/queries.ts",
			"qualifiedName": "__object"
		},
		"17808": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/payments/index.d.ts",
			"qualifiedName": "payment"
		},
		"17809": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17810": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payments/queries.ts",
			"qualifiedName": "__object"
		},
		"17811": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/payments/index.d.ts",
			"qualifiedName": "payment"
		},
		"17812": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17813": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payments/queries.ts",
			"qualifiedName": "__object"
		},
		"17814": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/payments/index.d.ts",
			"qualifiedName": "payment"
		},
		"17815": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17816": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payments/queries.ts",
			"qualifiedName": "__object"
		},
		"17817": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/payments/index.d.ts",
			"qualifiedName": "payment"
		},
		"17818": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17819": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payments/mutations.ts",
			"qualifiedName": "useAdminPaymentsCapturePayment"
		},
		"17820": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payments/mutations.ts",
			"qualifiedName": "useAdminPaymentsCapturePayment"
		},
		"17821": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payments/mutations.ts",
			"qualifiedName": "id"
		},
		"17822": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payments/mutations.ts",
			"qualifiedName": "options"
		},
		"17823": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payments/mutations.ts",
			"qualifiedName": "useAdminPaymentsRefundPayment"
		},
		"17824": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payments/mutations.ts",
			"qualifiedName": "useAdminPaymentsRefundPayment"
		},
		"17825": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payments/mutations.ts",
			"qualifiedName": "id"
		},
		"17826": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payments/mutations.ts",
			"qualifiedName": "options"
		},
		"17827": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "adminPriceListKeys"
		},
		"17828": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "__object"
		},
		"17829": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "__object.detailProducts"
		},
		"17830": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "__object.detailProducts"
		},
		"17831": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "id"
		},
		"17832": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "query"
		},
		"17833": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.all"
		},
		"17834": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.lists"
		},
		"17835": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"17836": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"17837": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.list"
		},
		"17838": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"17839": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"17840": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "query"
		},
		"17841": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"17842": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"17843": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.details"
		},
		"17844": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"17845": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"17846": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.detail"
		},
		"17847": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"17848": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"17849": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "id"
		},
		"17850": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "useAdminPriceLists"
		},
		"17851": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "useAdminPriceLists"
		},
		"17852": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "query"
		},
		"17853": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "options"
		},
		"17854": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"17855": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"17856": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "__object"
		},
		"17857": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"17858": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"17859": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"17860": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/index.d.ts",
			"qualifiedName": "price_lists"
		},
		"17861": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17862": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "__object"
		},
		"17863": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"17864": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"17865": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"17866": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/index.d.ts",
			"qualifiedName": "price_lists"
		},
		"17867": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17868": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "__object"
		},
		"17869": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"17870": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"17871": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"17872": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/index.d.ts",
			"qualifiedName": "price_lists"
		},
		"17873": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17874": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "__object"
		},
		"17875": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"17876": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"17877": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"17878": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/index.d.ts",
			"qualifiedName": "price_lists"
		},
		"17879": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17880": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "useAdminPriceListProducts"
		},
		"17881": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "useAdminPriceListProducts"
		},
		"17882": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "id"
		},
		"17883": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "query"
		},
		"17884": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "options"
		},
		"17885": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "__object"
		},
		"17886": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"17887": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"17888": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"17889": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "products"
		},
		"17890": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17891": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "__object"
		},
		"17892": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"17893": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"17894": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"17895": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "products"
		},
		"17896": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17897": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "__object"
		},
		"17898": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"17899": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"17900": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"17901": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "products"
		},
		"17902": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17903": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "__object"
		},
		"17904": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"17905": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"17906": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"17907": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "products"
		},
		"17908": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17909": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "useAdminPriceList"
		},
		"17910": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "useAdminPriceList"
		},
		"17911": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "id"
		},
		"17912": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "options"
		},
		"17913": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "__object"
		},
		"17914": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/index.d.ts",
			"qualifiedName": "price_list"
		},
		"17915": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17916": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "__object"
		},
		"17917": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/index.d.ts",
			"qualifiedName": "price_list"
		},
		"17918": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17919": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "__object"
		},
		"17920": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/index.d.ts",
			"qualifiedName": "price_list"
		},
		"17921": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17922": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "__object"
		},
		"17923": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/index.d.ts",
			"qualifiedName": "price_list"
		},
		"17924": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17925": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "useAdminCreatePriceList"
		},
		"17926": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "useAdminCreatePriceList"
		},
		"17927": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "options"
		},
		"17928": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "useAdminUpdatePriceList"
		},
		"17929": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "useAdminUpdatePriceList"
		},
		"17930": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "id"
		},
		"17931": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "options"
		},
		"17932": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "useAdminDeletePriceList"
		},
		"17933": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "useAdminDeletePriceList"
		},
		"17934": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "id"
		},
		"17935": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "options"
		},
		"17936": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "useAdminCreatePriceListPrices"
		},
		"17937": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "useAdminCreatePriceListPrices"
		},
		"17938": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "id"
		},
		"17939": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "options"
		},
		"17940": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "useAdminDeletePriceListPrices"
		},
		"17941": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "useAdminDeletePriceListPrices"
		},
		"17942": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "id"
		},
		"17943": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "options"
		},
		"17944": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "useAdminDeletePriceListProductsPrices"
		},
		"17945": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "useAdminDeletePriceListProductsPrices"
		},
		"17946": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "id"
		},
		"17947": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "options"
		},
		"17948": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "useAdminDeletePriceListProductPrices"
		},
		"17949": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "useAdminDeletePriceListProductPrices"
		},
		"17950": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "id"
		},
		"17951": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "productId"
		},
		"17952": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "options"
		},
		"17953": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "useAdminDeletePriceListVariantPrices"
		},
		"17954": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "useAdminDeletePriceListVariantPrices"
		},
		"17955": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "id"
		},
		"17956": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "variantId"
		},
		"17957": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "options"
		},
		"17958": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/queries.ts",
			"qualifiedName": "adminProductCategoryKeys"
		},
		"17959": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/queries.ts",
			"qualifiedName": "useAdminProductCategories"
		},
		"17960": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/queries.ts",
			"qualifiedName": "useAdminProductCategories"
		},
		"17961": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/queries.ts",
			"qualifiedName": "query"
		},
		"17962": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/queries.ts",
			"qualifiedName": "options"
		},
		"17963": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"17964": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"17965": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/queries.ts",
			"qualifiedName": "__object"
		},
		"17966": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"17967": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"17968": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"17969": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/index.d.ts",
			"qualifiedName": "product_categories"
		},
		"17970": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17971": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/queries.ts",
			"qualifiedName": "__object"
		},
		"17972": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"17973": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"17974": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"17975": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/index.d.ts",
			"qualifiedName": "product_categories"
		},
		"17976": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17977": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/queries.ts",
			"qualifiedName": "__object"
		},
		"17978": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"17979": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"17980": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"17981": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/index.d.ts",
			"qualifiedName": "product_categories"
		},
		"17982": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17983": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/queries.ts",
			"qualifiedName": "__object"
		},
		"17984": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"17985": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"17986": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"17987": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/index.d.ts",
			"qualifiedName": "product_categories"
		},
		"17988": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17989": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/queries.ts",
			"qualifiedName": "useAdminProductCategory"
		},
		"17990": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/queries.ts",
			"qualifiedName": "useAdminProductCategory"
		},
		"17991": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/queries.ts",
			"qualifiedName": "id"
		},
		"17992": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/queries.ts",
			"qualifiedName": "query"
		},
		"17993": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/queries.ts",
			"qualifiedName": "options"
		},
		"17994": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/queries.ts",
			"qualifiedName": "__object"
		},
		"17995": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/index.d.ts",
			"qualifiedName": "product_category"
		},
		"17996": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"17997": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/queries.ts",
			"qualifiedName": "__object"
		},
		"17998": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/index.d.ts",
			"qualifiedName": "product_category"
		},
		"17999": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18000": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/queries.ts",
			"qualifiedName": "__object"
		},
		"18001": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/index.d.ts",
			"qualifiedName": "product_category"
		},
		"18002": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18003": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/queries.ts",
			"qualifiedName": "__object"
		},
		"18004": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/index.d.ts",
			"qualifiedName": "product_category"
		},
		"18005": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18006": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/mutations.ts",
			"qualifiedName": "useAdminCreateProductCategory"
		},
		"18007": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/mutations.ts",
			"qualifiedName": "useAdminCreateProductCategory"
		},
		"18008": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/mutations.ts",
			"qualifiedName": "options"
		},
		"18009": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/mutations.ts",
			"qualifiedName": "useAdminUpdateProductCategory"
		},
		"18010": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/mutations.ts",
			"qualifiedName": "useAdminUpdateProductCategory"
		},
		"18011": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/mutations.ts",
			"qualifiedName": "id"
		},
		"18012": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/mutations.ts",
			"qualifiedName": "options"
		},
		"18013": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/mutations.ts",
			"qualifiedName": "useAdminDeleteProductCategory"
		},
		"18014": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/mutations.ts",
			"qualifiedName": "useAdminDeleteProductCategory"
		},
		"18015": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/mutations.ts",
			"qualifiedName": "id"
		},
		"18016": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/mutations.ts",
			"qualifiedName": "options"
		},
		"18017": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/mutations.ts",
			"qualifiedName": "useAdminAddProductsToCategory"
		},
		"18018": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/mutations.ts",
			"qualifiedName": "useAdminAddProductsToCategory"
		},
		"18019": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/mutations.ts",
			"qualifiedName": "id"
		},
		"18020": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/mutations.ts",
			"qualifiedName": "options"
		},
		"18021": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/mutations.ts",
			"qualifiedName": "useAdminDeleteProductsFromCategory"
		},
		"18022": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/mutations.ts",
			"qualifiedName": "useAdminDeleteProductsFromCategory"
		},
		"18023": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/mutations.ts",
			"qualifiedName": "id"
		},
		"18024": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/mutations.ts",
			"qualifiedName": "options"
		},
		"18025": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-tags/queries.ts",
			"qualifiedName": "adminProductTagKeys"
		},
		"18026": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-tags/queries.ts",
			"qualifiedName": "useAdminProductTags"
		},
		"18027": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-tags/queries.ts",
			"qualifiedName": "useAdminProductTags"
		},
		"18028": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-tags/queries.ts",
			"qualifiedName": "query"
		},
		"18029": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-tags/queries.ts",
			"qualifiedName": "options"
		},
		"18030": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"18031": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"18032": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-tags/queries.ts",
			"qualifiedName": "__object"
		},
		"18033": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"18034": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"18035": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"18036": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-tags/index.d.ts",
			"qualifiedName": "product_tags"
		},
		"18037": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18038": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-tags/queries.ts",
			"qualifiedName": "__object"
		},
		"18039": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"18040": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"18041": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"18042": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-tags/index.d.ts",
			"qualifiedName": "product_tags"
		},
		"18043": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18044": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-tags/queries.ts",
			"qualifiedName": "__object"
		},
		"18045": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"18046": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"18047": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"18048": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-tags/index.d.ts",
			"qualifiedName": "product_tags"
		},
		"18049": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18050": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-tags/queries.ts",
			"qualifiedName": "__object"
		},
		"18051": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"18052": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"18053": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"18054": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-tags/index.d.ts",
			"qualifiedName": "product_tags"
		},
		"18055": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18056": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-types/queries.ts",
			"qualifiedName": "adminProductTypeKeys"
		},
		"18057": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-types/queries.ts",
			"qualifiedName": "useAdminProductTypes"
		},
		"18058": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-types/queries.ts",
			"qualifiedName": "useAdminProductTypes"
		},
		"18059": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-types/queries.ts",
			"qualifiedName": "query"
		},
		"18060": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-types/queries.ts",
			"qualifiedName": "options"
		},
		"18061": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"18062": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"18063": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-types/queries.ts",
			"qualifiedName": "__object"
		},
		"18064": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"18065": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"18066": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"18067": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-types/index.d.ts",
			"qualifiedName": "product_types"
		},
		"18068": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18069": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-types/queries.ts",
			"qualifiedName": "__object"
		},
		"18070": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"18071": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"18072": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"18073": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-types/index.d.ts",
			"qualifiedName": "product_types"
		},
		"18074": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18075": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-types/queries.ts",
			"qualifiedName": "__object"
		},
		"18076": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"18077": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"18078": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"18079": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-types/index.d.ts",
			"qualifiedName": "product_types"
		},
		"18080": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18081": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-types/queries.ts",
			"qualifiedName": "__object"
		},
		"18082": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"18083": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"18084": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"18085": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-types/index.d.ts",
			"qualifiedName": "product_types"
		},
		"18086": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18087": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "adminProductKeys"
		},
		"18088": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "__object"
		},
		"18089": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "__object.detailVariants"
		},
		"18090": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "__object.detailVariants"
		},
		"18091": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "id"
		},
		"18092": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "query"
		},
		"18093": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.all"
		},
		"18094": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.lists"
		},
		"18095": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"18096": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"18097": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.list"
		},
		"18098": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"18099": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"18100": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "query"
		},
		"18101": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"18102": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"18103": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.details"
		},
		"18104": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"18105": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"18106": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.detail"
		},
		"18107": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"18108": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"18109": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "id"
		},
		"18110": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "useAdminProducts"
		},
		"18111": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "useAdminProducts"
		},
		"18112": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "query"
		},
		"18113": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "options"
		},
		"18114": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"18115": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"18116": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "__object"
		},
		"18117": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"18118": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"18119": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"18120": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "products"
		},
		"18121": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18122": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "__object"
		},
		"18123": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"18124": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"18125": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"18126": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "products"
		},
		"18127": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18128": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "__object"
		},
		"18129": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"18130": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"18131": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"18132": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "products"
		},
		"18133": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18134": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "__object"
		},
		"18135": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"18136": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"18137": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"18138": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "products"
		},
		"18139": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18140": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "useAdminProduct"
		},
		"18141": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "useAdminProduct"
		},
		"18142": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "id"
		},
		"18143": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "query"
		},
		"18144": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "options"
		},
		"18145": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "__object"
		},
		"18146": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "product"
		},
		"18147": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18148": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "__object"
		},
		"18149": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "product"
		},
		"18150": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18151": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "__object"
		},
		"18152": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "product"
		},
		"18153": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18154": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "__object"
		},
		"18155": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "product"
		},
		"18156": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18157": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "useAdminProductVariants"
		},
		"18158": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "useAdminProductVariants"
		},
		"18159": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "id"
		},
		"18160": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "query"
		},
		"18161": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "options"
		},
		"18162": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "__object"
		},
		"18163": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"18164": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"18165": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"18166": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "variants"
		},
		"18167": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18168": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "__object"
		},
		"18169": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"18170": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"18171": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"18172": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "variants"
		},
		"18173": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18174": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "__object"
		},
		"18175": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"18176": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"18177": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"18178": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "variants"
		},
		"18179": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18180": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "__object"
		},
		"18181": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"18182": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"18183": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"18184": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "variants"
		},
		"18185": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18186": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "useAdminProductTagUsage"
		},
		"18187": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "useAdminProductTagUsage"
		},
		"18188": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "options"
		},
		"18189": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "__object"
		},
		"18190": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "tags"
		},
		"18191": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "__type"
		},
		"18192": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "__type.usage_count"
		},
		"18193": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18194": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "__object"
		},
		"18195": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "tags"
		},
		"18196": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "__type"
		},
		"18197": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "__type.usage_count"
		},
		"18198": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18199": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "__object"
		},
		"18200": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "tags"
		},
		"18201": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "__type"
		},
		"18202": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "__type.usage_count"
		},
		"18203": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18204": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "__object"
		},
		"18205": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "tags"
		},
		"18206": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "__type"
		},
		"18207": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "__type.usage_count"
		},
		"18208": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18209": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "useAdminCreateProduct"
		},
		"18210": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "useAdminCreateProduct"
		},
		"18211": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "options"
		},
		"18212": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "useAdminUpdateProduct"
		},
		"18213": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "useAdminUpdateProduct"
		},
		"18214": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "id"
		},
		"18215": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "options"
		},
		"18216": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "useAdminDeleteProduct"
		},
		"18217": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "useAdminDeleteProduct"
		},
		"18218": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "id"
		},
		"18219": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "options"
		},
		"18220": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "useAdminCreateVariant"
		},
		"18221": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "useAdminCreateVariant"
		},
		"18222": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "productId"
		},
		"18223": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "options"
		},
		"18224": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "AdminUpdateVariantReq"
		},
		"18225": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "__type"
		},
		"18226": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "__type.variant_id"
		},
		"18227": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "useAdminUpdateVariant"
		},
		"18228": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "useAdminUpdateVariant"
		},
		"18229": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "productId"
		},
		"18230": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "options"
		},
		"18231": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "useAdminDeleteVariant"
		},
		"18232": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "useAdminDeleteVariant"
		},
		"18233": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "productId"
		},
		"18234": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "options"
		},
		"18235": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "useAdminCreateProductOption"
		},
		"18236": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "useAdminCreateProductOption"
		},
		"18237": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "productId"
		},
		"18238": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "options"
		},
		"18239": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "AdminUpdateProductOptionReq"
		},
		"18240": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "__type"
		},
		"18241": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "__type.option_id"
		},
		"18242": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "useAdminUpdateProductOption"
		},
		"18243": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "useAdminUpdateProductOption"
		},
		"18244": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "productId"
		},
		"18245": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "options"
		},
		"18246": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "useAdminDeleteProductOption"
		},
		"18247": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "useAdminDeleteProductOption"
		},
		"18248": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "productId"
		},
		"18249": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "options"
		},
		"18250": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "adminPublishableApiKeysKeys"
		},
		"18251": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "__object"
		},
		"18252": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "__object.detailSalesChannels"
		},
		"18253": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "__object.detailSalesChannels"
		},
		"18254": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "id"
		},
		"18255": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "query"
		},
		"18256": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.all"
		},
		"18257": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.lists"
		},
		"18258": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"18259": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"18260": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.list"
		},
		"18261": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"18262": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"18263": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "query"
		},
		"18264": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"18265": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"18266": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.details"
		},
		"18267": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"18268": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"18269": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.detail"
		},
		"18270": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"18271": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"18272": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "id"
		},
		"18273": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "useAdminPublishableApiKey"
		},
		"18274": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "useAdminPublishableApiKey"
		},
		"18275": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "id"
		},
		"18276": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "options"
		},
		"18277": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "__object"
		},
		"18278": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/index.d.ts",
			"qualifiedName": "publishable_api_key"
		},
		"18279": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18280": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "__object"
		},
		"18281": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/index.d.ts",
			"qualifiedName": "publishable_api_key"
		},
		"18282": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18283": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "__object"
		},
		"18284": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/index.d.ts",
			"qualifiedName": "publishable_api_key"
		},
		"18285": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18286": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "__object"
		},
		"18287": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/index.d.ts",
			"qualifiedName": "publishable_api_key"
		},
		"18288": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18289": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "useAdminPublishableApiKeys"
		},
		"18290": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "useAdminPublishableApiKeys"
		},
		"18291": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "query"
		},
		"18292": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "options"
		},
		"18293": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"18294": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"18295": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "__object"
		},
		"18296": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"18297": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"18298": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"18299": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/index.d.ts",
			"qualifiedName": "publishable_api_keys"
		},
		"18300": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18301": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "__object"
		},
		"18302": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"18303": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"18304": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"18305": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/index.d.ts",
			"qualifiedName": "publishable_api_keys"
		},
		"18306": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18307": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "__object"
		},
		"18308": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"18309": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"18310": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"18311": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/index.d.ts",
			"qualifiedName": "publishable_api_keys"
		},
		"18312": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18313": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "__object"
		},
		"18314": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"18315": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"18316": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"18317": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/index.d.ts",
			"qualifiedName": "publishable_api_keys"
		},
		"18318": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18319": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "useAdminPublishableApiKeySalesChannels"
		},
		"18320": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "useAdminPublishableApiKeySalesChannels"
		},
		"18321": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "id"
		},
		"18322": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "query"
		},
		"18323": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "options"
		},
		"18324": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "__object"
		},
		"18325": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/index.d.ts",
			"qualifiedName": "sales_channels"
		},
		"18326": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18327": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "__object"
		},
		"18328": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/index.d.ts",
			"qualifiedName": "sales_channels"
		},
		"18329": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18330": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "__object"
		},
		"18331": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/index.d.ts",
			"qualifiedName": "sales_channels"
		},
		"18332": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18333": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "__object"
		},
		"18334": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/index.d.ts",
			"qualifiedName": "sales_channels"
		},
		"18335": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18336": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/mutations.ts",
			"qualifiedName": "useAdminCreatePublishableApiKey"
		},
		"18337": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/mutations.ts",
			"qualifiedName": "useAdminCreatePublishableApiKey"
		},
		"18338": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/mutations.ts",
			"qualifiedName": "options"
		},
		"18339": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/mutations.ts",
			"qualifiedName": "useAdminUpdatePublishableApiKey"
		},
		"18340": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/mutations.ts",
			"qualifiedName": "useAdminUpdatePublishableApiKey"
		},
		"18341": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/mutations.ts",
			"qualifiedName": "id"
		},
		"18342": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/mutations.ts",
			"qualifiedName": "options"
		},
		"18343": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/mutations.ts",
			"qualifiedName": "useAdminDeletePublishableApiKey"
		},
		"18344": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/mutations.ts",
			"qualifiedName": "useAdminDeletePublishableApiKey"
		},
		"18345": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/mutations.ts",
			"qualifiedName": "id"
		},
		"18346": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/mutations.ts",
			"qualifiedName": "options"
		},
		"18347": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/mutations.ts",
			"qualifiedName": "useAdminRevokePublishableApiKey"
		},
		"18348": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/mutations.ts",
			"qualifiedName": "useAdminRevokePublishableApiKey"
		},
		"18349": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/mutations.ts",
			"qualifiedName": "id"
		},
		"18350": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/mutations.ts",
			"qualifiedName": "options"
		},
		"18351": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/mutations.ts",
			"qualifiedName": "useAdminAddPublishableKeySalesChannelsBatch"
		},
		"18352": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/mutations.ts",
			"qualifiedName": "useAdminAddPublishableKeySalesChannelsBatch"
		},
		"18353": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/mutations.ts",
			"qualifiedName": "id"
		},
		"18354": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/mutations.ts",
			"qualifiedName": "options"
		},
		"18355": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/mutations.ts",
			"qualifiedName": "useAdminRemovePublishableKeySalesChannelsBatch"
		},
		"18356": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/mutations.ts",
			"qualifiedName": "useAdminRemovePublishableKeySalesChannelsBatch"
		},
		"18357": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/mutations.ts",
			"qualifiedName": "id"
		},
		"18358": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/mutations.ts",
			"qualifiedName": "options"
		},
		"18359": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/queries.ts",
			"qualifiedName": "adminRegionKeys"
		},
		"18360": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/queries.ts",
			"qualifiedName": "useAdminRegions"
		},
		"18361": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/queries.ts",
			"qualifiedName": "useAdminRegions"
		},
		"18362": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/queries.ts",
			"qualifiedName": "query"
		},
		"18363": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/queries.ts",
			"qualifiedName": "options"
		},
		"18364": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"18365": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"18366": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/queries.ts",
			"qualifiedName": "__object"
		},
		"18367": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"18368": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"18369": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"18370": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
			"qualifiedName": "regions"
		},
		"18371": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18372": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/queries.ts",
			"qualifiedName": "__object"
		},
		"18373": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"18374": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"18375": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"18376": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
			"qualifiedName": "regions"
		},
		"18377": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18378": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/queries.ts",
			"qualifiedName": "__object"
		},
		"18379": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"18380": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"18381": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"18382": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
			"qualifiedName": "regions"
		},
		"18383": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18384": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/queries.ts",
			"qualifiedName": "__object"
		},
		"18385": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"18386": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"18387": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"18388": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
			"qualifiedName": "regions"
		},
		"18389": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18390": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/queries.ts",
			"qualifiedName": "useAdminRegion"
		},
		"18391": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/queries.ts",
			"qualifiedName": "useAdminRegion"
		},
		"18392": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/queries.ts",
			"qualifiedName": "id"
		},
		"18393": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/queries.ts",
			"qualifiedName": "options"
		},
		"18394": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/queries.ts",
			"qualifiedName": "__object"
		},
		"18395": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
			"qualifiedName": "region"
		},
		"18396": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18397": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/queries.ts",
			"qualifiedName": "__object"
		},
		"18398": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
			"qualifiedName": "region"
		},
		"18399": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18400": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/queries.ts",
			"qualifiedName": "__object"
		},
		"18401": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
			"qualifiedName": "region"
		},
		"18402": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18403": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/queries.ts",
			"qualifiedName": "__object"
		},
		"18404": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
			"qualifiedName": "region"
		},
		"18405": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18406": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/queries.ts",
			"qualifiedName": "useAdminRegionFulfillmentOptions"
		},
		"18407": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/queries.ts",
			"qualifiedName": "useAdminRegionFulfillmentOptions"
		},
		"18408": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/queries.ts",
			"qualifiedName": "regionId"
		},
		"18409": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/queries.ts",
			"qualifiedName": "options"
		},
		"18410": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/queries.ts",
			"qualifiedName": "__object"
		},
		"18411": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
			"qualifiedName": "fulfillment_options"
		},
		"18412": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18413": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/queries.ts",
			"qualifiedName": "__object"
		},
		"18414": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
			"qualifiedName": "fulfillment_options"
		},
		"18415": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18416": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/queries.ts",
			"qualifiedName": "__object"
		},
		"18417": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
			"qualifiedName": "fulfillment_options"
		},
		"18418": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18419": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/queries.ts",
			"qualifiedName": "__object"
		},
		"18420": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
			"qualifiedName": "fulfillment_options"
		},
		"18421": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18422": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "useAdminCreateRegion"
		},
		"18423": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "useAdminCreateRegion"
		},
		"18424": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "options"
		},
		"18425": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "useAdminUpdateRegion"
		},
		"18426": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "useAdminUpdateRegion"
		},
		"18427": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "id"
		},
		"18428": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "options"
		},
		"18429": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "useAdminDeleteRegion"
		},
		"18430": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "useAdminDeleteRegion"
		},
		"18431": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "id"
		},
		"18432": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "options"
		},
		"18433": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "useAdminRegionAddCountry"
		},
		"18434": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "useAdminRegionAddCountry"
		},
		"18435": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "id"
		},
		"18436": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "options"
		},
		"18437": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "useAdminRegionRemoveCountry"
		},
		"18438": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "useAdminRegionRemoveCountry"
		},
		"18439": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "id"
		},
		"18440": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "options"
		},
		"18441": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "useAdminRegionAddFulfillmentProvider"
		},
		"18442": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "useAdminRegionAddFulfillmentProvider"
		},
		"18443": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "id"
		},
		"18444": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "options"
		},
		"18445": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "useAdminRegionDeleteFulfillmentProvider"
		},
		"18446": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "useAdminRegionDeleteFulfillmentProvider"
		},
		"18447": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "id"
		},
		"18448": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "options"
		},
		"18449": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "useAdminRegionAddPaymentProvider"
		},
		"18450": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "useAdminRegionAddPaymentProvider"
		},
		"18451": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "id"
		},
		"18452": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "options"
		},
		"18453": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "useAdminRegionDeletePaymentProvider"
		},
		"18454": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "useAdminRegionDeletePaymentProvider"
		},
		"18455": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "id"
		},
		"18456": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "options"
		},
		"18457": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/mutations.ts",
			"qualifiedName": "useAdminCreateReservation"
		},
		"18458": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/mutations.ts",
			"qualifiedName": "useAdminCreateReservation"
		},
		"18459": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/mutations.ts",
			"qualifiedName": "options"
		},
		"18460": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/mutations.ts",
			"qualifiedName": "useAdminUpdateReservation"
		},
		"18461": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/mutations.ts",
			"qualifiedName": "useAdminUpdateReservation"
		},
		"18462": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/mutations.ts",
			"qualifiedName": "id"
		},
		"18463": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/mutations.ts",
			"qualifiedName": "options"
		},
		"18464": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/mutations.ts",
			"qualifiedName": "useAdminDeleteReservation"
		},
		"18465": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/mutations.ts",
			"qualifiedName": "useAdminDeleteReservation"
		},
		"18466": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/mutations.ts",
			"qualifiedName": "id"
		},
		"18467": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/mutations.ts",
			"qualifiedName": "options"
		},
		"18468": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/queries.ts",
			"qualifiedName": "adminReservationsKeys"
		},
		"18469": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/queries.ts",
			"qualifiedName": "useAdminReservations"
		},
		"18470": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/queries.ts",
			"qualifiedName": "useAdminReservations"
		},
		"18471": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/queries.ts",
			"qualifiedName": "query"
		},
		"18472": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/queries.ts",
			"qualifiedName": "options"
		},
		"18473": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"18474": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"18475": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/queries.ts",
			"qualifiedName": "__object"
		},
		"18476": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"18477": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"18478": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"18479": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/reservations/index.d.ts",
			"qualifiedName": "reservations"
		},
		"18480": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18481": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/queries.ts",
			"qualifiedName": "__object"
		},
		"18482": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"18483": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"18484": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"18485": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/reservations/index.d.ts",
			"qualifiedName": "reservations"
		},
		"18486": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18487": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/queries.ts",
			"qualifiedName": "__object"
		},
		"18488": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"18489": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"18490": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"18491": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/reservations/index.d.ts",
			"qualifiedName": "reservations"
		},
		"18492": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18493": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/queries.ts",
			"qualifiedName": "__object"
		},
		"18494": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"18495": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"18496": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"18497": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/reservations/index.d.ts",
			"qualifiedName": "reservations"
		},
		"18498": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18499": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/queries.ts",
			"qualifiedName": "useAdminReservation"
		},
		"18500": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/queries.ts",
			"qualifiedName": "useAdminReservation"
		},
		"18501": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/queries.ts",
			"qualifiedName": "id"
		},
		"18502": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/queries.ts",
			"qualifiedName": "options"
		},
		"18503": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/queries.ts",
			"qualifiedName": "__object"
		},
		"18504": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/reservations/index.d.ts",
			"qualifiedName": "reservation"
		},
		"18505": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18506": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/queries.ts",
			"qualifiedName": "__object"
		},
		"18507": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/reservations/index.d.ts",
			"qualifiedName": "reservation"
		},
		"18508": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18509": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/queries.ts",
			"qualifiedName": "__object"
		},
		"18510": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/reservations/index.d.ts",
			"qualifiedName": "reservation"
		},
		"18511": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18512": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/queries.ts",
			"qualifiedName": "__object"
		},
		"18513": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/reservations/index.d.ts",
			"qualifiedName": "reservation"
		},
		"18514": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18515": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/queries.ts",
			"qualifiedName": "adminReturnReasonKeys"
		},
		"18516": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/queries.ts",
			"qualifiedName": "useAdminReturnReasons"
		},
		"18517": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/queries.ts",
			"qualifiedName": "useAdminReturnReasons"
		},
		"18518": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/queries.ts",
			"qualifiedName": "options"
		},
		"18519": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/queries.ts",
			"qualifiedName": "__object"
		},
		"18520": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/return-reasons/index.d.ts",
			"qualifiedName": "return_reasons"
		},
		"18521": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18522": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/queries.ts",
			"qualifiedName": "__object"
		},
		"18523": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/return-reasons/index.d.ts",
			"qualifiedName": "return_reasons"
		},
		"18524": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18525": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/queries.ts",
			"qualifiedName": "__object"
		},
		"18526": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/return-reasons/index.d.ts",
			"qualifiedName": "return_reasons"
		},
		"18527": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18528": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/queries.ts",
			"qualifiedName": "__object"
		},
		"18529": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/return-reasons/index.d.ts",
			"qualifiedName": "return_reasons"
		},
		"18530": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18531": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/queries.ts",
			"qualifiedName": "useAdminReturnReason"
		},
		"18532": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/queries.ts",
			"qualifiedName": "useAdminReturnReason"
		},
		"18533": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/queries.ts",
			"qualifiedName": "id"
		},
		"18534": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/queries.ts",
			"qualifiedName": "options"
		},
		"18535": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/queries.ts",
			"qualifiedName": "__object"
		},
		"18536": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/return-reasons/index.d.ts",
			"qualifiedName": "return_reason"
		},
		"18537": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18538": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/queries.ts",
			"qualifiedName": "__object"
		},
		"18539": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/return-reasons/index.d.ts",
			"qualifiedName": "return_reason"
		},
		"18540": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18541": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/queries.ts",
			"qualifiedName": "__object"
		},
		"18542": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/return-reasons/index.d.ts",
			"qualifiedName": "return_reason"
		},
		"18543": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18544": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/queries.ts",
			"qualifiedName": "__object"
		},
		"18545": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/return-reasons/index.d.ts",
			"qualifiedName": "return_reason"
		},
		"18546": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18547": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/mutations.ts",
			"qualifiedName": "useAdminCreateReturnReason"
		},
		"18548": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/mutations.ts",
			"qualifiedName": "useAdminCreateReturnReason"
		},
		"18549": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/mutations.ts",
			"qualifiedName": "options"
		},
		"18550": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/mutations.ts",
			"qualifiedName": "useAdminUpdateReturnReason"
		},
		"18551": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/mutations.ts",
			"qualifiedName": "useAdminUpdateReturnReason"
		},
		"18552": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/mutations.ts",
			"qualifiedName": "id"
		},
		"18553": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/mutations.ts",
			"qualifiedName": "options"
		},
		"18554": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/mutations.ts",
			"qualifiedName": "useAdminDeleteReturnReason"
		},
		"18555": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/mutations.ts",
			"qualifiedName": "useAdminDeleteReturnReason"
		},
		"18556": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/mutations.ts",
			"qualifiedName": "id"
		},
		"18557": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/mutations.ts",
			"qualifiedName": "options"
		},
		"18558": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/returns/queries.ts",
			"qualifiedName": "adminReturnKeys"
		},
		"18559": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/returns/queries.ts",
			"qualifiedName": "useAdminReturns"
		},
		"18560": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/returns/queries.ts",
			"qualifiedName": "useAdminReturns"
		},
		"18561": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/returns/queries.ts",
			"qualifiedName": "options"
		},
		"18562": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/returns/queries.ts",
			"qualifiedName": "__object"
		},
		"18563": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"18564": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"18565": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"18566": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/returns/index.d.ts",
			"qualifiedName": "returns"
		},
		"18567": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18568": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/returns/queries.ts",
			"qualifiedName": "__object"
		},
		"18569": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"18570": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"18571": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"18572": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/returns/index.d.ts",
			"qualifiedName": "returns"
		},
		"18573": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18574": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/returns/queries.ts",
			"qualifiedName": "__object"
		},
		"18575": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"18576": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"18577": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"18578": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/returns/index.d.ts",
			"qualifiedName": "returns"
		},
		"18579": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18580": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/returns/queries.ts",
			"qualifiedName": "__object"
		},
		"18581": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"18582": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"18583": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"18584": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/returns/index.d.ts",
			"qualifiedName": "returns"
		},
		"18585": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18586": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/returns/mutations.ts",
			"qualifiedName": "useAdminReceiveReturn"
		},
		"18587": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/returns/mutations.ts",
			"qualifiedName": "useAdminReceiveReturn"
		},
		"18588": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/returns/mutations.ts",
			"qualifiedName": "id"
		},
		"18589": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/returns/mutations.ts",
			"qualifiedName": "options"
		},
		"18590": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/returns/mutations.ts",
			"qualifiedName": "useAdminCancelReturn"
		},
		"18591": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/returns/mutations.ts",
			"qualifiedName": "useAdminCancelReturn"
		},
		"18592": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/returns/mutations.ts",
			"qualifiedName": "id"
		},
		"18593": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/returns/mutations.ts",
			"qualifiedName": "options"
		},
		"18594": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/queries.ts",
			"qualifiedName": "adminSalesChannelsKeys"
		},
		"18595": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/queries.ts",
			"qualifiedName": "useAdminSalesChannel"
		},
		"18596": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/queries.ts",
			"qualifiedName": "useAdminSalesChannel"
		},
		"18597": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/queries.ts",
			"qualifiedName": "id"
		},
		"18598": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/queries.ts",
			"qualifiedName": "options"
		},
		"18599": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/queries.ts",
			"qualifiedName": "__object"
		},
		"18600": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/index.d.ts",
			"qualifiedName": "sales_channel"
		},
		"18601": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18602": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/queries.ts",
			"qualifiedName": "__object"
		},
		"18603": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/index.d.ts",
			"qualifiedName": "sales_channel"
		},
		"18604": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18605": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/queries.ts",
			"qualifiedName": "__object"
		},
		"18606": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/index.d.ts",
			"qualifiedName": "sales_channel"
		},
		"18607": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18608": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/queries.ts",
			"qualifiedName": "__object"
		},
		"18609": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/index.d.ts",
			"qualifiedName": "sales_channel"
		},
		"18610": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18611": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/queries.ts",
			"qualifiedName": "useAdminSalesChannels"
		},
		"18612": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/queries.ts",
			"qualifiedName": "useAdminSalesChannels"
		},
		"18613": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/queries.ts",
			"qualifiedName": "query"
		},
		"18614": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/queries.ts",
			"qualifiedName": "options"
		},
		"18615": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"18616": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"18617": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/queries.ts",
			"qualifiedName": "__object"
		},
		"18618": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"18619": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"18620": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"18621": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/index.d.ts",
			"qualifiedName": "sales_channels"
		},
		"18622": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18623": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/queries.ts",
			"qualifiedName": "__object"
		},
		"18624": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"18625": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"18626": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"18627": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/index.d.ts",
			"qualifiedName": "sales_channels"
		},
		"18628": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18629": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/queries.ts",
			"qualifiedName": "__object"
		},
		"18630": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"18631": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"18632": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"18633": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/index.d.ts",
			"qualifiedName": "sales_channels"
		},
		"18634": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18635": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/queries.ts",
			"qualifiedName": "__object"
		},
		"18636": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"18637": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"18638": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"18639": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/index.d.ts",
			"qualifiedName": "sales_channels"
		},
		"18640": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18641": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "useAdminCreateSalesChannel"
		},
		"18642": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "useAdminCreateSalesChannel"
		},
		"18643": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "options"
		},
		"18644": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "useAdminUpdateSalesChannel"
		},
		"18645": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "useAdminUpdateSalesChannel"
		},
		"18646": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "id"
		},
		"18647": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "options"
		},
		"18648": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "useAdminDeleteSalesChannel"
		},
		"18649": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "useAdminDeleteSalesChannel"
		},
		"18650": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "id"
		},
		"18651": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "options"
		},
		"18652": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "useAdminDeleteProductsFromSalesChannel"
		},
		"18653": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "useAdminDeleteProductsFromSalesChannel"
		},
		"18654": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "id"
		},
		"18655": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "options"
		},
		"18656": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "useAdminAddProductsToSalesChannel"
		},
		"18657": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "useAdminAddProductsToSalesChannel"
		},
		"18658": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "id"
		},
		"18659": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "options"
		},
		"18660": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "useAdminAddLocationToSalesChannel"
		},
		"18661": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "useAdminAddLocationToSalesChannel"
		},
		"18662": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "options"
		},
		"18663": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "__type"
		},
		"18664": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "__type.sales_channel_id"
		},
		"18665": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "__type.location_id"
		},
		"18666": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "__type"
		},
		"18667": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "__type.sales_channel_id"
		},
		"18668": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "__type.location_id"
		},
		"18669": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "useAdminRemoveLocationFromSalesChannel"
		},
		"18670": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "useAdminRemoveLocationFromSalesChannel"
		},
		"18671": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "options"
		},
		"18672": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "__type"
		},
		"18673": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "__type.sales_channel_id"
		},
		"18674": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "__type.location_id"
		},
		"18675": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "__type"
		},
		"18676": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "__type.sales_channel_id"
		},
		"18677": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "__type.location_id"
		},
		"18678": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/queries.ts",
			"qualifiedName": "adminShippingOptionKeys"
		},
		"18679": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/queries.ts",
			"qualifiedName": "useAdminShippingOptions"
		},
		"18680": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/queries.ts",
			"qualifiedName": "useAdminShippingOptions"
		},
		"18681": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/queries.ts",
			"qualifiedName": "query"
		},
		"18682": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/queries.ts",
			"qualifiedName": "options"
		},
		"18683": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"18684": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"18685": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/queries.ts",
			"qualifiedName": "__object"
		},
		"18686": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"18687": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"18688": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"18689": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-options/index.d.ts",
			"qualifiedName": "shipping_options"
		},
		"18690": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18691": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/queries.ts",
			"qualifiedName": "__object"
		},
		"18692": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"18693": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"18694": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"18695": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-options/index.d.ts",
			"qualifiedName": "shipping_options"
		},
		"18696": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18697": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/queries.ts",
			"qualifiedName": "__object"
		},
		"18698": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"18699": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"18700": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"18701": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-options/index.d.ts",
			"qualifiedName": "shipping_options"
		},
		"18702": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18703": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/queries.ts",
			"qualifiedName": "__object"
		},
		"18704": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"18705": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"18706": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"18707": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-options/index.d.ts",
			"qualifiedName": "shipping_options"
		},
		"18708": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18709": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/queries.ts",
			"qualifiedName": "useAdminShippingOption"
		},
		"18710": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/queries.ts",
			"qualifiedName": "useAdminShippingOption"
		},
		"18711": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/queries.ts",
			"qualifiedName": "id"
		},
		"18712": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/queries.ts",
			"qualifiedName": "options"
		},
		"18713": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/queries.ts",
			"qualifiedName": "__object"
		},
		"18714": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-options/index.d.ts",
			"qualifiedName": "shipping_option"
		},
		"18715": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18716": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/queries.ts",
			"qualifiedName": "__object"
		},
		"18717": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-options/index.d.ts",
			"qualifiedName": "shipping_option"
		},
		"18718": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18719": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/queries.ts",
			"qualifiedName": "__object"
		},
		"18720": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-options/index.d.ts",
			"qualifiedName": "shipping_option"
		},
		"18721": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18722": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/queries.ts",
			"qualifiedName": "__object"
		},
		"18723": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-options/index.d.ts",
			"qualifiedName": "shipping_option"
		},
		"18724": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18725": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/mutations.ts",
			"qualifiedName": "useAdminCreateShippingOption"
		},
		"18726": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/mutations.ts",
			"qualifiedName": "useAdminCreateShippingOption"
		},
		"18727": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/mutations.ts",
			"qualifiedName": "options"
		},
		"18728": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/mutations.ts",
			"qualifiedName": "useAdminUpdateShippingOption"
		},
		"18729": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/mutations.ts",
			"qualifiedName": "useAdminUpdateShippingOption"
		},
		"18730": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/mutations.ts",
			"qualifiedName": "id"
		},
		"18731": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/mutations.ts",
			"qualifiedName": "options"
		},
		"18732": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/mutations.ts",
			"qualifiedName": "useAdminDeleteShippingOption"
		},
		"18733": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/mutations.ts",
			"qualifiedName": "useAdminDeleteShippingOption"
		},
		"18734": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/mutations.ts",
			"qualifiedName": "id"
		},
		"18735": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/mutations.ts",
			"qualifiedName": "options"
		},
		"18736": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/queries.ts",
			"qualifiedName": "adminShippingProfileKeys"
		},
		"18737": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/queries.ts",
			"qualifiedName": "useAdminShippingProfiles"
		},
		"18738": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/queries.ts",
			"qualifiedName": "useAdminShippingProfiles"
		},
		"18739": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/queries.ts",
			"qualifiedName": "options"
		},
		"18740": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/queries.ts",
			"qualifiedName": "__object"
		},
		"18741": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-profiles/index.d.ts",
			"qualifiedName": "shipping_profiles"
		},
		"18742": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18743": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/queries.ts",
			"qualifiedName": "__object"
		},
		"18744": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-profiles/index.d.ts",
			"qualifiedName": "shipping_profiles"
		},
		"18745": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18746": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/queries.ts",
			"qualifiedName": "__object"
		},
		"18747": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-profiles/index.d.ts",
			"qualifiedName": "shipping_profiles"
		},
		"18748": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18749": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/queries.ts",
			"qualifiedName": "__object"
		},
		"18750": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-profiles/index.d.ts",
			"qualifiedName": "shipping_profiles"
		},
		"18751": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18752": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/queries.ts",
			"qualifiedName": "useAdminShippingProfile"
		},
		"18753": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/queries.ts",
			"qualifiedName": "useAdminShippingProfile"
		},
		"18754": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/queries.ts",
			"qualifiedName": "id"
		},
		"18755": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/queries.ts",
			"qualifiedName": "options"
		},
		"18756": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/queries.ts",
			"qualifiedName": "__object"
		},
		"18757": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-profiles/index.d.ts",
			"qualifiedName": "shipping_profile"
		},
		"18758": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18759": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/queries.ts",
			"qualifiedName": "__object"
		},
		"18760": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-profiles/index.d.ts",
			"qualifiedName": "shipping_profile"
		},
		"18761": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18762": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/queries.ts",
			"qualifiedName": "__object"
		},
		"18763": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-profiles/index.d.ts",
			"qualifiedName": "shipping_profile"
		},
		"18764": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18765": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/queries.ts",
			"qualifiedName": "__object"
		},
		"18766": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-profiles/index.d.ts",
			"qualifiedName": "shipping_profile"
		},
		"18767": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18768": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/mutations.ts",
			"qualifiedName": "useAdminCreateShippingProfile"
		},
		"18769": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/mutations.ts",
			"qualifiedName": "useAdminCreateShippingProfile"
		},
		"18770": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/mutations.ts",
			"qualifiedName": "options"
		},
		"18771": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/mutations.ts",
			"qualifiedName": "useAdminUpdateShippingProfile"
		},
		"18772": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/mutations.ts",
			"qualifiedName": "useAdminUpdateShippingProfile"
		},
		"18773": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/mutations.ts",
			"qualifiedName": "id"
		},
		"18774": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/mutations.ts",
			"qualifiedName": "options"
		},
		"18775": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/mutations.ts",
			"qualifiedName": "useAdminDeleteShippingProfile"
		},
		"18776": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/mutations.ts",
			"qualifiedName": "useAdminDeleteShippingProfile"
		},
		"18777": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/mutations.ts",
			"qualifiedName": "id"
		},
		"18778": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/mutations.ts",
			"qualifiedName": "options"
		},
		"18779": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/queries.ts",
			"qualifiedName": "adminStockLocationsKeys"
		},
		"18780": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/queries.ts",
			"qualifiedName": "useAdminStockLocations"
		},
		"18781": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/queries.ts",
			"qualifiedName": "useAdminStockLocations"
		},
		"18782": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/queries.ts",
			"qualifiedName": "query"
		},
		"18783": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/queries.ts",
			"qualifiedName": "options"
		},
		"18784": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"18785": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"18786": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/queries.ts",
			"qualifiedName": "__object"
		},
		"18787": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "limit"
		},
		"18788": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "offset"
		},
		"18789": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "count"
		},
		"18790": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/stock-locations/index.d.ts",
			"qualifiedName": "stock_locations"
		},
		"18791": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18792": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/queries.ts",
			"qualifiedName": "__object"
		},
		"18793": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "limit"
		},
		"18794": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "offset"
		},
		"18795": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "count"
		},
		"18796": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/stock-locations/index.d.ts",
			"qualifiedName": "stock_locations"
		},
		"18797": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18798": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/queries.ts",
			"qualifiedName": "__object"
		},
		"18799": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "limit"
		},
		"18800": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "offset"
		},
		"18801": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "count"
		},
		"18802": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/stock-locations/index.d.ts",
			"qualifiedName": "stock_locations"
		},
		"18803": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18804": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/queries.ts",
			"qualifiedName": "__object"
		},
		"18805": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "limit"
		},
		"18806": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "offset"
		},
		"18807": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "count"
		},
		"18808": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/stock-locations/index.d.ts",
			"qualifiedName": "stock_locations"
		},
		"18809": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18810": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/queries.ts",
			"qualifiedName": "useAdminStockLocation"
		},
		"18811": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/queries.ts",
			"qualifiedName": "useAdminStockLocation"
		},
		"18812": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/queries.ts",
			"qualifiedName": "id"
		},
		"18813": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/queries.ts",
			"qualifiedName": "options"
		},
		"18814": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/queries.ts",
			"qualifiedName": "__object"
		},
		"18815": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/stock-locations/index.d.ts",
			"qualifiedName": "stock_location"
		},
		"18816": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18817": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/queries.ts",
			"qualifiedName": "__object"
		},
		"18818": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/stock-locations/index.d.ts",
			"qualifiedName": "stock_location"
		},
		"18819": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18820": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/queries.ts",
			"qualifiedName": "__object"
		},
		"18821": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/stock-locations/index.d.ts",
			"qualifiedName": "stock_location"
		},
		"18822": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18823": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/queries.ts",
			"qualifiedName": "__object"
		},
		"18824": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/stock-locations/index.d.ts",
			"qualifiedName": "stock_location"
		},
		"18825": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18826": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/mutations.ts",
			"qualifiedName": "useAdminCreateStockLocation"
		},
		"18827": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/mutations.ts",
			"qualifiedName": "useAdminCreateStockLocation"
		},
		"18828": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/mutations.ts",
			"qualifiedName": "options"
		},
		"18829": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/mutations.ts",
			"qualifiedName": "useAdminUpdateStockLocation"
		},
		"18830": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/mutations.ts",
			"qualifiedName": "useAdminUpdateStockLocation"
		},
		"18831": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/mutations.ts",
			"qualifiedName": "id"
		},
		"18832": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/mutations.ts",
			"qualifiedName": "options"
		},
		"18833": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/mutations.ts",
			"qualifiedName": "useAdminDeleteStockLocation"
		},
		"18834": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/mutations.ts",
			"qualifiedName": "useAdminDeleteStockLocation"
		},
		"18835": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/mutations.ts",
			"qualifiedName": "id"
		},
		"18836": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/mutations.ts",
			"qualifiedName": "options"
		},
		"18837": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/queries.ts",
			"qualifiedName": "adminStoreKeys"
		},
		"18838": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/queries.ts",
			"qualifiedName": "useAdminStorePaymentProviders"
		},
		"18839": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/queries.ts",
			"qualifiedName": "useAdminStorePaymentProviders"
		},
		"18840": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/queries.ts",
			"qualifiedName": "options"
		},
		"18841": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/queries.ts",
			"qualifiedName": "__object"
		},
		"18842": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/store/index.d.ts",
			"qualifiedName": "payment_providers"
		},
		"18843": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18844": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/queries.ts",
			"qualifiedName": "__object"
		},
		"18845": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/store/index.d.ts",
			"qualifiedName": "payment_providers"
		},
		"18846": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18847": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/queries.ts",
			"qualifiedName": "__object"
		},
		"18848": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/store/index.d.ts",
			"qualifiedName": "payment_providers"
		},
		"18849": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18850": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/queries.ts",
			"qualifiedName": "__object"
		},
		"18851": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/store/index.d.ts",
			"qualifiedName": "payment_providers"
		},
		"18852": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18853": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/queries.ts",
			"qualifiedName": "useAdminStoreTaxProviders"
		},
		"18854": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/queries.ts",
			"qualifiedName": "useAdminStoreTaxProviders"
		},
		"18855": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/queries.ts",
			"qualifiedName": "options"
		},
		"18856": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/queries.ts",
			"qualifiedName": "__object"
		},
		"18857": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/store/index.d.ts",
			"qualifiedName": "tax_providers"
		},
		"18858": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18859": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/queries.ts",
			"qualifiedName": "__object"
		},
		"18860": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/store/index.d.ts",
			"qualifiedName": "tax_providers"
		},
		"18861": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18862": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/queries.ts",
			"qualifiedName": "__object"
		},
		"18863": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/store/index.d.ts",
			"qualifiedName": "tax_providers"
		},
		"18864": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18865": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/queries.ts",
			"qualifiedName": "__object"
		},
		"18866": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/store/index.d.ts",
			"qualifiedName": "tax_providers"
		},
		"18867": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18868": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/queries.ts",
			"qualifiedName": "useAdminStore"
		},
		"18869": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/queries.ts",
			"qualifiedName": "useAdminStore"
		},
		"18870": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/queries.ts",
			"qualifiedName": "options"
		},
		"18871": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/queries.ts",
			"qualifiedName": "__object"
		},
		"18872": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/store/index.d.ts",
			"qualifiedName": "store"
		},
		"18873": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18874": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/queries.ts",
			"qualifiedName": "__object"
		},
		"18875": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/store/index.d.ts",
			"qualifiedName": "store"
		},
		"18876": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18877": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/queries.ts",
			"qualifiedName": "__object"
		},
		"18878": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/store/index.d.ts",
			"qualifiedName": "store"
		},
		"18879": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18880": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/queries.ts",
			"qualifiedName": "__object"
		},
		"18881": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/store/index.d.ts",
			"qualifiedName": "store"
		},
		"18882": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18883": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/mutations.ts",
			"qualifiedName": "useAdminUpdateStore"
		},
		"18884": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/mutations.ts",
			"qualifiedName": "useAdminUpdateStore"
		},
		"18885": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/mutations.ts",
			"qualifiedName": "options"
		},
		"18886": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/mutations.ts",
			"qualifiedName": "useAdminAddStoreCurrency"
		},
		"18887": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/mutations.ts",
			"qualifiedName": "useAdminAddStoreCurrency"
		},
		"18888": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/mutations.ts",
			"qualifiedName": "options"
		},
		"18889": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/mutations.ts",
			"qualifiedName": "useAdminDeleteStoreCurrency"
		},
		"18890": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/mutations.ts",
			"qualifiedName": "useAdminDeleteStoreCurrency"
		},
		"18891": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/mutations.ts",
			"qualifiedName": "options"
		},
		"18892": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/queries.ts",
			"qualifiedName": "adminSwapKeys"
		},
		"18893": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/queries.ts",
			"qualifiedName": "useAdminSwaps"
		},
		"18894": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/queries.ts",
			"qualifiedName": "useAdminSwaps"
		},
		"18895": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/queries.ts",
			"qualifiedName": "query"
		},
		"18896": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/queries.ts",
			"qualifiedName": "options"
		},
		"18897": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"18898": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"18899": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/queries.ts",
			"qualifiedName": "__object"
		},
		"18900": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"18901": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"18902": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"18903": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/swaps/index.d.ts",
			"qualifiedName": "swaps"
		},
		"18904": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18905": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/queries.ts",
			"qualifiedName": "__object"
		},
		"18906": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"18907": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"18908": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"18909": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/swaps/index.d.ts",
			"qualifiedName": "swaps"
		},
		"18910": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18911": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/queries.ts",
			"qualifiedName": "__object"
		},
		"18912": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"18913": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"18914": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"18915": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/swaps/index.d.ts",
			"qualifiedName": "swaps"
		},
		"18916": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18917": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/queries.ts",
			"qualifiedName": "__object"
		},
		"18918": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"18919": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"18920": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"18921": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/swaps/index.d.ts",
			"qualifiedName": "swaps"
		},
		"18922": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18923": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/queries.ts",
			"qualifiedName": "useAdminSwap"
		},
		"18924": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/queries.ts",
			"qualifiedName": "useAdminSwap"
		},
		"18925": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/queries.ts",
			"qualifiedName": "id"
		},
		"18926": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/queries.ts",
			"qualifiedName": "options"
		},
		"18927": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/queries.ts",
			"qualifiedName": "__object"
		},
		"18928": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/swaps/index.d.ts",
			"qualifiedName": "swap"
		},
		"18929": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18930": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/queries.ts",
			"qualifiedName": "__object"
		},
		"18931": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/swaps/index.d.ts",
			"qualifiedName": "swap"
		},
		"18932": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18933": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/queries.ts",
			"qualifiedName": "__object"
		},
		"18934": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/swaps/index.d.ts",
			"qualifiedName": "swap"
		},
		"18935": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18936": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/queries.ts",
			"qualifiedName": "__object"
		},
		"18937": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/swaps/index.d.ts",
			"qualifiedName": "swap"
		},
		"18938": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18939": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "useAdminCreateSwap"
		},
		"18940": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "useAdminCreateSwap"
		},
		"18941": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "orderId"
		},
		"18942": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "options"
		},
		"18943": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "useAdminCancelSwap"
		},
		"18944": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "useAdminCancelSwap"
		},
		"18945": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "orderId"
		},
		"18946": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "options"
		},
		"18947": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "AdminFulfillSwapReq"
		},
		"18948": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "__type"
		},
		"18949": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "__type.swap_id"
		},
		"18950": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "useAdminFulfillSwap"
		},
		"18951": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "useAdminFulfillSwap"
		},
		"18952": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "orderId"
		},
		"18953": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "options"
		},
		"18954": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "AdminCreateSwapShipmentReq"
		},
		"18955": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "__type"
		},
		"18956": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "__type.swap_id"
		},
		"18957": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "useAdminCreateSwapShipment"
		},
		"18958": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "useAdminCreateSwapShipment"
		},
		"18959": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "orderId"
		},
		"18960": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "options"
		},
		"18961": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "useAdminProcessSwapPayment"
		},
		"18962": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "useAdminProcessSwapPayment"
		},
		"18963": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "orderId"
		},
		"18964": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "options"
		},
		"18965": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "AdminCancelSwapFulfillmentReq"
		},
		"18966": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "__type"
		},
		"18967": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "__type.swap_id"
		},
		"18968": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "__type.fulfillment_id"
		},
		"18969": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "useAdminCancelSwapFulfillment"
		},
		"18970": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "useAdminCancelSwapFulfillment"
		},
		"18971": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "orderId"
		},
		"18972": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "options"
		},
		"18973": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "__type"
		},
		"18974": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "__type.swap_id"
		},
		"18975": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "__type.fulfillment_id"
		},
		"18976": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "__type"
		},
		"18977": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "__type.swap_id"
		},
		"18978": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "__type.fulfillment_id"
		},
		"18979": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/queries.ts",
			"qualifiedName": "adminTaxRateKeys"
		},
		"18980": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/queries.ts",
			"qualifiedName": "useAdminTaxRates"
		},
		"18981": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/queries.ts",
			"qualifiedName": "useAdminTaxRates"
		},
		"18982": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/queries.ts",
			"qualifiedName": "query"
		},
		"18983": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/queries.ts",
			"qualifiedName": "options"
		},
		"18984": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"18985": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"18986": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/queries.ts",
			"qualifiedName": "__object"
		},
		"18987": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"18988": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"18989": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"18990": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
			"qualifiedName": "tax_rates"
		},
		"18991": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18992": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/queries.ts",
			"qualifiedName": "__object"
		},
		"18993": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"18994": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"18995": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"18996": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
			"qualifiedName": "tax_rates"
		},
		"18997": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"18998": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/queries.ts",
			"qualifiedName": "__object"
		},
		"18999": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"19000": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"19001": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"19002": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
			"qualifiedName": "tax_rates"
		},
		"19003": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19004": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/queries.ts",
			"qualifiedName": "__object"
		},
		"19005": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"19006": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"19007": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"19008": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
			"qualifiedName": "tax_rates"
		},
		"19009": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19010": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/queries.ts",
			"qualifiedName": "useAdminTaxRate"
		},
		"19011": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/queries.ts",
			"qualifiedName": "useAdminTaxRate"
		},
		"19012": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/queries.ts",
			"qualifiedName": "id"
		},
		"19013": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/queries.ts",
			"qualifiedName": "query"
		},
		"19014": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/queries.ts",
			"qualifiedName": "options"
		},
		"19015": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/queries.ts",
			"qualifiedName": "__object"
		},
		"19016": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
			"qualifiedName": "tax_rate"
		},
		"19017": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19018": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/queries.ts",
			"qualifiedName": "__object"
		},
		"19019": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
			"qualifiedName": "tax_rate"
		},
		"19020": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19021": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/queries.ts",
			"qualifiedName": "__object"
		},
		"19022": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
			"qualifiedName": "tax_rate"
		},
		"19023": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19024": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/queries.ts",
			"qualifiedName": "__object"
		},
		"19025": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
			"qualifiedName": "tax_rate"
		},
		"19026": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19027": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "useAdminCreateTaxRate"
		},
		"19028": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "useAdminCreateTaxRate"
		},
		"19029": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "options"
		},
		"19030": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "useAdminUpdateTaxRate"
		},
		"19031": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "useAdminUpdateTaxRate"
		},
		"19032": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "id"
		},
		"19033": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "options"
		},
		"19034": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "useAdminDeleteTaxRate"
		},
		"19035": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "useAdminDeleteTaxRate"
		},
		"19036": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "id"
		},
		"19037": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "options"
		},
		"19038": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "useAdminCreateProductTaxRates"
		},
		"19039": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "useAdminCreateProductTaxRates"
		},
		"19040": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "id"
		},
		"19041": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "options"
		},
		"19042": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "useAdminDeleteProductTaxRates"
		},
		"19043": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "useAdminDeleteProductTaxRates"
		},
		"19044": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "id"
		},
		"19045": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "options"
		},
		"19046": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "useAdminCreateProductTypeTaxRates"
		},
		"19047": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "useAdminCreateProductTypeTaxRates"
		},
		"19048": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "id"
		},
		"19049": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "options"
		},
		"19050": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "useAdminDeleteProductTypeTaxRates"
		},
		"19051": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "useAdminDeleteProductTypeTaxRates"
		},
		"19052": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "id"
		},
		"19053": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "options"
		},
		"19054": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "useAdminCreateShippingTaxRates"
		},
		"19055": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "useAdminCreateShippingTaxRates"
		},
		"19056": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "id"
		},
		"19057": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "options"
		},
		"19058": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "useAdminDeleteShippingTaxRates"
		},
		"19059": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "useAdminDeleteShippingTaxRates"
		},
		"19060": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "id"
		},
		"19061": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "options"
		},
		"19062": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/uploads/mutations.ts",
			"qualifiedName": "useAdminUploadFile"
		},
		"19063": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/uploads/mutations.ts",
			"qualifiedName": "useAdminUploadFile"
		},
		"19064": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/uploads/mutations.ts",
			"qualifiedName": "options"
		},
		"19065": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/uploads/mutations.ts",
			"qualifiedName": "useAdminUploadProtectedFile"
		},
		"19066": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/uploads/mutations.ts",
			"qualifiedName": "useAdminUploadProtectedFile"
		},
		"19067": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/uploads/mutations.ts",
			"qualifiedName": "options"
		},
		"19068": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/uploads/mutations.ts",
			"qualifiedName": "useAdminCreatePresignedDownloadUrl"
		},
		"19069": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/uploads/mutations.ts",
			"qualifiedName": "useAdminCreatePresignedDownloadUrl"
		},
		"19070": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/uploads/mutations.ts",
			"qualifiedName": "options"
		},
		"19071": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/uploads/mutations.ts",
			"qualifiedName": "useAdminDeleteFile"
		},
		"19072": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/uploads/mutations.ts",
			"qualifiedName": "useAdminDeleteFile"
		},
		"19073": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/uploads/mutations.ts",
			"qualifiedName": "options"
		},
		"19074": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/queries.ts",
			"qualifiedName": "adminUserKeys"
		},
		"19075": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/queries.ts",
			"qualifiedName": "useAdminUsers"
		},
		"19076": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/queries.ts",
			"qualifiedName": "useAdminUsers"
		},
		"19077": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/queries.ts",
			"qualifiedName": "query"
		},
		"19078": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/queries.ts",
			"qualifiedName": "options"
		},
		"19079": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"19080": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"19081": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/queries.ts",
			"qualifiedName": "__object"
		},
		"19082": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "limit"
		},
		"19083": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "offset"
		},
		"19084": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "count"
		},
		"19085": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/users/index.d.ts",
			"qualifiedName": "users"
		},
		"19086": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19087": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/queries.ts",
			"qualifiedName": "__object"
		},
		"19088": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "limit"
		},
		"19089": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "offset"
		},
		"19090": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "count"
		},
		"19091": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/users/index.d.ts",
			"qualifiedName": "users"
		},
		"19092": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19093": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/queries.ts",
			"qualifiedName": "__object"
		},
		"19094": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "limit"
		},
		"19095": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "offset"
		},
		"19096": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "count"
		},
		"19097": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/users/index.d.ts",
			"qualifiedName": "users"
		},
		"19098": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19099": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/queries.ts",
			"qualifiedName": "__object"
		},
		"19100": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "limit"
		},
		"19101": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "offset"
		},
		"19102": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "count"
		},
		"19103": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/users/index.d.ts",
			"qualifiedName": "users"
		},
		"19104": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19105": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/queries.ts",
			"qualifiedName": "useAdminUser"
		},
		"19106": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/queries.ts",
			"qualifiedName": "useAdminUser"
		},
		"19107": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/queries.ts",
			"qualifiedName": "id"
		},
		"19108": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/queries.ts",
			"qualifiedName": "options"
		},
		"19109": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/queries.ts",
			"qualifiedName": "__object"
		},
		"19110": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/users/index.d.ts",
			"qualifiedName": "user"
		},
		"19111": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19112": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/queries.ts",
			"qualifiedName": "__object"
		},
		"19113": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/users/index.d.ts",
			"qualifiedName": "user"
		},
		"19114": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19115": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/queries.ts",
			"qualifiedName": "__object"
		},
		"19116": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/users/index.d.ts",
			"qualifiedName": "user"
		},
		"19117": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19118": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/queries.ts",
			"qualifiedName": "__object"
		},
		"19119": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/users/index.d.ts",
			"qualifiedName": "user"
		},
		"19120": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19121": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/mutations.ts",
			"qualifiedName": "useAdminCreateUser"
		},
		"19122": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/mutations.ts",
			"qualifiedName": "useAdminCreateUser"
		},
		"19123": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/mutations.ts",
			"qualifiedName": "options"
		},
		"19124": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/mutations.ts",
			"qualifiedName": "useAdminUpdateUser"
		},
		"19125": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/mutations.ts",
			"qualifiedName": "useAdminUpdateUser"
		},
		"19126": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/mutations.ts",
			"qualifiedName": "id"
		},
		"19127": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/mutations.ts",
			"qualifiedName": "options"
		},
		"19128": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/mutations.ts",
			"qualifiedName": "useAdminDeleteUser"
		},
		"19129": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/mutations.ts",
			"qualifiedName": "useAdminDeleteUser"
		},
		"19130": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/mutations.ts",
			"qualifiedName": "id"
		},
		"19131": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/mutations.ts",
			"qualifiedName": "options"
		},
		"19132": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/mutations.ts",
			"qualifiedName": "useAdminResetPassword"
		},
		"19133": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/mutations.ts",
			"qualifiedName": "useAdminResetPassword"
		},
		"19134": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/mutations.ts",
			"qualifiedName": "options"
		},
		"19135": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/mutations.ts",
			"qualifiedName": "useAdminSendResetPasswordToken"
		},
		"19136": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/mutations.ts",
			"qualifiedName": "useAdminSendResetPasswordToken"
		},
		"19137": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/mutations.ts",
			"qualifiedName": "options"
		},
		"19138": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "adminVariantKeys"
		},
		"19139": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "useAdminVariants"
		},
		"19140": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "useAdminVariants"
		},
		"19141": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "query"
		},
		"19142": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "options"
		},
		"19143": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"19144": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"19145": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "__object"
		},
		"19146": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"19147": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"19148": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"19149": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/variants/index.d.ts",
			"qualifiedName": "variants"
		},
		"19150": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19151": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "__object"
		},
		"19152": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"19153": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"19154": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"19155": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/variants/index.d.ts",
			"qualifiedName": "variants"
		},
		"19156": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19157": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "__object"
		},
		"19158": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"19159": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"19160": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"19161": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/variants/index.d.ts",
			"qualifiedName": "variants"
		},
		"19162": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19163": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "__object"
		},
		"19164": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"19165": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"19166": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"19167": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/variants/index.d.ts",
			"qualifiedName": "variants"
		},
		"19168": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19169": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "useAdminVariant"
		},
		"19170": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "useAdminVariant"
		},
		"19171": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "id"
		},
		"19172": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "query"
		},
		"19173": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "options"
		},
		"19174": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "__object"
		},
		"19175": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/variants/index.d.ts",
			"qualifiedName": "variant"
		},
		"19176": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19177": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "__object"
		},
		"19178": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/variants/index.d.ts",
			"qualifiedName": "variant"
		},
		"19179": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19180": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "__object"
		},
		"19181": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/variants/index.d.ts",
			"qualifiedName": "variant"
		},
		"19182": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19183": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "__object"
		},
		"19184": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/variants/index.d.ts",
			"qualifiedName": "variant"
		},
		"19185": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19186": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "useAdminVariantsInventory"
		},
		"19187": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "useAdminVariantsInventory"
		},
		"19188": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "id"
		},
		"19189": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "options"
		},
		"19190": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "__object"
		},
		"19191": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/variants/get-inventory.d.ts",
			"qualifiedName": "variant"
		},
		"19192": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19193": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "__object"
		},
		"19194": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/variants/get-inventory.d.ts",
			"qualifiedName": "variant"
		},
		"19195": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19196": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "__object"
		},
		"19197": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/variants/get-inventory.d.ts",
			"qualifiedName": "variant"
		},
		"19198": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19199": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "__object"
		},
		"19200": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/variants/get-inventory.d.ts",
			"qualifiedName": "variant"
		},
		"19201": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19202": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/queries.ts",
			"qualifiedName": "cartKeys"
		},
		"19203": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/queries.ts",
			"qualifiedName": "useGetCart"
		},
		"19204": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/queries.ts",
			"qualifiedName": "useGetCart"
		},
		"19205": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/queries.ts",
			"qualifiedName": "id"
		},
		"19206": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/queries.ts",
			"qualifiedName": "options"
		},
		"19207": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/queries.ts",
			"qualifiedName": "__object"
		},
		"19208": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
			"qualifiedName": "cart"
		},
		"19209": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19210": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/queries.ts",
			"qualifiedName": "__object"
		},
		"19211": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
			"qualifiedName": "cart"
		},
		"19212": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19213": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/queries.ts",
			"qualifiedName": "__object"
		},
		"19214": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
			"qualifiedName": "cart"
		},
		"19215": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19216": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/queries.ts",
			"qualifiedName": "__object"
		},
		"19217": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
			"qualifiedName": "cart"
		},
		"19218": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19219": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "CreateCartReq"
		},
		"19220": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "useCreateCart"
		},
		"19221": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "useCreateCart"
		},
		"19222": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "options"
		},
		"19223": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "useUpdateCart"
		},
		"19224": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "useUpdateCart"
		},
		"19225": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "cartId"
		},
		"19226": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "options"
		},
		"19227": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "useCompleteCart"
		},
		"19228": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "useCompleteCart"
		},
		"19229": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "cartId"
		},
		"19230": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "options"
		},
		"19231": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "useCreatePaymentSession"
		},
		"19232": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "useCreatePaymentSession"
		},
		"19233": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "cartId"
		},
		"19234": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "options"
		},
		"19235": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "UpdatePaymentSessionReq"
		},
		"19236": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "__type"
		},
		"19237": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "__type.provider_id"
		},
		"19238": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "useUpdatePaymentSession"
		},
		"19239": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "useUpdatePaymentSession"
		},
		"19240": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "cartId"
		},
		"19241": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "options"
		},
		"19242": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "RefreshPaymentSessionMutationData"
		},
		"19243": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "__type"
		},
		"19244": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "__type.provider_id"
		},
		"19245": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "useRefreshPaymentSession"
		},
		"19246": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "useRefreshPaymentSession"
		},
		"19247": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "cartId"
		},
		"19248": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "options"
		},
		"19249": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "useSetPaymentSession"
		},
		"19250": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "useSetPaymentSession"
		},
		"19251": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "cartId"
		},
		"19252": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "options"
		},
		"19253": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "useAddShippingMethodToCart"
		},
		"19254": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "useAddShippingMethodToCart"
		},
		"19255": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "cartId"
		},
		"19256": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "options"
		},
		"19257": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "DeletePaymentSessionMutationData"
		},
		"19258": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "__type"
		},
		"19259": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "__type.provider_id"
		},
		"19260": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "useDeletePaymentSession"
		},
		"19261": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "useDeletePaymentSession"
		},
		"19262": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "cartId"
		},
		"19263": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "options"
		},
		"19264": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "useStartCheckout"
		},
		"19265": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "useStartCheckout"
		},
		"19266": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "options"
		},
		"19267": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/collections/queries.ts",
			"qualifiedName": "collectionKeys"
		},
		"19268": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/collections/queries.ts",
			"qualifiedName": "useCollection"
		},
		"19269": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/collections/queries.ts",
			"qualifiedName": "useCollection"
		},
		"19270": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/collections/queries.ts",
			"qualifiedName": "id"
		},
		"19271": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/collections/queries.ts",
			"qualifiedName": "options"
		},
		"19272": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/collections/queries.ts",
			"qualifiedName": "__object"
		},
		"19273": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/collections/index.d.ts",
			"qualifiedName": "collection"
		},
		"19274": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19275": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/collections/queries.ts",
			"qualifiedName": "__object"
		},
		"19276": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/collections/index.d.ts",
			"qualifiedName": "collection"
		},
		"19277": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19278": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/collections/queries.ts",
			"qualifiedName": "__object"
		},
		"19279": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/collections/index.d.ts",
			"qualifiedName": "collection"
		},
		"19280": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19281": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/collections/queries.ts",
			"qualifiedName": "__object"
		},
		"19282": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/collections/index.d.ts",
			"qualifiedName": "collection"
		},
		"19283": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19284": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/collections/queries.ts",
			"qualifiedName": "useCollections"
		},
		"19285": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/collections/queries.ts",
			"qualifiedName": "useCollections"
		},
		"19286": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/collections/queries.ts",
			"qualifiedName": "query"
		},
		"19287": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/collections/queries.ts",
			"qualifiedName": "options"
		},
		"19288": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"19289": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"19290": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/collections/queries.ts",
			"qualifiedName": "__object"
		},
		"19291": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"19292": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"19293": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"19294": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/collections/index.d.ts",
			"qualifiedName": "collections"
		},
		"19295": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19296": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/collections/queries.ts",
			"qualifiedName": "__object"
		},
		"19297": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"19298": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"19299": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"19300": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/collections/index.d.ts",
			"qualifiedName": "collections"
		},
		"19301": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19302": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/collections/queries.ts",
			"qualifiedName": "__object"
		},
		"19303": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"19304": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"19305": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"19306": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/collections/index.d.ts",
			"qualifiedName": "collections"
		},
		"19307": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19308": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/collections/queries.ts",
			"qualifiedName": "__object"
		},
		"19309": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"19310": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"19311": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"19312": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/collections/index.d.ts",
			"qualifiedName": "collections"
		},
		"19313": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19314": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/queries.ts",
			"qualifiedName": "customerKeys"
		},
		"19315": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/queries.ts",
			"qualifiedName": "__object"
		},
		"19316": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/queries.ts",
			"qualifiedName": "__object.orders"
		},
		"19317": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/queries.ts",
			"qualifiedName": "__function"
		},
		"19318": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/queries.ts",
			"qualifiedName": "__function"
		},
		"19319": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/queries.ts",
			"qualifiedName": "id"
		},
		"19320": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.all"
		},
		"19321": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.lists"
		},
		"19322": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"19323": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"19324": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.list"
		},
		"19325": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"19326": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"19327": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "query"
		},
		"19328": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"19329": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"19330": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.details"
		},
		"19331": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"19332": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"19333": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.detail"
		},
		"19334": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"19335": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"19336": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "id"
		},
		"19337": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/queries.ts",
			"qualifiedName": "useMeCustomer"
		},
		"19338": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/queries.ts",
			"qualifiedName": "useMeCustomer"
		},
		"19339": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/queries.ts",
			"qualifiedName": "options"
		},
		"19340": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/queries.ts",
			"qualifiedName": "__object"
		},
		"19341": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/customers/index.d.ts",
			"qualifiedName": "customer"
		},
		"19342": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19343": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/queries.ts",
			"qualifiedName": "__object"
		},
		"19344": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/customers/index.d.ts",
			"qualifiedName": "customer"
		},
		"19345": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19346": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/queries.ts",
			"qualifiedName": "__object"
		},
		"19347": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/customers/index.d.ts",
			"qualifiedName": "customer"
		},
		"19348": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19349": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/queries.ts",
			"qualifiedName": "__object"
		},
		"19350": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/customers/index.d.ts",
			"qualifiedName": "customer"
		},
		"19351": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19352": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/queries.ts",
			"qualifiedName": "useCustomerOrders"
		},
		"19353": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/queries.ts",
			"qualifiedName": "useCustomerOrders"
		},
		"19354": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/queries.ts",
			"qualifiedName": "query"
		},
		"19355": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/queries.ts",
			"qualifiedName": "options"
		},
		"19356": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/queries.ts",
			"qualifiedName": "__object"
		},
		"19357": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"19358": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"19359": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"19360": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/customers/index.d.ts",
			"qualifiedName": "orders"
		},
		"19361": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19362": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/queries.ts",
			"qualifiedName": "__object"
		},
		"19363": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"19364": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"19365": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"19366": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/customers/index.d.ts",
			"qualifiedName": "orders"
		},
		"19367": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19368": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/queries.ts",
			"qualifiedName": "__object"
		},
		"19369": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"19370": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"19371": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"19372": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/customers/index.d.ts",
			"qualifiedName": "orders"
		},
		"19373": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19374": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/queries.ts",
			"qualifiedName": "__object"
		},
		"19375": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"19376": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"19377": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"19378": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/customers/index.d.ts",
			"qualifiedName": "orders"
		},
		"19379": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19380": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/mutations.ts",
			"qualifiedName": "useCreateCustomer"
		},
		"19381": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/mutations.ts",
			"qualifiedName": "useCreateCustomer"
		},
		"19382": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/mutations.ts",
			"qualifiedName": "options"
		},
		"19383": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/mutations.ts",
			"qualifiedName": "UpdateMeReq"
		},
		"19384": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/mutations.ts",
			"qualifiedName": "__type"
		},
		"19385": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/mutations.ts",
			"qualifiedName": "__type.id"
		},
		"19386": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/mutations.ts",
			"qualifiedName": "useUpdateMe"
		},
		"19387": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/mutations.ts",
			"qualifiedName": "useUpdateMe"
		},
		"19388": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/mutations.ts",
			"qualifiedName": "options"
		},
		"19389": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/gift-cards/queries.ts",
			"qualifiedName": "giftCardKeys"
		},
		"19390": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/gift-cards/queries.ts",
			"qualifiedName": "useGiftCard"
		},
		"19391": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/gift-cards/queries.ts",
			"qualifiedName": "useGiftCard"
		},
		"19392": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/gift-cards/queries.ts",
			"qualifiedName": "id"
		},
		"19393": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/gift-cards/queries.ts",
			"qualifiedName": "options"
		},
		"19394": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/gift-cards/queries.ts",
			"qualifiedName": "__object"
		},
		"19395": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/gift-cards/index.d.ts",
			"qualifiedName": "gift_card"
		},
		"19396": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19397": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/gift-cards/queries.ts",
			"qualifiedName": "__object"
		},
		"19398": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/gift-cards/index.d.ts",
			"qualifiedName": "gift_card"
		},
		"19399": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19400": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/gift-cards/queries.ts",
			"qualifiedName": "__object"
		},
		"19401": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/gift-cards/index.d.ts",
			"qualifiedName": "gift_card"
		},
		"19402": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19403": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/gift-cards/queries.ts",
			"qualifiedName": "__object"
		},
		"19404": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/gift-cards/index.d.ts",
			"qualifiedName": "gift_card"
		},
		"19405": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19406": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/line-items/mutations.ts",
			"qualifiedName": "useCreateLineItem"
		},
		"19407": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/line-items/mutations.ts",
			"qualifiedName": "useCreateLineItem"
		},
		"19408": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/line-items/mutations.ts",
			"qualifiedName": "cartId"
		},
		"19409": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/line-items/mutations.ts",
			"qualifiedName": "options"
		},
		"19410": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/line-items/mutations.ts",
			"qualifiedName": "UpdateLineItemReq"
		},
		"19411": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/line-items/mutations.ts",
			"qualifiedName": "__type"
		},
		"19412": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/line-items/mutations.ts",
			"qualifiedName": "__type.lineId"
		},
		"19413": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/line-items/mutations.ts",
			"qualifiedName": "useUpdateLineItem"
		},
		"19414": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/line-items/mutations.ts",
			"qualifiedName": "useUpdateLineItem"
		},
		"19415": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/line-items/mutations.ts",
			"qualifiedName": "cartId"
		},
		"19416": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/line-items/mutations.ts",
			"qualifiedName": "options"
		},
		"19417": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/line-items/mutations.ts",
			"qualifiedName": "useDeleteLineItem"
		},
		"19418": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/line-items/mutations.ts",
			"qualifiedName": "useDeleteLineItem"
		},
		"19419": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/line-items/mutations.ts",
			"qualifiedName": "cartId"
		},
		"19420": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/line-items/mutations.ts",
			"qualifiedName": "options"
		},
		"19421": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/line-items/mutations.ts",
			"qualifiedName": "__type"
		},
		"19422": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/line-items/mutations.ts",
			"qualifiedName": "__type.lineId"
		},
		"19423": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/line-items/mutations.ts",
			"qualifiedName": "__type"
		},
		"19424": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/line-items/mutations.ts",
			"qualifiedName": "__type.lineId"
		},
		"19425": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/order-edits/queries.ts",
			"qualifiedName": "orderEditQueryKeys"
		},
		"19426": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/order-edits/queries.ts",
			"qualifiedName": "useOrderEdit"
		},
		"19427": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/order-edits/queries.ts",
			"qualifiedName": "useOrderEdit"
		},
		"19428": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/order-edits/queries.ts",
			"qualifiedName": "id"
		},
		"19429": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/order-edits/queries.ts",
			"qualifiedName": "options"
		},
		"19430": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/order-edits/queries.ts",
			"qualifiedName": "__object"
		},
		"19431": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/order-edits/index.d.ts",
			"qualifiedName": "order_edit"
		},
		"19432": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19433": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/order-edits/queries.ts",
			"qualifiedName": "__object"
		},
		"19434": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/order-edits/index.d.ts",
			"qualifiedName": "order_edit"
		},
		"19435": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19436": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/order-edits/queries.ts",
			"qualifiedName": "__object"
		},
		"19437": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/order-edits/index.d.ts",
			"qualifiedName": "order_edit"
		},
		"19438": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19439": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/order-edits/queries.ts",
			"qualifiedName": "__object"
		},
		"19440": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/order-edits/index.d.ts",
			"qualifiedName": "order_edit"
		},
		"19441": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19442": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/order-edits/mutations.ts",
			"qualifiedName": "useDeclineOrderEdit"
		},
		"19443": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/order-edits/mutations.ts",
			"qualifiedName": "useDeclineOrderEdit"
		},
		"19444": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/order-edits/mutations.ts",
			"qualifiedName": "id"
		},
		"19445": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/order-edits/mutations.ts",
			"qualifiedName": "options"
		},
		"19446": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/order-edits/mutations.ts",
			"qualifiedName": "useCompleteOrderEdit"
		},
		"19447": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/order-edits/mutations.ts",
			"qualifiedName": "useCompleteOrderEdit"
		},
		"19448": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/order-edits/mutations.ts",
			"qualifiedName": "id"
		},
		"19449": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/order-edits/mutations.ts",
			"qualifiedName": "options"
		},
		"19450": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "orderKeys"
		},
		"19451": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "__object"
		},
		"19452": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "__object.cart"
		},
		"19453": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "__function"
		},
		"19454": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "__function"
		},
		"19455": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "cartId"
		},
		"19456": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.all"
		},
		"19457": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.lists"
		},
		"19458": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"19459": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"19460": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.list"
		},
		"19461": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"19462": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"19463": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "query"
		},
		"19464": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"19465": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"19466": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.details"
		},
		"19467": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"19468": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"19469": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.detail"
		},
		"19470": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"19471": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"19472": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "id"
		},
		"19473": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "useOrder"
		},
		"19474": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "useOrder"
		},
		"19475": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "id"
		},
		"19476": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "options"
		},
		"19477": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "__object"
		},
		"19478": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/orders/index.d.ts",
			"qualifiedName": "order"
		},
		"19479": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19480": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "__object"
		},
		"19481": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/orders/index.d.ts",
			"qualifiedName": "order"
		},
		"19482": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19483": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "__object"
		},
		"19484": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/orders/index.d.ts",
			"qualifiedName": "order"
		},
		"19485": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19486": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "__object"
		},
		"19487": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/orders/index.d.ts",
			"qualifiedName": "order"
		},
		"19488": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19489": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "useCartOrder"
		},
		"19490": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "useCartOrder"
		},
		"19491": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "cartId"
		},
		"19492": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "options"
		},
		"19493": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "__object"
		},
		"19494": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/orders/index.d.ts",
			"qualifiedName": "order"
		},
		"19495": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19496": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "__object"
		},
		"19497": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/orders/index.d.ts",
			"qualifiedName": "order"
		},
		"19498": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19499": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "__object"
		},
		"19500": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/orders/index.d.ts",
			"qualifiedName": "order"
		},
		"19501": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19502": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "__object"
		},
		"19503": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/orders/index.d.ts",
			"qualifiedName": "order"
		},
		"19504": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19505": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "useOrders"
		},
		"19506": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "useOrders"
		},
		"19507": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "query"
		},
		"19508": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "options"
		},
		"19509": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"19510": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"19511": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "__object"
		},
		"19512": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/orders/index.d.ts",
			"qualifiedName": "order"
		},
		"19513": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19514": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "__object"
		},
		"19515": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/orders/index.d.ts",
			"qualifiedName": "order"
		},
		"19516": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19517": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "__object"
		},
		"19518": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/orders/index.d.ts",
			"qualifiedName": "order"
		},
		"19519": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19520": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "__object"
		},
		"19521": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/orders/index.d.ts",
			"qualifiedName": "order"
		},
		"19522": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19523": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/mutations.ts",
			"qualifiedName": "useRequestOrderAccess"
		},
		"19524": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/mutations.ts",
			"qualifiedName": "useRequestOrderAccess"
		},
		"19525": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/mutations.ts",
			"qualifiedName": "options"
		},
		"19526": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "__type"
		},
		"19527": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "__type.response"
		},
		"19528": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "__type"
		},
		"19529": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "__type.response"
		},
		"19530": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/mutations.ts",
			"qualifiedName": "useGrantOrderAccess"
		},
		"19531": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/mutations.ts",
			"qualifiedName": "useGrantOrderAccess"
		},
		"19532": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/mutations.ts",
			"qualifiedName": "options"
		},
		"19533": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "__type"
		},
		"19534": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "__type.response"
		},
		"19535": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "__type"
		},
		"19536": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "__type.response"
		},
		"19537": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/queries.ts",
			"qualifiedName": "paymentCollectionQueryKeys"
		},
		"19538": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/queries.ts",
			"qualifiedName": "usePaymentCollection"
		},
		"19539": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/queries.ts",
			"qualifiedName": "usePaymentCollection"
		},
		"19540": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/queries.ts",
			"qualifiedName": "id"
		},
		"19541": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/queries.ts",
			"qualifiedName": "options"
		},
		"19542": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/queries.ts",
			"qualifiedName": "__object"
		},
		"19543": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/payment-collections/index.d.ts",
			"qualifiedName": "payment_collection"
		},
		"19544": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19545": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/queries.ts",
			"qualifiedName": "__object"
		},
		"19546": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/payment-collections/index.d.ts",
			"qualifiedName": "payment_collection"
		},
		"19547": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19548": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/queries.ts",
			"qualifiedName": "__object"
		},
		"19549": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/payment-collections/index.d.ts",
			"qualifiedName": "payment_collection"
		},
		"19550": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19551": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/queries.ts",
			"qualifiedName": "__object"
		},
		"19552": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/payment-collections/index.d.ts",
			"qualifiedName": "payment_collection"
		},
		"19553": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19554": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/mutations.ts",
			"qualifiedName": "useManageMultiplePaymentSessions"
		},
		"19555": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/mutations.ts",
			"qualifiedName": "useManageMultiplePaymentSessions"
		},
		"19556": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/mutations.ts",
			"qualifiedName": "id"
		},
		"19557": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/mutations.ts",
			"qualifiedName": "options"
		},
		"19558": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/mutations.ts",
			"qualifiedName": "useManagePaymentSession"
		},
		"19559": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/mutations.ts",
			"qualifiedName": "useManagePaymentSession"
		},
		"19560": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/mutations.ts",
			"qualifiedName": "id"
		},
		"19561": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/mutations.ts",
			"qualifiedName": "options"
		},
		"19562": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/mutations.ts",
			"qualifiedName": "useAuthorizePaymentSession"
		},
		"19563": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/mutations.ts",
			"qualifiedName": "useAuthorizePaymentSession"
		},
		"19564": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/mutations.ts",
			"qualifiedName": "id"
		},
		"19565": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/mutations.ts",
			"qualifiedName": "options"
		},
		"19566": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/mutations.ts",
			"qualifiedName": "useAuthorizePaymentSessionsBatch"
		},
		"19567": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/mutations.ts",
			"qualifiedName": "useAuthorizePaymentSessionsBatch"
		},
		"19568": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/mutations.ts",
			"qualifiedName": "id"
		},
		"19569": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/mutations.ts",
			"qualifiedName": "options"
		},
		"19570": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/mutations.ts",
			"qualifiedName": "usePaymentCollectionRefreshPaymentSession"
		},
		"19571": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/mutations.ts",
			"qualifiedName": "usePaymentCollectionRefreshPaymentSession"
		},
		"19572": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/mutations.ts",
			"qualifiedName": "id"
		},
		"19573": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/mutations.ts",
			"qualifiedName": "options"
		},
		"19574": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-categories/queries.ts",
			"qualifiedName": "storeProductCategoryKeys"
		},
		"19575": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-categories/queries.ts",
			"qualifiedName": "useProductCategories"
		},
		"19576": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-categories/queries.ts",
			"qualifiedName": "useProductCategories"
		},
		"19577": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-categories/queries.ts",
			"qualifiedName": "query"
		},
		"19578": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-categories/queries.ts",
			"qualifiedName": "options"
		},
		"19579": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"19580": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"19581": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-categories/queries.ts",
			"qualifiedName": "__object"
		},
		"19582": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"19583": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"19584": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"19585": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/product-categories/index.d.ts",
			"qualifiedName": "product_categories"
		},
		"19586": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19587": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-categories/queries.ts",
			"qualifiedName": "__object"
		},
		"19588": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"19589": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"19590": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"19591": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/product-categories/index.d.ts",
			"qualifiedName": "product_categories"
		},
		"19592": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19593": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-categories/queries.ts",
			"qualifiedName": "__object"
		},
		"19594": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"19595": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"19596": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"19597": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/product-categories/index.d.ts",
			"qualifiedName": "product_categories"
		},
		"19598": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19599": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-categories/queries.ts",
			"qualifiedName": "__object"
		},
		"19600": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"19601": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"19602": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"19603": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/product-categories/index.d.ts",
			"qualifiedName": "product_categories"
		},
		"19604": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19605": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-categories/queries.ts",
			"qualifiedName": "useProductCategory"
		},
		"19606": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-categories/queries.ts",
			"qualifiedName": "useProductCategory"
		},
		"19607": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-categories/queries.ts",
			"qualifiedName": "id"
		},
		"19608": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-categories/queries.ts",
			"qualifiedName": "query"
		},
		"19609": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-categories/queries.ts",
			"qualifiedName": "options"
		},
		"19610": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-categories/queries.ts",
			"qualifiedName": "__object"
		},
		"19611": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/product-categories/index.d.ts",
			"qualifiedName": "product_category"
		},
		"19612": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19613": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-categories/queries.ts",
			"qualifiedName": "__object"
		},
		"19614": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/product-categories/index.d.ts",
			"qualifiedName": "product_category"
		},
		"19615": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19616": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-categories/queries.ts",
			"qualifiedName": "__object"
		},
		"19617": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/product-categories/index.d.ts",
			"qualifiedName": "product_category"
		},
		"19618": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19619": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-categories/queries.ts",
			"qualifiedName": "__object"
		},
		"19620": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/product-categories/index.d.ts",
			"qualifiedName": "product_category"
		},
		"19621": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19622": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-tags/queries.ts",
			"qualifiedName": "productTagKeys"
		},
		"19623": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-tags/queries.ts",
			"qualifiedName": "useProductTags"
		},
		"19624": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-tags/queries.ts",
			"qualifiedName": "useProductTags"
		},
		"19625": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-tags/queries.ts",
			"qualifiedName": "query"
		},
		"19626": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-tags/queries.ts",
			"qualifiedName": "options"
		},
		"19627": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"19628": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"19629": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-tags/queries.ts",
			"qualifiedName": "__object"
		},
		"19630": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"19631": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"19632": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"19633": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/product-tags/index.d.ts",
			"qualifiedName": "product_tags"
		},
		"19634": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19635": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-tags/queries.ts",
			"qualifiedName": "__object"
		},
		"19636": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"19637": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"19638": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"19639": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/product-tags/index.d.ts",
			"qualifiedName": "product_tags"
		},
		"19640": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19641": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-tags/queries.ts",
			"qualifiedName": "__object"
		},
		"19642": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"19643": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"19644": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"19645": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/product-tags/index.d.ts",
			"qualifiedName": "product_tags"
		},
		"19646": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19647": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-tags/queries.ts",
			"qualifiedName": "__object"
		},
		"19648": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"19649": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"19650": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"19651": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/product-tags/index.d.ts",
			"qualifiedName": "product_tags"
		},
		"19652": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19653": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-types/queries.ts",
			"qualifiedName": "productTypeKeys"
		},
		"19654": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-types/queries.ts",
			"qualifiedName": "useProductTypes"
		},
		"19655": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-types/queries.ts",
			"qualifiedName": "useProductTypes"
		},
		"19656": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-types/queries.ts",
			"qualifiedName": "query"
		},
		"19657": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-types/queries.ts",
			"qualifiedName": "options"
		},
		"19658": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"19659": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"19660": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-types/queries.ts",
			"qualifiedName": "__object"
		},
		"19661": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"19662": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"19663": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"19664": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/product-types/index.d.ts",
			"qualifiedName": "product_types"
		},
		"19665": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19666": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-types/queries.ts",
			"qualifiedName": "__object"
		},
		"19667": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"19668": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"19669": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"19670": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/product-types/index.d.ts",
			"qualifiedName": "product_types"
		},
		"19671": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19672": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-types/queries.ts",
			"qualifiedName": "__object"
		},
		"19673": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"19674": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"19675": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"19676": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/product-types/index.d.ts",
			"qualifiedName": "product_types"
		},
		"19677": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19678": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-types/queries.ts",
			"qualifiedName": "__object"
		},
		"19679": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"19680": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"19681": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"19682": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/product-types/index.d.ts",
			"qualifiedName": "product_types"
		},
		"19683": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19684": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/products/queries.ts",
			"qualifiedName": "productKeys"
		},
		"19685": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/products/queries.ts",
			"qualifiedName": "useProducts"
		},
		"19686": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/products/queries.ts",
			"qualifiedName": "useProducts"
		},
		"19687": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/products/queries.ts",
			"qualifiedName": "query"
		},
		"19688": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/products/queries.ts",
			"qualifiedName": "options"
		},
		"19689": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"19690": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"19691": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/products/queries.ts",
			"qualifiedName": "__object"
		},
		"19692": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"19693": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"19694": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"19695": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/products/index.d.ts",
			"qualifiedName": "products"
		},
		"19696": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19697": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/products/queries.ts",
			"qualifiedName": "__object"
		},
		"19698": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"19699": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"19700": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"19701": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/products/index.d.ts",
			"qualifiedName": "products"
		},
		"19702": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19703": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/products/queries.ts",
			"qualifiedName": "__object"
		},
		"19704": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"19705": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"19706": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"19707": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/products/index.d.ts",
			"qualifiedName": "products"
		},
		"19708": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19709": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/products/queries.ts",
			"qualifiedName": "__object"
		},
		"19710": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"19711": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"19712": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"19713": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/products/index.d.ts",
			"qualifiedName": "products"
		},
		"19714": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19715": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/products/queries.ts",
			"qualifiedName": "useProduct"
		},
		"19716": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/products/queries.ts",
			"qualifiedName": "useProduct"
		},
		"19717": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/products/queries.ts",
			"qualifiedName": "id"
		},
		"19718": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/products/queries.ts",
			"qualifiedName": "options"
		},
		"19719": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/products/queries.ts",
			"qualifiedName": "__object"
		},
		"19720": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/products/index.d.ts",
			"qualifiedName": "product"
		},
		"19721": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19722": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/products/queries.ts",
			"qualifiedName": "__object"
		},
		"19723": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/products/index.d.ts",
			"qualifiedName": "product"
		},
		"19724": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19725": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/products/queries.ts",
			"qualifiedName": "__object"
		},
		"19726": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/products/index.d.ts",
			"qualifiedName": "product"
		},
		"19727": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19728": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/products/queries.ts",
			"qualifiedName": "__object"
		},
		"19729": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/products/index.d.ts",
			"qualifiedName": "product"
		},
		"19730": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19731": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/regions/queries.ts",
			"qualifiedName": "useRegions"
		},
		"19732": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/regions/queries.ts",
			"qualifiedName": "useRegions"
		},
		"19733": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/regions/queries.ts",
			"qualifiedName": "options"
		},
		"19734": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/regions/queries.ts",
			"qualifiedName": "__object"
		},
		"19735": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "limit"
		},
		"19736": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "offset"
		},
		"19737": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "count"
		},
		"19738": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/regions/index.d.ts",
			"qualifiedName": "regions"
		},
		"19739": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19740": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/regions/queries.ts",
			"qualifiedName": "__object"
		},
		"19741": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "limit"
		},
		"19742": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "offset"
		},
		"19743": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "count"
		},
		"19744": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/regions/index.d.ts",
			"qualifiedName": "regions"
		},
		"19745": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19746": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/regions/queries.ts",
			"qualifiedName": "__object"
		},
		"19747": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "limit"
		},
		"19748": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "offset"
		},
		"19749": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "count"
		},
		"19750": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/regions/index.d.ts",
			"qualifiedName": "regions"
		},
		"19751": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19752": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/regions/queries.ts",
			"qualifiedName": "__object"
		},
		"19753": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "limit"
		},
		"19754": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "offset"
		},
		"19755": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "count"
		},
		"19756": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/regions/index.d.ts",
			"qualifiedName": "regions"
		},
		"19757": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19758": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/regions/queries.ts",
			"qualifiedName": "useRegion"
		},
		"19759": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/regions/queries.ts",
			"qualifiedName": "useRegion"
		},
		"19760": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/regions/queries.ts",
			"qualifiedName": "id"
		},
		"19761": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/regions/queries.ts",
			"qualifiedName": "options"
		},
		"19762": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/regions/queries.ts",
			"qualifiedName": "__object"
		},
		"19763": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/regions/index.d.ts",
			"qualifiedName": "region"
		},
		"19764": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19765": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/regions/queries.ts",
			"qualifiedName": "__object"
		},
		"19766": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/regions/index.d.ts",
			"qualifiedName": "region"
		},
		"19767": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19768": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/regions/queries.ts",
			"qualifiedName": "__object"
		},
		"19769": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/regions/index.d.ts",
			"qualifiedName": "region"
		},
		"19770": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19771": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/regions/queries.ts",
			"qualifiedName": "__object"
		},
		"19772": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/regions/index.d.ts",
			"qualifiedName": "region"
		},
		"19773": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19774": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/return-reasons/queries.ts",
			"qualifiedName": "useReturnReasons"
		},
		"19775": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/return-reasons/queries.ts",
			"qualifiedName": "useReturnReasons"
		},
		"19776": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/return-reasons/queries.ts",
			"qualifiedName": "options"
		},
		"19777": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/return-reasons/queries.ts",
			"qualifiedName": "__object"
		},
		"19778": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/return-reasons/index.d.ts",
			"qualifiedName": "return_reasons"
		},
		"19779": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19780": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/return-reasons/queries.ts",
			"qualifiedName": "__object"
		},
		"19781": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/return-reasons/index.d.ts",
			"qualifiedName": "return_reasons"
		},
		"19782": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19783": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/return-reasons/queries.ts",
			"qualifiedName": "__object"
		},
		"19784": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/return-reasons/index.d.ts",
			"qualifiedName": "return_reasons"
		},
		"19785": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19786": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/return-reasons/queries.ts",
			"qualifiedName": "__object"
		},
		"19787": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/return-reasons/index.d.ts",
			"qualifiedName": "return_reasons"
		},
		"19788": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19789": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/return-reasons/queries.ts",
			"qualifiedName": "useReturnReason"
		},
		"19790": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/return-reasons/queries.ts",
			"qualifiedName": "useReturnReason"
		},
		"19791": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/return-reasons/queries.ts",
			"qualifiedName": "id"
		},
		"19792": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/return-reasons/queries.ts",
			"qualifiedName": "options"
		},
		"19793": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/return-reasons/queries.ts",
			"qualifiedName": "__object"
		},
		"19794": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/return-reasons/index.d.ts",
			"qualifiedName": "return_reason"
		},
		"19795": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19796": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/return-reasons/queries.ts",
			"qualifiedName": "__object"
		},
		"19797": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/return-reasons/index.d.ts",
			"qualifiedName": "return_reason"
		},
		"19798": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19799": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/return-reasons/queries.ts",
			"qualifiedName": "__object"
		},
		"19800": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/return-reasons/index.d.ts",
			"qualifiedName": "return_reason"
		},
		"19801": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19802": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/return-reasons/queries.ts",
			"qualifiedName": "__object"
		},
		"19803": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/return-reasons/index.d.ts",
			"qualifiedName": "return_reason"
		},
		"19804": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19805": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/returns/mutations.ts",
			"qualifiedName": "useCreateReturn"
		},
		"19806": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/returns/mutations.ts",
			"qualifiedName": "useCreateReturn"
		},
		"19807": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/returns/mutations.ts",
			"qualifiedName": "options"
		},
		"19808": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/shipping-options/queries.ts",
			"qualifiedName": "useShippingOptions"
		},
		"19809": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/shipping-options/queries.ts",
			"qualifiedName": "useShippingOptions"
		},
		"19810": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/shipping-options/queries.ts",
			"qualifiedName": "query"
		},
		"19811": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/shipping-options/queries.ts",
			"qualifiedName": "options"
		},
		"19812": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"19813": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"19814": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/shipping-options/queries.ts",
			"qualifiedName": "__object"
		},
		"19815": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/shipping-options/index.d.ts",
			"qualifiedName": "shipping_options"
		},
		"19816": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19817": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/shipping-options/queries.ts",
			"qualifiedName": "__object"
		},
		"19818": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/shipping-options/index.d.ts",
			"qualifiedName": "shipping_options"
		},
		"19819": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19820": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/shipping-options/queries.ts",
			"qualifiedName": "__object"
		},
		"19821": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/shipping-options/index.d.ts",
			"qualifiedName": "shipping_options"
		},
		"19822": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19823": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/shipping-options/queries.ts",
			"qualifiedName": "__object"
		},
		"19824": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/shipping-options/index.d.ts",
			"qualifiedName": "shipping_options"
		},
		"19825": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19826": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/shipping-options/queries.ts",
			"qualifiedName": "useCartShippingOptions"
		},
		"19827": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/shipping-options/queries.ts",
			"qualifiedName": "useCartShippingOptions"
		},
		"19828": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/shipping-options/queries.ts",
			"qualifiedName": "cartId"
		},
		"19829": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/shipping-options/queries.ts",
			"qualifiedName": "options"
		},
		"19830": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/shipping-options/queries.ts",
			"qualifiedName": "__object"
		},
		"19831": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/shipping-options/index.d.ts",
			"qualifiedName": "shipping_options"
		},
		"19832": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19833": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/shipping-options/queries.ts",
			"qualifiedName": "__object"
		},
		"19834": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/shipping-options/index.d.ts",
			"qualifiedName": "shipping_options"
		},
		"19835": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19836": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/shipping-options/queries.ts",
			"qualifiedName": "__object"
		},
		"19837": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/shipping-options/index.d.ts",
			"qualifiedName": "shipping_options"
		},
		"19838": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19839": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/shipping-options/queries.ts",
			"qualifiedName": "__object"
		},
		"19840": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/shipping-options/index.d.ts",
			"qualifiedName": "shipping_options"
		},
		"19841": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19842": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/swaps/queries.ts",
			"qualifiedName": "useCartSwap"
		},
		"19843": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/swaps/queries.ts",
			"qualifiedName": "useCartSwap"
		},
		"19844": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/swaps/queries.ts",
			"qualifiedName": "cartId"
		},
		"19845": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/swaps/queries.ts",
			"qualifiedName": "options"
		},
		"19846": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/swaps/queries.ts",
			"qualifiedName": "__object"
		},
		"19847": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/swaps/index.d.ts",
			"qualifiedName": "swap"
		},
		"19848": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19849": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/swaps/queries.ts",
			"qualifiedName": "__object"
		},
		"19850": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/swaps/index.d.ts",
			"qualifiedName": "swap"
		},
		"19851": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19852": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/swaps/queries.ts",
			"qualifiedName": "__object"
		},
		"19853": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/swaps/index.d.ts",
			"qualifiedName": "swap"
		},
		"19854": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19855": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/swaps/queries.ts",
			"qualifiedName": "__object"
		},
		"19856": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/swaps/index.d.ts",
			"qualifiedName": "swap"
		},
		"19857": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"19858": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/swaps/mutations.ts",
			"qualifiedName": "useCreateSwap"
		},
		"19859": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/swaps/mutations.ts",
			"qualifiedName": "useCreateSwap"
		},
		"19860": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/swaps/mutations.ts",
			"qualifiedName": "options"
		},
		"19861": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/utils/queryKeysFactory.ts",
			"qualifiedName": "queryKeysFactory"
		},
		"19862": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/utils/queryKeysFactory.ts",
			"qualifiedName": "queryKeysFactory"
		},
		"19863": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/utils/queryKeysFactory.ts",
			"qualifiedName": "T"
		},
		"19864": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/utils/queryKeysFactory.ts",
			"qualifiedName": "TListQueryType"
		},
		"19865": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/utils/queryKeysFactory.ts",
			"qualifiedName": "TDetailQueryType"
		},
		"19866": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/utils/queryKeysFactory.ts",
			"qualifiedName": "globalKey"
		},
		"19867": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/utils/useLocalStorage.ts",
			"qualifiedName": "useLocalStorage"
		},
		"19868": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/utils/useLocalStorage.ts",
			"qualifiedName": "useLocalStorage"
		},
		"19869": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/utils/useLocalStorage.ts",
			"qualifiedName": "key"
		},
		"19870": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/utils/useLocalStorage.ts",
			"qualifiedName": "initialState"
		},
		"19871": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/utils/useLocalStorage.ts",
			"qualifiedName": "__function"
		},
		"19872": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/utils/useLocalStorage.ts",
			"qualifiedName": "__function"
		},
		"19873": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/utils/useLocalStorage.ts",
			"qualifiedName": "data"
		},
		"19874": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/utils/useLocalStorage.ts",
			"qualifiedName": "__function"
		},
		"19875": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/utils/useLocalStorage.ts",
			"qualifiedName": "__function"
		},
		"19876": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "UseQueryOptionsWrapper"
		},
		"19877": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "TQueryFn"
		},
		"19878": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "E"
		},
		"19879": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "TQueryKey"
		},
		"19880": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "ProductVariant"
		},
		"19881": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "Cart"
		},
		"19882": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "TQueryKey"
		},
		"19883": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"19884": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.all"
		},
		"19885": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.lists"
		},
		"19886": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"19887": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"19888": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.list"
		},
		"19889": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"19890": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"19891": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"19892": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"19893": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "query"
		},
		"19894": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.details"
		},
		"19895": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"19896": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"19897": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.detail"
		},
		"19898": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"19899": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"19900": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "id"
		},
		"19901": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "TKey"
		},
		"19902": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "TListQuery"
		},
		"19903": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "TDetailQuery"
		}
	},
	"files": {
		"entries": {
			"1": "../../../../packages/medusa-react/src/index.ts"
		},
		"reflections": {
			"1": 16383
		}
	}
}