{
	"id": 16617,
	"name": "utils",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 16962,
			"name": "DMLSchema",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
					"qualifiedName": "Record"
				},
				"typeArguments": [
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 17382,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "PropertyType",
								"package": "@medusajs/types"
							},
							{
								"type": "reference",
								"target": 17389,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "RelationshipType",
								"package": "@medusajs/types"
							}
						]
					}
				],
				"name": "Record",
				"package": "typescript"
			}
		},
		{
			"id": 17351,
			"name": "IDmlEntity",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 17353,
					"name": "[IsDmlEntity]",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "literal",
						"value": true
					}
				},
				{
					"id": 17352,
					"name": "schema",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 17354,
						"name": "Schema",
						"package": "@medusajs/types",
						"qualifiedName": "IDmlEntity.Schema",
						"refersToTypeParameter": true
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						17353,
						17352
					]
				}
			],
			"typeParameters": [
				{
					"id": 17354,
					"name": "Schema",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 16962,
						"name": "DMLSchema",
						"package": "@medusajs/types"
					}
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"target": 16683,
					"name": "DmlEntity"
				}
			]
		},
		{
			"id": 17491,
			"name": "KnownDataTypes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The supported data types"
					}
				]
			},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "text"
					},
					{
						"type": "literal",
						"value": "boolean"
					},
					{
						"type": "literal",
						"value": "enum"
					},
					{
						"type": "literal",
						"value": "number"
					},
					{
						"type": "literal",
						"value": "bigNumber"
					},
					{
						"type": "literal",
						"value": "dateTime"
					},
					{
						"type": "literal",
						"value": "array"
					},
					{
						"type": "literal",
						"value": "json"
					},
					{
						"type": "literal",
						"value": "id"
					}
				]
			}
		},
		{
			"id": 17484,
			"name": "RelationshipTypes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "List of available relationships at DML level"
					}
				]
			},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "hasOne"
					},
					{
						"type": "literal",
						"value": "hasMany"
					},
					{
						"type": "literal",
						"value": "belongsTo"
					},
					{
						"type": "literal",
						"value": "manyToMany"
					}
				]
			}
		},
		{
			"id": 17397,
			"name": "PropertyMetadata",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The meta-data returned by the property parse method"
					}
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 17398,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 17399,
							"name": "fieldName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 17400,
							"name": "defaultValue",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 17401,
							"name": "nullable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 17402,
							"name": "dataType",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 17403,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 17404,
											"name": "name",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 17491,
												"name": "KnownDataTypes",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 17405,
											"name": "options",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												17404,
												17405
											]
										}
									]
								}
							}
						},
						{
							"id": 17406,
							"name": "indexes",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reflection",
									"declaration": {
										"id": 17407,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 17408,
												"name": "name",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 17409,
												"name": "type",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "union",
													"types": [
														{
															"type": "literal",
															"value": "index"
														},
														{
															"type": "literal",
															"value": "unique"
														}
													]
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													17408,
													17409
												]
											}
										]
									}
								}
							}
						},
						{
							"id": 17410,
							"name": "relationships",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 17441,
									"name": "RelationshipMetadata",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								17399,
								17400,
								17401,
								17402,
								17406,
								17410
							]
						}
					]
				}
			}
		},
		{
			"id": 17382,
			"name": "PropertyType",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Definition of a property type. It should have a parse\nmethod to get the metadata and a type-only property\nto get its static type"
					}
				]
			},
			"typeParameters": [
				{
					"id": 17388,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 17383,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 17384,
							"name": "$dataType",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 17388,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 17385,
							"name": "parse",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 17386,
									"name": "parse",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 17387,
											"name": "fieldName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 17397,
										"name": "PropertyMetadata",
										"package": "@medusajs/types"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								17384
							]
						},
						{
							"title": "Methods",
							"children": [
								17385
							]
						}
					]
				}
			},
			"implementedBy": [
				{
					"type": "reference",
					"target": 17411,
					"name": "BaseProperty"
				},
				{
					"type": "reference",
					"target": 16967,
					"name": "NullableModifier"
				}
			]
		},
		{
			"id": 17272,
			"name": "RelationshipOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Options accepted by all the relationships"
					}
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 17273,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 17274,
									"name": "mappedBy",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										17274
									]
								}
							]
						}
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				]
			}
		},
		{
			"id": 17441,
			"name": "RelationshipMetadata",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The meta-data returned by the relationship parse\nmethod"
					}
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 17442,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 17443,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 17444,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 17484,
								"name": "RelationshipTypes",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 17445,
							"name": "entity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						},
						{
							"id": 17446,
							"name": "nullable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 17447,
							"name": "mappedBy",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 17448,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								17443,
								17444,
								17445,
								17446,
								17447,
								17448
							]
						}
					]
				}
			}
		},
		{
			"id": 17389,
			"name": "RelationshipType",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Definition of a relationship type. It should have a parse\nmethod to get the metadata and a type-only property\nto get its static type"
					}
				]
			},
			"typeParameters": [
				{
					"id": 17396,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 17390,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 17391,
							"name": "$dataType",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 17396,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 17392,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 17484,
								"name": "RelationshipTypes",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 17393,
							"name": "parse",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 17394,
									"name": "parse",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 17395,
											"name": "relationshipName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 17441,
										"name": "RelationshipMetadata",
										"package": "@medusajs/types"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								17391,
								17392
							]
						},
						{
							"title": "Methods",
							"children": [
								17393
							]
						}
					]
				}
			},
			"implementedBy": [
				{
					"type": "reference",
					"target": 17449,
					"name": "BaseRelationship"
				},
				{
					"type": "reference",
					"target": 17463,
					"name": "NullableModifier"
				}
			]
		},
		{
			"id": 17485,
			"name": "EntityConstructor",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A type-only representation of a MikroORM entity. Since we generate\nentities on the fly, we need a way to represent a type-safe\nconstructor and its instance properties."
					}
				]
			},
			"children": [
				{
					"id": 17487,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 17488,
							"name": "new EntityConstructor",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 17486,
								"name": "Props",
								"package": "@medusajs/types",
								"qualifiedName": "EntityConstructor.Props",
								"refersToTypeParameter": true
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Function.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Function.constructor"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						17487
					]
				}
			],
			"typeParameters": [
				{
					"id": 17486,
					"name": "Props",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Function"
					},
					"name": "Function",
					"package": "typescript"
				}
			]
		},
		{
			"id": 17489,
			"name": "InferForeignKeys",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "From a IDmlEntity, infer the foreign keys name and type for belongsTo relation meaning hasOne and ManyToOne"
					}
				]
			},
			"typeParameters": [
				{
					"id": 17490,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 17490,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "reference",
					"target": 17351,
					"typeArguments": [
						{
							"type": "inferred",
							"name": "Schema"
						}
					],
					"name": "IDmlEntity",
					"package": "@medusajs/types"
				},
				"trueType": {
					"type": "mapped",
					"parameter": "K",
					"parameterType": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
								"qualifiedName": "Schema"
							},
							"name": "Schema",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					},
					"templateType": {
						"type": "conditional",
						"checkType": {
							"type": "indexedAccess",
							"indexType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
									"qualifiedName": "K"
								},
								"name": "K",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"objectType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
									"qualifiedName": "Schema"
								},
								"name": "Schema",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						},
						"extendsType": {
							"type": "reference",
							"target": 17389,
							"typeArguments": [
								{
									"type": "inferred",
									"name": "R"
								}
							],
							"name": "RelationshipType",
							"package": "@medusajs/types"
						},
						"trueType": {
							"type": "conditional",
							"checkType": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "type"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
											"qualifiedName": "K"
										},
										"name": "K",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"objectType": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
											"qualifiedName": "Schema"
										},
										"name": "Schema",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								}
							},
							"extendsType": {
								"type": "literal",
								"value": "belongsTo"
							},
							"trueType": {
								"type": "intrinsic",
								"name": "string"
							},
							"falseType": {
								"type": "indexedAccess",
								"indexType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
										"qualifiedName": "K"
									},
									"name": "K",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"objectType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
										"qualifiedName": "Schema"
									},
									"name": "Schema",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							}
						},
						"falseType": {
							"type": "indexedAccess",
							"indexType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
									"qualifiedName": "K"
								},
								"name": "K",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"objectType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
									"qualifiedName": "Schema"
								},
								"name": "Schema",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					},
					"nameType": {
						"type": "conditional",
						"checkType": {
							"type": "indexedAccess",
							"indexType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
									"qualifiedName": "K"
								},
								"name": "K",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"objectType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
									"qualifiedName": "Schema"
								},
								"name": "Schema",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						},
						"extendsType": {
							"type": "reference",
							"target": 17389,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "any"
								}
							],
							"name": "RelationshipType",
							"package": "@medusajs/types"
						},
						"trueType": {
							"type": "conditional",
							"checkType": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "type"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
											"qualifiedName": "K"
										},
										"name": "K",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"objectType": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
											"qualifiedName": "Schema"
										},
										"name": "Schema",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								}
							},
							"extendsType": {
								"type": "literal",
								"value": "belongsTo"
							},
							"trueType": {
								"type": "templateLiteral",
								"head": "",
								"tail": [
									[
										{
											"type": "intersection",
											"types": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
														"qualifiedName": "K"
													},
													"name": "K",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												},
												{
													"type": "intrinsic",
													"name": "string"
												}
											]
										},
										"_id"
									]
								]
							},
							"falseType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
									"qualifiedName": "K"
								},
								"name": "K",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						},
						"falseType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
								"qualifiedName": "K"
							},
							"name": "K",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					}
				},
				"falseType": {
					"type": "intrinsic",
					"name": "never"
				}
			}
		},
		{
			"id": 17375,
			"name": "Infer",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Helper to infer the schema type of a DmlEntity"
					}
				]
			},
			"typeParameters": [
				{
					"id": 17380,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 17380,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "reference",
					"target": 17351,
					"typeArguments": [
						{
							"type": "inferred",
							"name": "Schema"
						}
					],
					"name": "IDmlEntity",
					"package": "@medusajs/types"
				},
				"trueType": {
					"type": "reference",
					"target": 17485,
					"typeArguments": [
						{
							"type": "intersection",
							"types": [
								{
									"type": "mapped",
									"parameter": "K",
									"parameterType": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
												"qualifiedName": "Schema"
											},
											"name": "Schema",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									},
									"templateType": {
										"type": "conditional",
										"checkType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "$dataType"
											},
											"objectType": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
														"qualifiedName": "K"
													},
													"name": "K",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
														"qualifiedName": "Schema"
													},
													"name": "Schema",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											}
										},
										"extendsType": {
											"type": "reflection",
											"declaration": {
												"id": 17376,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"signatures": [
													{
														"id": 17377,
														"name": "__type",
														"variant": "signature",
														"kind": 4096,
														"flags": {},
														"type": {
															"type": "inferred",
															"name": "R"
														}
													}
												]
											}
										},
										"trueType": {
											"type": "reference",
											"target": 17375,
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
														"qualifiedName": "R"
													},
													"name": "R",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "Infer",
											"package": "@medusajs/types"
										},
										"falseType": {
											"type": "conditional",
											"checkType": {
												"type": "indexedAccess",
												"indexType": {
													"type": "literal",
													"value": "$dataType"
												},
												"objectType": {
													"type": "indexedAccess",
													"indexType": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
															"qualifiedName": "K"
														},
														"name": "K",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													},
													"objectType": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
															"qualifiedName": "Schema"
														},
														"name": "Schema",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												}
											},
											"extendsType": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 17378,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"signatures": [
																{
																	"id": 17379,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"type": {
																		"type": "inferred",
																		"name": "R"
																	}
																}
															]
														}
													},
													{
														"type": "literal",
														"value": null
													}
												]
											},
											"trueType": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": 17375,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
																	"qualifiedName": "R"
																},
																"name": "R",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														],
														"name": "Infer",
														"package": "@medusajs/types"
													},
													{
														"type": "literal",
														"value": null
													}
												]
											},
											"falseType": {
												"type": "indexedAccess",
												"indexType": {
													"type": "literal",
													"value": "$dataType"
												},
												"objectType": {
													"type": "indexedAccess",
													"indexType": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
															"qualifiedName": "K"
														},
														"name": "K",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													},
													"objectType": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
															"qualifiedName": "Schema"
														},
														"name": "Schema",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												}
											}
										}
									}
								},
								{
									"type": "reference",
									"target": 17489,
									"typeArguments": [
										{
											"type": "reference",
											"target": 17380,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "InferForeignKeys",
									"package": "@medusajs/types"
								}
							]
						}
					],
					"name": "EntityConstructor",
					"package": "@medusajs/types"
				},
				"falseType": {
					"type": "intrinsic",
					"name": "never"
				}
			}
		},
		{
			"id": 17370,
			"name": "ExtractEntityRelations",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Extracts names of relationships from a schema"
					}
				]
			},
			"typeParameters": [
				{
					"id": 17373,
					"name": "Schema",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 17374,
					"name": "OfType",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 17484,
						"name": "RelationshipTypes",
						"package": "@medusajs/types"
					}
				}
			],
			"type": {
				"type": "array",
				"elementType": {
					"type": "indexedAccess",
					"indexType": {
						"type": "intersection",
						"types": [
							{
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "reference",
									"target": 17373,
									"name": "Schema",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"objectType": {
						"type": "mapped",
						"parameter": "K",
						"parameterType": {
							"type": "intersection",
							"types": [
								{
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"target": 17373,
										"name": "Schema",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								{
									"type": "intrinsic",
									"name": "string"
								}
							]
						},
						"templateType": {
							"type": "conditional",
							"checkType": {
								"type": "indexedAccess",
								"indexType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
										"qualifiedName": "K"
									},
									"name": "K",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"objectType": {
									"type": "reference",
									"target": 17373,
									"name": "Schema",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							},
							"extendsType": {
								"type": "reference",
								"target": 17389,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "RelationshipType",
								"package": "@medusajs/types"
							},
							"trueType": {
								"type": "conditional",
								"checkType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
											"qualifiedName": "K"
										},
										"name": "K",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"objectType": {
										"type": "reference",
										"target": 17373,
										"name": "Schema",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								"extendsType": {
									"type": "reflection",
									"declaration": {
										"id": 17371,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 17372,
												"name": "type",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "reference",
													"target": 17374,
													"name": "OfType",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													17372
												]
											}
										]
									}
								},
								"trueType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
										"qualifiedName": "K"
									},
									"name": "K",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"falseType": {
									"type": "intrinsic",
									"name": "never"
								}
							},
							"falseType": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					}
				}
			}
		},
		{
			"id": 17359,
			"name": "EntityCascades",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The actions to cascade from a given entity to its\nrelationship."
					}
				]
			},
			"typeParameters": [
				{
					"id": 17362,
					"name": "Relationships",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 17360,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 17361,
							"name": "delete",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 17362,
								"name": "Relationships",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								17361
							]
						}
					]
				}
			}
		},
		{
			"id": 17482,
			"name": "InferIndexableProperties",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Infer all indexable properties from a DML entity including inferred foreign keys and excluding relationship"
					}
				]
			},
			"typeParameters": [
				{
					"id": 17483,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "typeOperator",
				"operator": "keyof",
				"target": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 17483,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reference",
						"target": 17351,
						"typeArguments": [
							{
								"type": "inferred",
								"name": "Schema"
							}
						],
						"name": "IDmlEntity",
						"package": "@medusajs/types"
					},
					"trueType": {
						"type": "intersection",
						"types": [
							{
								"type": "mapped",
								"parameter": "K",
								"parameterType": {
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
											"qualifiedName": "Schema"
										},
										"name": "Schema",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								"templateType": {
									"type": "intrinsic",
									"name": "string"
								},
								"nameType": {
									"type": "conditional",
									"checkType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
												"qualifiedName": "K"
											},
											"name": "K",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										"objectType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
												"qualifiedName": "Schema"
											},
											"name": "Schema",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									},
									"extendsType": {
										"type": "reference",
										"target": 17389,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "RelationshipType",
										"package": "@medusajs/types"
									},
									"trueType": {
										"type": "intrinsic",
										"name": "never"
									},
									"falseType": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
											"qualifiedName": "K"
										},
										"name": "K",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								}
							},
							{
								"type": "reference",
								"target": 17489,
								"typeArguments": [
									{
										"type": "reference",
										"target": 17483,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "InferForeignKeys",
								"package": "@medusajs/types"
							}
						]
					},
					"falseType": {
						"type": "intrinsic",
						"name": "never"
					}
				}
			}
		},
		{
			"id": 17363,
			"name": "EntityIndex",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 17369,
					"name": "TSchema",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 16962,
						"name": "DMLSchema",
						"package": "@medusajs/types"
					},
					"default": {
						"type": "reference",
						"target": 16962,
						"name": "DMLSchema",
						"package": "@medusajs/types"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 17364,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 17365,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 17366,
							"name": "unique",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 17367,
							"name": "on",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 17482,
									"typeArguments": [
										{
											"type": "reference",
											"target": 17351,
											"typeArguments": [
												{
													"type": "reference",
													"target": 17369,
													"name": "TSchema",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "IDmlEntity",
											"package": "@medusajs/types"
										}
									],
									"name": "InferIndexableProperties",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 17368,
							"name": "where",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								17365,
								17366,
								17367,
								17368
							]
						}
					]
				}
			}
		},
		{
			"id": 16619,
			"name": "generateJwtToken",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 16620,
					"name": "generateJwtToken",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 16621,
							"name": "tokenPayload",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 16622,
							"name": "jwtConfig",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 16623,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 16624,
											"name": "secret",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 16625,
											"name": "expiresIn",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												16624,
												16625
											]
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 16963,
			"name": "DefineOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 16964,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 16965,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 16966,
									"name": "tableName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										16965,
										16966
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 17355,
			"name": "Config",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 17356,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 17357,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 17358,
									"name": "tableName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										17357,
										17358
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 17041,
			"name": "DMLSchemaDefaults",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 17042,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 17043,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 17212,
								"name": "DateTimeProperty",
								"package": "@medusajs/utils"
							}
						},
						{
							"id": 17044,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 17212,
								"name": "DateTimeProperty",
								"package": "@medusajs/utils"
							}
						},
						{
							"id": 17045,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 16967,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									},
									{
										"type": "reference",
										"target": 17212,
										"name": "DateTimeProperty",
										"package": "@medusajs/utils"
									}
								],
								"name": "NullableModifier",
								"package": "@medusajs/utils"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								17043,
								17044,
								17045
							]
						}
					]
				}
			}
		},
		{
			"id": 16626,
			"name": "DMLUtils",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 16627,
					"name": "EntityBuilder",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Entity builder exposes the API to create an entity and define its\nschema using the shorthand methods."
							}
						]
					},
					"children": [
						{
							"id": 16628,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"signatures": [
								{
									"id": 16629,
									"name": "new EntityBuilder",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 16627,
										"name": "EntityBuilder",
										"package": "@medusajs/utils"
									}
								}
							]
						},
						{
							"id": 16633,
							"name": "define",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 16634,
									"name": "define",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Define an entity or a model. The name should be unique across\nall the entities."
											}
										]
									},
									"typeParameters": [
										{
											"id": 16635,
											"name": "Schema",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 16962,
												"name": "DMLSchema",
												"package": "@medusajs/types"
											}
										}
									],
									"parameters": [
										{
											"id": 16636,
											"name": "nameOrConfig",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 16963,
												"name": "DefineOptions",
												"package": "@medusajs/utils"
											}
										},
										{
											"id": 16637,
											"name": "schema",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 16635,
												"name": "Schema",
												"package": "@medusajs/utils",
												"refersToTypeParameter": true
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 16683,
										"typeArguments": [
											{
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 16635,
														"name": "Schema",
														"package": "@medusajs/utils",
														"refersToTypeParameter": true
													},
													{
														"type": "mapped",
														"parameter": "K",
														"parameterType": {
															"type": "union",
															"types": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "intrinsic",
																	"name": "number"
																},
																{
																	"type": "intrinsic",
																	"name": "symbol"
																}
															]
														},
														"templateType": {
															"type": "indexedAccess",
															"indexType": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/utils/src/dml/helpers/entity-builder/create-big-number-properties.ts",
																	"qualifiedName": "K"
																},
																"name": "K",
																"package": "@medusajs/utils",
																"refersToTypeParameter": true
															},
															"objectType": {
																"type": "reference",
																"target": 16635,
																"name": "Schema",
																"package": "@medusajs/utils",
																"refersToTypeParameter": true
															}
														}
													},
													{
														"type": "mapped",
														"parameter": "K",
														"parameterType": {
															"type": "union",
															"types": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "intrinsic",
																	"name": "number"
																},
																{
																	"type": "intrinsic",
																	"name": "symbol"
																}
															]
														},
														"templateType": {
															"type": "conditional",
															"checkType": {
																"type": "indexedAccess",
																"indexType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../../packages/core/utils/src/dml/helpers/entity-builder/create-big-number-properties.ts",
																		"qualifiedName": "K"
																	},
																	"name": "K",
																	"package": "@medusajs/utils",
																	"refersToTypeParameter": true
																},
																"objectType": {
																	"type": "reference",
																	"target": 16635,
																	"name": "Schema",
																	"package": "@medusajs/utils",
																	"refersToTypeParameter": true
																}
															},
															"extendsType": {
																"type": "reference",
																"target": 16967,
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "number"
																	},
																	{
																		"type": "reference",
																		"target": 16984,
																		"name": "BigNumberProperty",
																		"package": "@medusajs/utils"
																	}
																],
																"name": "NullableModifier",
																"package": "@medusajs/utils"
															},
															"trueType": {
																"type": "reference",
																"target": 16967,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Record"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "string"
																			},
																			{
																				"type": "intrinsic",
																				"name": "unknown"
																			}
																		],
																		"name": "Record",
																		"package": "typescript"
																	},
																	{
																		"type": "reference",
																		"target": 17014,
																		"name": "JSONProperty",
																		"package": "@medusajs/utils"
																	}
																],
																"name": "NullableModifier",
																"package": "@medusajs/utils"
															},
															"falseType": {
																"type": "reference",
																"target": 17014,
																"name": "JSONProperty",
																"package": "@medusajs/utils"
															}
														},
														"nameType": {
															"type": "conditional",
															"checkType": {
																"type": "indexedAccess",
																"indexType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../../packages/core/utils/src/dml/helpers/entity-builder/create-big-number-properties.ts",
																		"qualifiedName": "K"
																	},
																	"name": "K",
																	"package": "@medusajs/utils",
																	"refersToTypeParameter": true
																},
																"objectType": {
																	"type": "reference",
																	"target": 16635,
																	"name": "Schema",
																	"package": "@medusajs/utils",
																	"refersToTypeParameter": true
																}
															},
															"extendsType": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"target": 16984,
																		"name": "BigNumberProperty",
																		"package": "@medusajs/utils"
																	},
																	{
																		"type": "reference",
																		"target": 16967,
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "number"
																			},
																			{
																				"type": "reference",
																				"target": 16984,
																				"name": "BigNumberProperty",
																				"package": "@medusajs/utils"
																			}
																		],
																		"name": "NullableModifier",
																		"package": "@medusajs/utils"
																	}
																]
															},
															"trueType": {
																"type": "templateLiteral",
																"head": "raw_",
																"tail": [
																	[
																		{
																			"type": "intersection",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "string"
																				},
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../../packages/core/utils/src/dml/helpers/entity-builder/create-big-number-properties.ts",
																						"qualifiedName": "K"
																					},
																					"name": "K",
																					"package": "@medusajs/utils",
																					"refersToTypeParameter": true
																				}
																			]
																		},
																		""
																	]
																]
															},
															"falseType": {
																"type": "intrinsic",
																"name": "never"
															}
														}
													},
													{
														"type": "reference",
														"target": 17041,
														"name": "DMLSchemaDefaults",
														"package": "@medusajs/utils"
													}
												]
											}
										],
										"name": "DmlEntity",
										"package": "@medusajs/utils"
									}
								}
							]
						},
						{
							"id": 16638,
							"name": "id",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 16639,
									"name": "id",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Define an id property. Id properties are marked\nprimary by default"
											}
										]
									},
									"parameters": [
										{
											"id": 16640,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 16641,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 16642,
															"name": "primaryKey",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														},
														{
															"id": 16643,
															"name": "prefix",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																16642,
																16643
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 17046,
										"name": "IdProperty",
										"package": "@medusajs/utils"
									}
								}
							]
						},
						{
							"id": 16644,
							"name": "text",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 16645,
									"name": "text",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Define a text/string based column"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 17084,
										"name": "TextProperty",
										"package": "@medusajs/utils"
									}
								}
							]
						},
						{
							"id": 16646,
							"name": "boolean",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 16647,
									"name": "boolean",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Define a boolean column"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 17123,
										"name": "BooleanProperty",
										"package": "@medusajs/utils"
									}
								}
							]
						},
						{
							"id": 16648,
							"name": "number",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 16649,
									"name": "number",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Define an integer column"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 17150,
										"name": "NumberProperty",
										"package": "@medusajs/utils"
									}
								}
							]
						},
						{
							"id": 16650,
							"name": "bigNumber",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 16651,
									"name": "bigNumber",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Define a numeric column. This property produces an additional\ncolumn - raw_{{ property_name }}, which stores the configuration\nof bignumber (https://github.com/MikeMcl/bignumber.js)"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 16984,
										"name": "BigNumberProperty",
										"package": "@medusajs/utils"
									}
								}
							]
						},
						{
							"id": 16652,
							"name": "array",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 16653,
									"name": "array",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Define an array column"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 17185,
										"name": "ArrayProperty",
										"package": "@medusajs/utils"
									}
								}
							]
						},
						{
							"id": 16654,
							"name": "dateTime",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 16655,
									"name": "dateTime",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Define a timestampz column"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 17212,
										"name": "DateTimeProperty",
										"package": "@medusajs/utils"
									}
								}
							]
						},
						{
							"id": 16656,
							"name": "json",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 16657,
									"name": "json",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Define a JSON column to store data as a\nJSON string"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 17014,
										"name": "JSONProperty",
										"package": "@medusajs/utils"
									}
								}
							]
						},
						{
							"id": 16658,
							"name": "enum",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 16659,
									"name": "enum",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Define an enum column where only a pre-defined set\nof values are allowed."
											}
										]
									},
									"typeParameters": [
										{
											"id": 16660,
											"name": "Values",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {
												"isConst": true
											},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"parameters": [
										{
											"id": 16661,
											"name": "values",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 16660,
													"name": "Values",
													"package": "@medusajs/utils",
													"refersToTypeParameter": true
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 17239,
										"typeArguments": [
											{
												"type": "reference",
												"target": 16660,
												"name": "Values",
												"package": "@medusajs/utils",
												"refersToTypeParameter": true
											}
										],
										"name": "EnumProperty",
										"package": "@medusajs/utils"
									}
								}
							]
						},
						{
							"id": 16662,
							"name": "hasOne",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 16663,
									"name": "hasOne",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Has one relationship defines a relationship between two entities\nwhere the owner of the relationship has exactly one instance\nof the related entity.\n\nFor example: A user \"hasOne\" profile\n\nYou may use the \"belongsTo\" relationship to define the inverse\nof the \"hasOne\" relationship"
											}
										]
									},
									"typeParameters": [
										{
											"id": 16664,
											"name": "T",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 16665,
											"name": "entityBuilder",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 16664,
												"name": "T",
												"package": "@medusajs/utils",
												"refersToTypeParameter": true
											}
										},
										{
											"id": 16666,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 17272,
												"name": "RelationshipOptions",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 17275,
										"typeArguments": [
											{
												"type": "reference",
												"target": 16664,
												"name": "T",
												"package": "@medusajs/utils",
												"refersToTypeParameter": true
											}
										],
										"name": "HasOne",
										"package": "@medusajs/utils"
									}
								}
							]
						},
						{
							"id": 16667,
							"name": "belongsTo",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 16668,
									"name": "belongsTo",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Define inverse of \"hasOne\" and \"hasMany\" relationship."
											}
										]
									},
									"typeParameters": [
										{
											"id": 16669,
											"name": "T",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 16670,
											"name": "entityBuilder",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 16669,
												"name": "T",
												"package": "@medusajs/utils",
												"refersToTypeParameter": true
											}
										},
										{
											"id": 16671,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 17272,
												"name": "RelationshipOptions",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 17295,
										"typeArguments": [
											{
												"type": "reference",
												"target": 16669,
												"name": "T",
												"package": "@medusajs/utils",
												"refersToTypeParameter": true
											}
										],
										"name": "BelongsTo",
										"package": "@medusajs/utils"
									}
								}
							]
						},
						{
							"id": 16672,
							"name": "hasMany",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 16673,
									"name": "hasMany",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Has many relationship defines a relationship between two entities\nwhere the owner of the relationship has many instance of the\nrelated entity.\n\nFor example:\n\n- A user \"hasMany\" books\n- A user \"hasMany\" addresses"
											}
										]
									},
									"typeParameters": [
										{
											"id": 16674,
											"name": "T",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 16675,
											"name": "entityBuilder",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 16674,
												"name": "T",
												"package": "@medusajs/utils",
												"refersToTypeParameter": true
											}
										},
										{
											"id": 16676,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 17272,
												"name": "RelationshipOptions",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 17315,
										"typeArguments": [
											{
												"type": "reference",
												"target": 16674,
												"name": "T",
												"package": "@medusajs/utils",
												"refersToTypeParameter": true
											}
										],
										"name": "HasMany",
										"package": "@medusajs/utils"
									}
								}
							]
						},
						{
							"id": 16677,
							"name": "manyToMany",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 16678,
									"name": "manyToMany",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "ManyToMany relationship defines a relationship between two entities\nwhere the owner of the relationship has many instance of the\nrelated entity via a pivot table.\n\nFor example:\n\n- A user has many teams. But a team has many users as well. So this\n  relationship requires a pivot table to establish a many to many\n  relationship between two entities"
											}
										]
									},
									"typeParameters": [
										{
											"id": 16679,
											"name": "T",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 16680,
											"name": "entityBuilder",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 16679,
												"name": "T",
												"package": "@medusajs/utils",
												"refersToTypeParameter": true
											}
										},
										{
											"id": 16681,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "unknown",
												"name": "{ mappedBy?: string | undefined; } & Record<string, any> & ({ pivotTable?: string | undefined; pivotEntity?: undefined; } | { pivotTable?: undefined; pivotEntity?: (() => DmlEntity<any>) | undefined; })"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 17333,
										"typeArguments": [
											{
												"type": "reference",
												"target": 16679,
												"name": "T",
												"package": "@medusajs/utils",
												"refersToTypeParameter": true
											}
										],
										"name": "ManyToMany",
										"package": "@medusajs/utils"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								16628
							]
						},
						{
							"title": "Methods",
							"children": [
								16633,
								16638,
								16644,
								16646,
								16648,
								16650,
								16652,
								16654,
								16656,
								16658,
								16662,
								16667,
								16672,
								16677
							]
						}
					]
				},
				{
					"id": 16682,
					"name": "model",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"type": {
						"type": "reference",
						"target": 16627,
						"name": "EntityBuilder",
						"package": "@medusajs/utils"
					},
					"defaultValue": "..."
				},
				{
					"id": 16683,
					"name": "DmlEntity",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Dml entity is a representation of a DML model with a unique\nname, its schema and relationships."
							}
						]
					},
					"children": [
						{
							"id": 16711,
							"name": "[IsDmlEntity]",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "literal",
								"value": true
							},
							"defaultValue": "true",
							"implementationOf": {
								"type": "reference",
								"target": 17353,
								"name": "IDmlEntity.[IsDmlEntity]"
							}
						},
						{
							"id": 16692,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 16687,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"signatures": [
								{
									"id": 16688,
									"name": "new DmlEntity",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"typeParameters": [
										{
											"id": 16689,
											"name": "Schema",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 16962,
												"name": "DMLSchema",
												"package": "@medusajs/types"
											}
										}
									],
									"parameters": [
										{
											"id": 16690,
											"name": "nameOrConfig",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 17355,
												"name": "Config",
												"package": "@medusajs/utils"
											}
										},
										{
											"id": 16691,
											"name": "schema",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 16689,
												"name": "Schema",
												"package": "@medusajs/utils",
												"qualifiedName": "DmlEntity.Schema",
												"refersToTypeParameter": true
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 16683,
										"typeArguments": [
											{
												"type": "reference",
												"target": 16689,
												"name": "Schema",
												"package": "@medusajs/utils",
												"qualifiedName": "DmlEntity.Schema",
												"refersToTypeParameter": true
											}
										],
										"name": "DmlEntity",
										"package": "@medusajs/utils"
									}
								}
							]
						},
						{
							"id": 16696,
							"name": "schema",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"type": {
								"type": "reference",
								"target": 16689,
								"name": "Schema",
								"package": "@medusajs/utils",
								"qualifiedName": "DmlEntity.Schema",
								"refersToTypeParameter": true
							},
							"implementationOf": {
								"type": "reference",
								"target": 17352,
								"name": "IDmlEntity.schema"
							}
						},
						{
							"id": 16684,
							"name": "isDmlEntity",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isStatic": true
							},
							"signatures": [
								{
									"id": 16685,
									"name": "isDmlEntity",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A static method to check if an entity is an instance of DmlEntity.\nIt allows us to identify a specific object as being an instance of\nDmlEntity."
											}
										]
									},
									"parameters": [
										{
											"id": 16686,
											"name": "entity",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "entity",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"target": 16683,
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "any"
												}
											],
											"name": "DmlEntity",
											"package": "@medusajs/utils"
										}
									}
								}
							]
						},
						{
							"id": 16697,
							"name": "parse",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 16698,
									"name": "parse",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Parse entity to get its underlying information"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 16699,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 16700,
													"name": "name",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16701,
													"name": "tableName",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 16702,
													"name": "schema",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 16962,
														"name": "DMLSchema",
														"package": "@medusajs/types"
													}
												},
												{
													"id": 16703,
													"name": "cascades",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 17359,
														"typeArguments": [
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "EntityCascades",
														"package": "@medusajs/types"
													}
												},
												{
													"id": 16704,
													"name": "indexes",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 17363,
															"typeArguments": [
																{
																	"type": "reference",
																	"target": 16689,
																	"name": "Schema",
																	"package": "@medusajs/utils",
																	"qualifiedName": "DmlEntity.Schema",
																	"refersToTypeParameter": true
																}
															],
															"name": "EntityIndex",
															"package": "@medusajs/types"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														16700,
														16701,
														16702,
														16703,
														16704
													]
												}
											]
										}
									}
								}
							]
						},
						{
							"id": 16705,
							"name": "cascades",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 16706,
									"name": "cascades",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Delete actions to be performed when the entity is deleted. For example:\n\nYou can configure relationship data to be deleted when the current\nentity is deleted."
											}
										]
									},
									"parameters": [
										{
											"id": 16707,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 17359,
												"typeArguments": [
													{
														"type": "reference",
														"target": 17370,
														"typeArguments": [
															{
																"type": "reference",
																"target": 16689,
																"name": "Schema",
																"package": "@medusajs/utils",
																"qualifiedName": "DmlEntity.Schema",
																"refersToTypeParameter": true
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": "hasOne"
																	},
																	{
																		"type": "literal",
																		"value": "hasMany"
																	}
																]
															}
														],
														"name": "ExtractEntityRelations",
														"package": "@medusajs/types"
													}
												],
												"name": "EntityCascades",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 16683,
										"typeArguments": [
											{
												"type": "reference",
												"target": 16689,
												"name": "Schema",
												"package": "@medusajs/utils",
												"qualifiedName": "DmlEntity.Schema",
												"refersToTypeParameter": true
											}
										],
										"name": "DmlEntity",
										"package": "@medusajs/utils"
									}
								}
							]
						},
						{
							"id": 16708,
							"name": "indexes",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 16709,
									"name": "indexes",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 16710,
											"name": "indexes",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 17363,
													"typeArguments": [
														{
															"type": "reference",
															"target": 16689,
															"name": "Schema",
															"package": "@medusajs/utils",
															"qualifiedName": "DmlEntity.Schema",
															"refersToTypeParameter": true
														}
													],
													"name": "EntityIndex",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 16683,
										"typeArguments": [
											{
												"type": "reference",
												"target": 16689,
												"name": "Schema",
												"package": "@medusajs/utils",
												"qualifiedName": "DmlEntity.Schema",
												"refersToTypeParameter": true
											}
										],
										"name": "DmlEntity",
										"package": "@medusajs/utils"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								16687
							]
						},
						{
							"title": "Properties",
							"children": [
								16711,
								16692,
								16696
							]
						},
						{
							"title": "Methods",
							"children": [
								16684,
								16697,
								16705,
								16708
							]
						}
					],
					"typeParameters": [
						{
							"id": 16712,
							"name": "Schema",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 16962,
								"name": "DMLSchema",
								"package": "@medusajs/types"
							}
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"target": 17351,
							"typeArguments": [
								{
									"type": "reference",
									"target": 16689,
									"name": "Schema",
									"package": "@medusajs/utils",
									"qualifiedName": "DmlEntity.Schema",
									"refersToTypeParameter": true
								}
							],
							"name": "IDmlEntity",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 16713,
					"name": "createMikrORMEntity",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"signatures": [
						{
							"id": 16714,
							"name": "createMikrORMEntity",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Factory function to create the mikro orm entity builder. The return\nvalue is a function that can be used to convert DML entities\nto Mikro ORM entities."
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 16715,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 16716,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"typeParameters": [
												{
													"id": 16717,
													"name": "T",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 16683,
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "DmlEntity",
														"package": "@medusajs/utils"
													}
												}
											],
											"parameters": [
												{
													"id": 16718,
													"name": "entity",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 16717,
														"name": "T",
														"package": "@medusajs/utils",
														"refersToTypeParameter": true
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 17375,
												"typeArguments": [
													{
														"type": "reference",
														"target": 16717,
														"name": "T",
														"package": "@medusajs/utils",
														"refersToTypeParameter": true
													}
												],
												"name": "Infer",
												"package": "@medusajs/types"
											}
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 16719,
					"name": "toMikroORMEntity",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Takes a DML entity and returns a Mikro ORM entity otherwise\nreturn the input idempotently"
							}
						]
					},
					"signatures": [
						{
							"id": 16720,
							"name": "toMikroORMEntity",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameters": [
								{
									"id": 16721,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 16722,
									"name": "entity",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 16721,
										"name": "T",
										"package": "@medusajs/utils",
										"refersToTypeParameter": true
									}
								}
							],
							"type": {
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"target": 16721,
									"name": "T",
									"package": "@medusajs/utils",
									"refersToTypeParameter": true
								},
								"extendsType": {
									"type": "reference",
									"target": 16683,
									"typeArguments": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/utils/src/dml/helpers/create-mikro-orm-entity.ts",
												"qualifiedName": "Schema"
											},
											"name": "Schema",
											"package": "@medusajs/utils",
											"refersToTypeParameter": true
										}
									],
									"name": "DmlEntity",
									"package": "@medusajs/utils"
								},
								"trueType": {
									"type": "reference",
									"target": 17375,
									"typeArguments": [
										{
											"type": "reference",
											"target": 16721,
											"typeArguments": [
												{
													"type": "reference",
													"target": 16721,
													"name": "T",
													"package": "@medusajs/utils",
													"refersToTypeParameter": true
												}
											],
											"name": "T",
											"package": "@medusajs/utils",
											"refersToTypeParameter": true
										}
									],
									"name": "Infer",
									"package": "@medusajs/types"
								},
								"falseType": {
									"type": "reference",
									"target": 16721,
									"name": "T",
									"package": "@medusajs/utils",
									"refersToTypeParameter": true
								}
							}
						}
					]
				},
				{
					"id": 16723,
					"name": "toMikroOrmEntities",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Takes any DmlEntity or mikro orm entities and return mikro orm entities only.\nThis action is idempotent if non of the entities are DmlEntity"
							}
						]
					},
					"signatures": [
						{
							"id": 16724,
							"name": "toMikroOrmEntities",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameters": [
								{
									"id": 16725,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"parameters": [
								{
									"id": 16726,
									"name": "entities",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 16725,
										"name": "T",
										"package": "@medusajs/utils",
										"refersToTypeParameter": true
									}
								}
							],
							"type": {
								"type": "mapped",
								"parameter": "K",
								"parameterType": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "number"
										},
										{
											"type": "intrinsic",
											"name": "symbol"
										}
									]
								},
								"templateType": {
									"type": "conditional",
									"checkType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/utils/src/dml/helpers/create-mikro-orm-entity.ts",
												"qualifiedName": "K"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/utils/src/dml/helpers/create-mikro-orm-entity.ts",
														"qualifiedName": "K"
													},
													"name": "K",
													"package": "@medusajs/utils",
													"refersToTypeParameter": true
												}
											],
											"name": "K",
											"package": "@medusajs/utils",
											"refersToTypeParameter": true
										},
										"objectType": {
											"type": "reference",
											"target": 16725,
											"name": "T",
											"package": "@medusajs/utils",
											"refersToTypeParameter": true
										}
									},
									"extendsType": {
										"type": "reference",
										"target": 16683,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "DmlEntity",
										"package": "@medusajs/utils"
									},
									"trueType": {
										"type": "reference",
										"target": 17375,
										"typeArguments": [
											{
												"type": "indexedAccess",
												"indexType": {
													"type": "intrinsic",
													"name": "any"
												},
												"objectType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										],
										"name": "Infer",
										"package": "@medusajs/types"
									},
									"falseType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/utils/src/dml/helpers/create-mikro-orm-entity.ts",
												"qualifiedName": "K"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/utils/src/dml/helpers/create-mikro-orm-entity.ts",
														"qualifiedName": "K"
													},
													"name": "K",
													"package": "@medusajs/utils",
													"refersToTypeParameter": true
												}
											],
											"name": "K",
											"package": "@medusajs/utils",
											"refersToTypeParameter": true
										},
										"objectType": {
											"type": "reference",
											"target": 16725,
											"name": "T",
											"package": "@medusajs/utils",
											"refersToTypeParameter": true
										}
									}
								}
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"children": [
						16627,
						16683
					]
				},
				{
					"title": "Variables",
					"children": [
						16682
					]
				},
				{
					"title": "Functions",
					"children": [
						16713,
						16719,
						16723
					]
				}
			]
		},
		{
			"id": 17185,
			"name": "ArrayProperty",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The ArrayProperty is used to define an array property"
					}
				]
			},
			"children": [
				{
					"id": 17186,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 17187,
							"name": "new ArrayProperty",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 17185,
								"name": "ArrayProperty",
								"package": "@medusajs/utils"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17413,
								"name": "BaseProperty.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 17412,
						"name": "BaseProperty.constructor"
					}
				},
				{
					"id": 17188,
					"name": "dataType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The runtime dataType for the schema. It is not the same as\nthe \"$dataType\"."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 17189,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 17190,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isReadonly": true
									},
									"type": {
										"type": "literal",
										"value": "array"
									},
									"defaultValue": "\"array\""
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										17190
									]
								}
							]
						}
					},
					"defaultValue": "...",
					"overwrites": {
						"type": "reference",
						"target": 17421,
						"name": "BaseProperty.dataType"
					}
				},
				{
					"id": 17197,
					"name": "$dataType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A type-only property to infer the JavScript data-type\nof the schema property"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 17425,
						"name": "BaseProperty.$dataType"
					}
				},
				{
					"id": 17198,
					"name": "nullable",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"signatures": [
						{
							"id": 17199,
							"name": "nullable",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Apply nullable modifier on the schema"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 16967,
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 17185,
										"name": "ArrayProperty",
										"package": "@medusajs/utils"
									}
								],
								"name": "NullableModifier",
								"package": "@medusajs/utils"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17427,
								"name": "BaseProperty.nullable"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 17426,
						"name": "BaseProperty.nullable"
					}
				},
				{
					"id": 17200,
					"name": "index",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"signatures": [
						{
							"id": 17201,
							"name": "index",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Define an index on the property"
									}
								]
							},
							"parameters": [
								{
									"id": 17202,
									"name": "name",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 17185,
								"name": "ArrayProperty",
								"package": "@medusajs/utils"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17429,
								"name": "BaseProperty.index"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 17428,
						"name": "BaseProperty.index"
					}
				},
				{
					"id": 17203,
					"name": "unique",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"signatures": [
						{
							"id": 17204,
							"name": "unique",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Define a unique index on the property"
									}
								]
							},
							"parameters": [
								{
									"id": 17205,
									"name": "name",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 17185,
								"name": "ArrayProperty",
								"package": "@medusajs/utils"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17432,
								"name": "BaseProperty.unique"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 17431,
						"name": "BaseProperty.unique"
					}
				},
				{
					"id": 17206,
					"name": "default",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"signatures": [
						{
							"id": 17207,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Define default value for the property"
									}
								]
							},
							"parameters": [
								{
									"id": 17208,
									"name": "value",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 17185,
								"name": "ArrayProperty",
								"package": "@medusajs/utils"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17435,
								"name": "BaseProperty.default"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 17434,
						"name": "BaseProperty.default"
					}
				},
				{
					"id": 17209,
					"name": "parse",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"signatures": [
						{
							"id": 17210,
							"name": "parse",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the serialized metadata"
									}
								]
							},
							"parameters": [
								{
									"id": 17211,
									"name": "fieldName",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 17397,
								"name": "PropertyMetadata",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17438,
								"name": "BaseProperty.parse"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 17437,
						"name": "BaseProperty.parse"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						17186
					]
				},
				{
					"title": "Properties",
					"children": [
						17188,
						17197
					]
				},
				{
					"title": "Methods",
					"children": [
						17198,
						17200,
						17203,
						17206,
						17209
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 17411,
					"typeArguments": [
						{
							"type": "array",
							"elementType": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"name": "BaseProperty",
					"package": "@medusajs/utils"
				}
			]
		},
		{
			"id": 17411,
			"name": "BaseProperty",
			"variant": "declaration",
			"kind": 128,
			"flags": {
				"isAbstract": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The BaseProperty class offers shared affordances to define\nproperty classes"
					}
				]
			},
			"children": [
				{
					"id": 17412,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 17413,
							"name": "new BaseProperty",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"typeParameters": [
								{
									"id": 17414,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"type": {
								"type": "reference",
								"target": 17411,
								"typeArguments": [
									{
										"type": "reference",
										"target": 17414,
										"name": "T",
										"package": "@medusajs/utils",
										"qualifiedName": "BaseProperty.T",
										"refersToTypeParameter": true
									}
								],
								"name": "BaseProperty",
								"package": "@medusajs/utils"
							}
						}
					]
				},
				{
					"id": 17421,
					"name": "dataType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isAbstract": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The runtime dataType for the schema. It is not the same as\nthe \"$dataType\"."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 17422,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 17423,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 17491,
										"name": "KnownDataTypes",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 17424,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										17423,
										17424
									]
								}
							]
						}
					}
				},
				{
					"id": 17425,
					"name": "$dataType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A type-only property to infer the JavScript data-type\nof the schema property"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 17414,
						"name": "T",
						"package": "@medusajs/utils",
						"qualifiedName": "BaseProperty.T",
						"refersToTypeParameter": true
					},
					"implementationOf": {
						"type": "reference",
						"target": -1,
						"name": "PropertyType.$dataType"
					}
				},
				{
					"id": 17426,
					"name": "nullable",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 17427,
							"name": "nullable",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Apply nullable modifier on the schema"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 16967,
								"typeArguments": [
									{
										"type": "reference",
										"target": 17414,
										"name": "T",
										"package": "@medusajs/utils",
										"qualifiedName": "BaseProperty.T",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 17411,
										"typeArguments": [
											{
												"type": "reference",
												"target": 17414,
												"name": "T",
												"package": "@medusajs/utils",
												"qualifiedName": "BaseProperty.T",
												"refersToTypeParameter": true
											}
										],
										"name": "BaseProperty",
										"package": "@medusajs/utils"
									}
								],
								"name": "NullableModifier",
								"package": "@medusajs/utils"
							}
						}
					]
				},
				{
					"id": 17428,
					"name": "index",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 17429,
							"name": "index",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Define an index on the property"
									}
								]
							},
							"parameters": [
								{
									"id": 17430,
									"name": "name",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 17411,
								"typeArguments": [
									{
										"type": "reference",
										"target": 17414,
										"name": "T",
										"package": "@medusajs/utils",
										"qualifiedName": "BaseProperty.T",
										"refersToTypeParameter": true
									}
								],
								"name": "BaseProperty",
								"package": "@medusajs/utils"
							}
						}
					]
				},
				{
					"id": 17431,
					"name": "unique",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 17432,
							"name": "unique",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Define a unique index on the property"
									}
								]
							},
							"parameters": [
								{
									"id": 17433,
									"name": "name",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 17411,
								"typeArguments": [
									{
										"type": "reference",
										"target": 17414,
										"name": "T",
										"package": "@medusajs/utils",
										"qualifiedName": "BaseProperty.T",
										"refersToTypeParameter": true
									}
								],
								"name": "BaseProperty",
								"package": "@medusajs/utils"
							}
						}
					]
				},
				{
					"id": 17434,
					"name": "default",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 17435,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Define default value for the property"
									}
								]
							},
							"parameters": [
								{
									"id": 17436,
									"name": "value",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 17414,
										"name": "T",
										"package": "@medusajs/utils",
										"qualifiedName": "BaseProperty.T",
										"refersToTypeParameter": true
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 17411,
								"typeArguments": [
									{
										"type": "reference",
										"target": 17414,
										"name": "T",
										"package": "@medusajs/utils",
										"qualifiedName": "BaseProperty.T",
										"refersToTypeParameter": true
									}
								],
								"name": "BaseProperty",
								"package": "@medusajs/utils"
							}
						}
					]
				},
				{
					"id": 17437,
					"name": "parse",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 17438,
							"name": "parse",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the serialized metadata"
									}
								]
							},
							"parameters": [
								{
									"id": 17439,
									"name": "fieldName",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 17397,
								"name": "PropertyMetadata",
								"package": "@medusajs/types"
							},
							"implementationOf": {
								"type": "reference",
								"target": -1,
								"name": "PropertyType.parse"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": -1,
						"name": "PropertyType.parse"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						17412
					]
				},
				{
					"title": "Properties",
					"children": [
						17421,
						17425
					]
				},
				{
					"title": "Methods",
					"children": [
						17426,
						17428,
						17431,
						17434,
						17437
					]
				}
			],
			"typeParameters": [
				{
					"id": 17440,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 16984,
					"name": "BigNumberProperty"
				},
				{
					"type": "reference",
					"target": 17014,
					"name": "JSONProperty"
				},
				{
					"type": "reference",
					"target": 17046,
					"name": "IdProperty"
				},
				{
					"type": "reference",
					"target": 17084,
					"name": "TextProperty"
				},
				{
					"type": "reference",
					"target": 17123,
					"name": "BooleanProperty"
				},
				{
					"type": "reference",
					"target": 17150,
					"name": "NumberProperty"
				},
				{
					"type": "reference",
					"target": 17185,
					"name": "ArrayProperty"
				},
				{
					"type": "reference",
					"target": 17212,
					"name": "DateTimeProperty"
				},
				{
					"type": "reference",
					"target": 17239,
					"name": "EnumProperty"
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"target": 17382,
					"typeArguments": [
						{
							"type": "reference",
							"target": 17414,
							"name": "T",
							"package": "@medusajs/utils",
							"qualifiedName": "BaseProperty.T",
							"refersToTypeParameter": true
						}
					],
					"name": "PropertyType",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 16984,
			"name": "BigNumberProperty",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The NumberProperty is used to define a numeric/integer\nproperty"
					}
				]
			},
			"children": [
				{
					"id": 16985,
					"name": "isBigNumberProperty",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"signatures": [
						{
							"id": 16986,
							"name": "isBigNumberProperty",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 16987,
									"name": "obj",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "obj",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"target": 16984,
									"name": "BigNumberProperty",
									"package": "@medusajs/utils"
								}
							}
						}
					]
				},
				{
					"id": 16988,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 16989,
							"name": "new BigNumberProperty",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 16984,
								"name": "BigNumberProperty",
								"package": "@medusajs/utils"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17413,
								"name": "BaseProperty.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 17412,
						"name": "BaseProperty.constructor"
					}
				},
				{
					"id": 16999,
					"name": "$dataType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A type-only property to infer the JavScript data-type\nof the schema property"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 17425,
						"name": "BaseProperty.$dataType"
					}
				},
				{
					"id": 17000,
					"name": "nullable",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"signatures": [
						{
							"id": 17001,
							"name": "nullable",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Apply nullable modifier on the schema"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 16967,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"target": 16984,
										"name": "BigNumberProperty",
										"package": "@medusajs/utils"
									}
								],
								"name": "NullableModifier",
								"package": "@medusajs/utils"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17427,
								"name": "BaseProperty.nullable"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 17426,
						"name": "BaseProperty.nullable"
					}
				},
				{
					"id": 17002,
					"name": "index",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"signatures": [
						{
							"id": 17003,
							"name": "index",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Define an index on the property"
									}
								]
							},
							"parameters": [
								{
									"id": 17004,
									"name": "name",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 16984,
								"name": "BigNumberProperty",
								"package": "@medusajs/utils"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17429,
								"name": "BaseProperty.index"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 17428,
						"name": "BaseProperty.index"
					}
				},
				{
					"id": 17005,
					"name": "unique",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"signatures": [
						{
							"id": 17006,
							"name": "unique",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Define a unique index on the property"
									}
								]
							},
							"parameters": [
								{
									"id": 17007,
									"name": "name",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 16984,
								"name": "BigNumberProperty",
								"package": "@medusajs/utils"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17432,
								"name": "BaseProperty.unique"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 17431,
						"name": "BaseProperty.unique"
					}
				},
				{
					"id": 17008,
					"name": "default",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"signatures": [
						{
							"id": 17009,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Define default value for the property"
									}
								]
							},
							"parameters": [
								{
									"id": 17010,
									"name": "value",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 16984,
								"name": "BigNumberProperty",
								"package": "@medusajs/utils"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17435,
								"name": "BaseProperty.default"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 17434,
						"name": "BaseProperty.default"
					}
				},
				{
					"id": 17011,
					"name": "parse",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"signatures": [
						{
							"id": 17012,
							"name": "parse",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the serialized metadata"
									}
								]
							},
							"parameters": [
								{
									"id": 17013,
									"name": "fieldName",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 17397,
								"name": "PropertyMetadata",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17438,
								"name": "BaseProperty.parse"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 17437,
						"name": "BaseProperty.parse"
					}
				},
				{
					"id": 16990,
					"name": "dataType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The runtime dataType for the schema. It is not the same as\nthe \"$dataType\"."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 16991,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 16992,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isReadonly": true
									},
									"type": {
										"type": "literal",
										"value": "bigNumber"
									},
									"defaultValue": "\"bigNumber\""
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										16992
									]
								}
							]
						}
					},
					"defaultValue": "...",
					"overwrites": {
						"type": "reference",
						"target": 17421,
						"name": "BaseProperty.dataType"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						16988
					]
				},
				{
					"title": "Properties",
					"children": [
						16999,
						16990
					]
				},
				{
					"title": "Methods",
					"children": [
						16985,
						17000,
						17002,
						17005,
						17008,
						17011
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 17411,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "BaseProperty",
					"package": "@medusajs/utils"
				}
			]
		},
		{
			"id": 17123,
			"name": "BooleanProperty",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The BooleanProperty class is used to define a boolean\nproperty"
					}
				]
			},
			"children": [
				{
					"id": 17124,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 17125,
							"name": "new BooleanProperty",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 17123,
								"name": "BooleanProperty",
								"package": "@medusajs/utils"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17413,
								"name": "BaseProperty.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 17412,
						"name": "BaseProperty.constructor"
					}
				},
				{
					"id": 17135,
					"name": "$dataType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A type-only property to infer the JavScript data-type\nof the schema property"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 17425,
						"name": "BaseProperty.$dataType"
					}
				},
				{
					"id": 17136,
					"name": "nullable",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"signatures": [
						{
							"id": 17137,
							"name": "nullable",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Apply nullable modifier on the schema"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 16967,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"target": 17123,
										"name": "BooleanProperty",
										"package": "@medusajs/utils"
									}
								],
								"name": "NullableModifier",
								"package": "@medusajs/utils"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17427,
								"name": "BaseProperty.nullable"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 17426,
						"name": "BaseProperty.nullable"
					}
				},
				{
					"id": 17138,
					"name": "index",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"signatures": [
						{
							"id": 17139,
							"name": "index",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Define an index on the property"
									}
								]
							},
							"parameters": [
								{
									"id": 17140,
									"name": "name",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 17123,
								"name": "BooleanProperty",
								"package": "@medusajs/utils"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17429,
								"name": "BaseProperty.index"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 17428,
						"name": "BaseProperty.index"
					}
				},
				{
					"id": 17141,
					"name": "unique",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"signatures": [
						{
							"id": 17142,
							"name": "unique",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Define a unique index on the property"
									}
								]
							},
							"parameters": [
								{
									"id": 17143,
									"name": "name",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 17123,
								"name": "BooleanProperty",
								"package": "@medusajs/utils"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17432,
								"name": "BaseProperty.unique"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 17431,
						"name": "BaseProperty.unique"
					}
				},
				{
					"id": 17144,
					"name": "default",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"signatures": [
						{
							"id": 17145,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Define default value for the property"
									}
								]
							},
							"parameters": [
								{
									"id": 17146,
									"name": "value",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 17123,
								"name": "BooleanProperty",
								"package": "@medusajs/utils"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17435,
								"name": "BaseProperty.default"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 17434,
						"name": "BaseProperty.default"
					}
				},
				{
					"id": 17147,
					"name": "parse",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"signatures": [
						{
							"id": 17148,
							"name": "parse",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the serialized metadata"
									}
								]
							},
							"parameters": [
								{
									"id": 17149,
									"name": "fieldName",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 17397,
								"name": "PropertyMetadata",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17438,
								"name": "BaseProperty.parse"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 17437,
						"name": "BaseProperty.parse"
					}
				},
				{
					"id": 17126,
					"name": "dataType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The runtime dataType for the schema. It is not the same as\nthe \"$dataType\"."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 17127,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 17128,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isReadonly": true
									},
									"type": {
										"type": "literal",
										"value": "boolean"
									},
									"defaultValue": "\"boolean\""
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										17128
									]
								}
							]
						}
					},
					"defaultValue": "...",
					"overwrites": {
						"type": "reference",
						"target": 17421,
						"name": "BaseProperty.dataType"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						17124
					]
				},
				{
					"title": "Properties",
					"children": [
						17135,
						17126
					]
				},
				{
					"title": "Methods",
					"children": [
						17136,
						17138,
						17141,
						17144,
						17147
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 17411,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "boolean"
						}
					],
					"name": "BaseProperty",
					"package": "@medusajs/utils"
				}
			]
		},
		{
			"id": 17212,
			"name": "DateTimeProperty",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The DateTimeProperty class is used to define a timestampz\nproperty"
					}
				]
			},
			"children": [
				{
					"id": 17213,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 17214,
							"name": "new DateTimeProperty",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 17212,
								"name": "DateTimeProperty",
								"package": "@medusajs/utils"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17413,
								"name": "BaseProperty.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 17412,
						"name": "BaseProperty.constructor"
					}
				},
				{
					"id": 17224,
					"name": "$dataType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A type-only property to infer the JavScript data-type\nof the schema property"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 17425,
						"name": "BaseProperty.$dataType"
					}
				},
				{
					"id": 17225,
					"name": "nullable",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"signatures": [
						{
							"id": 17226,
							"name": "nullable",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Apply nullable modifier on the schema"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 16967,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									},
									{
										"type": "reference",
										"target": 17212,
										"name": "DateTimeProperty",
										"package": "@medusajs/utils"
									}
								],
								"name": "NullableModifier",
								"package": "@medusajs/utils"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17427,
								"name": "BaseProperty.nullable"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 17426,
						"name": "BaseProperty.nullable"
					}
				},
				{
					"id": 17227,
					"name": "index",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"signatures": [
						{
							"id": 17228,
							"name": "index",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Define an index on the property"
									}
								]
							},
							"parameters": [
								{
									"id": 17229,
									"name": "name",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 17212,
								"name": "DateTimeProperty",
								"package": "@medusajs/utils"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17429,
								"name": "BaseProperty.index"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 17428,
						"name": "BaseProperty.index"
					}
				},
				{
					"id": 17230,
					"name": "unique",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"signatures": [
						{
							"id": 17231,
							"name": "unique",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Define a unique index on the property"
									}
								]
							},
							"parameters": [
								{
									"id": 17232,
									"name": "name",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 17212,
								"name": "DateTimeProperty",
								"package": "@medusajs/utils"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17432,
								"name": "BaseProperty.unique"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 17431,
						"name": "BaseProperty.unique"
					}
				},
				{
					"id": 17233,
					"name": "default",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"signatures": [
						{
							"id": 17234,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Define default value for the property"
									}
								]
							},
							"parameters": [
								{
									"id": 17235,
									"name": "value",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 17212,
								"name": "DateTimeProperty",
								"package": "@medusajs/utils"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17435,
								"name": "BaseProperty.default"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 17434,
						"name": "BaseProperty.default"
					}
				},
				{
					"id": 17236,
					"name": "parse",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"signatures": [
						{
							"id": 17237,
							"name": "parse",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the serialized metadata"
									}
								]
							},
							"parameters": [
								{
									"id": 17238,
									"name": "fieldName",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 17397,
								"name": "PropertyMetadata",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17438,
								"name": "BaseProperty.parse"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 17437,
						"name": "BaseProperty.parse"
					}
				},
				{
					"id": 17215,
					"name": "dataType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The runtime dataType for the schema. It is not the same as\nthe \"$dataType\"."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 17216,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 17217,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isReadonly": true
									},
									"type": {
										"type": "literal",
										"value": "dateTime"
									},
									"defaultValue": "\"dateTime\""
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										17217
									]
								}
							]
						}
					},
					"defaultValue": "...",
					"overwrites": {
						"type": "reference",
						"target": 17421,
						"name": "BaseProperty.dataType"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						17213
					]
				},
				{
					"title": "Properties",
					"children": [
						17224,
						17215
					]
				},
				{
					"title": "Methods",
					"children": [
						17225,
						17227,
						17230,
						17233,
						17236
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 17411,
					"typeArguments": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Date"
							},
							"name": "Date",
							"package": "typescript"
						}
					],
					"name": "BaseProperty",
					"package": "@medusajs/utils"
				}
			]
		},
		{
			"id": 17239,
			"name": "EnumProperty",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The EnumProperty is used to define a property with pre-defined\nlist of choices."
					}
				]
			},
			"children": [
				{
					"id": 17256,
					"name": "$dataType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A type-only property to infer the JavScript data-type\nof the schema property"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 17242,
						"name": "Values",
						"package": "@medusajs/utils",
						"qualifiedName": "EnumProperty.Values",
						"refersToTypeParameter": true
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 17425,
						"name": "BaseProperty.$dataType"
					}
				},
				{
					"id": 17257,
					"name": "nullable",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"signatures": [
						{
							"id": 17258,
							"name": "nullable",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Apply nullable modifier on the schema"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 16967,
								"typeArguments": [
									{
										"type": "reference",
										"target": 17242,
										"name": "Values",
										"package": "@medusajs/utils",
										"qualifiedName": "EnumProperty.Values",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 17239,
										"typeArguments": [
											{
												"type": "reference",
												"target": 17242,
												"name": "Values",
												"package": "@medusajs/utils",
												"qualifiedName": "EnumProperty.Values",
												"refersToTypeParameter": true
											}
										],
										"name": "EnumProperty",
										"package": "@medusajs/utils"
									}
								],
								"name": "NullableModifier",
								"package": "@medusajs/utils"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17427,
								"name": "BaseProperty.nullable"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 17426,
						"name": "BaseProperty.nullable"
					}
				},
				{
					"id": 17259,
					"name": "index",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"signatures": [
						{
							"id": 17260,
							"name": "index",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Define an index on the property"
									}
								]
							},
							"parameters": [
								{
									"id": 17261,
									"name": "name",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 17239,
								"typeArguments": [
									{
										"type": "reference",
										"target": 17242,
										"name": "Values",
										"package": "@medusajs/utils",
										"qualifiedName": "EnumProperty.Values",
										"refersToTypeParameter": true
									}
								],
								"name": "EnumProperty",
								"package": "@medusajs/utils"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17429,
								"name": "BaseProperty.index"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 17428,
						"name": "BaseProperty.index"
					}
				},
				{
					"id": 17262,
					"name": "unique",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"signatures": [
						{
							"id": 17263,
							"name": "unique",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Define a unique index on the property"
									}
								]
							},
							"parameters": [
								{
									"id": 17264,
									"name": "name",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 17239,
								"typeArguments": [
									{
										"type": "reference",
										"target": 17242,
										"name": "Values",
										"package": "@medusajs/utils",
										"qualifiedName": "EnumProperty.Values",
										"refersToTypeParameter": true
									}
								],
								"name": "EnumProperty",
								"package": "@medusajs/utils"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17432,
								"name": "BaseProperty.unique"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 17431,
						"name": "BaseProperty.unique"
					}
				},
				{
					"id": 17265,
					"name": "default",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"signatures": [
						{
							"id": 17266,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Define default value for the property"
									}
								]
							},
							"parameters": [
								{
									"id": 17267,
									"name": "value",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 17242,
										"name": "Values",
										"package": "@medusajs/utils",
										"qualifiedName": "EnumProperty.Values",
										"refersToTypeParameter": true
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 17239,
								"typeArguments": [
									{
										"type": "reference",
										"target": 17242,
										"name": "Values",
										"package": "@medusajs/utils",
										"qualifiedName": "EnumProperty.Values",
										"refersToTypeParameter": true
									}
								],
								"name": "EnumProperty",
								"package": "@medusajs/utils"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17435,
								"name": "BaseProperty.default"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 17434,
						"name": "BaseProperty.default"
					}
				},
				{
					"id": 17268,
					"name": "parse",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"signatures": [
						{
							"id": 17269,
							"name": "parse",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the serialized metadata"
									}
								]
							},
							"parameters": [
								{
									"id": 17270,
									"name": "fieldName",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 17397,
								"name": "PropertyMetadata",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17438,
								"name": "BaseProperty.parse"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 17437,
						"name": "BaseProperty.parse"
					}
				},
				{
					"id": 17244,
					"name": "dataType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The runtime dataType for the schema. It is not the same as\nthe \"$dataType\"."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 17245,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 17246,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "enum"
									}
								},
								{
									"id": 17247,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 17248,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 17249,
													"name": "choices",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 17242,
															"name": "Values",
															"package": "@medusajs/utils",
															"qualifiedName": "EnumProperty.Values",
															"refersToTypeParameter": true
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														17249
													]
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										17246,
										17247
									]
								}
							]
						}
					},
					"overwrites": {
						"type": "reference",
						"target": 17421,
						"name": "BaseProperty.dataType"
					}
				},
				{
					"id": 17240,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 17241,
							"name": "new EnumProperty",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"typeParameters": [
								{
									"id": 17242,
									"name": "Values",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {
										"isConst": true
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"parameters": [
								{
									"id": 17243,
									"name": "values",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 17242,
											"name": "Values",
											"package": "@medusajs/utils",
											"qualifiedName": "EnumProperty.Values",
											"refersToTypeParameter": true
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 17239,
								"typeArguments": [
									{
										"type": "reference",
										"target": 17242,
										"name": "Values",
										"package": "@medusajs/utils",
										"qualifiedName": "EnumProperty.Values",
										"refersToTypeParameter": true
									}
								],
								"name": "EnumProperty",
								"package": "@medusajs/utils"
							},
							"overwrites": {
								"type": "reference",
								"target": 17413,
								"name": "BaseProperty.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": 17412,
						"name": "BaseProperty.constructor"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						17240
					]
				},
				{
					"title": "Properties",
					"children": [
						17256,
						17244
					]
				},
				{
					"title": "Methods",
					"children": [
						17257,
						17259,
						17262,
						17265,
						17268
					]
				}
			],
			"typeParameters": [
				{
					"id": 17271,
					"name": "Values",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {
						"isConst": true
					},
					"type": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 17411,
					"typeArguments": [
						{
							"type": "reference",
							"target": 17242,
							"name": "Values",
							"package": "@medusajs/utils",
							"qualifiedName": "EnumProperty.Values",
							"refersToTypeParameter": true
						}
					],
					"name": "BaseProperty",
					"package": "@medusajs/utils"
				}
			]
		},
		{
			"id": 17046,
			"name": "IdProperty",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The Id property defines a unique identifier for the schema.\nMost of the times it will be the primary as well."
					}
				]
			},
			"children": [
				{
					"id": 17069,
					"name": "$dataType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A type-only property to infer the JavScript data-type\nof the schema property"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 17425,
						"name": "BaseProperty.$dataType"
					}
				},
				{
					"id": 17070,
					"name": "nullable",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"signatures": [
						{
							"id": 17071,
							"name": "nullable",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Apply nullable modifier on the schema"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 16967,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 17046,
										"name": "IdProperty",
										"package": "@medusajs/utils"
									}
								],
								"name": "NullableModifier",
								"package": "@medusajs/utils"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17427,
								"name": "BaseProperty.nullable"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 17426,
						"name": "BaseProperty.nullable"
					}
				},
				{
					"id": 17072,
					"name": "index",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"signatures": [
						{
							"id": 17073,
							"name": "index",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Define an index on the property"
									}
								]
							},
							"parameters": [
								{
									"id": 17074,
									"name": "name",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 17046,
								"name": "IdProperty",
								"package": "@medusajs/utils"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17429,
								"name": "BaseProperty.index"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 17428,
						"name": "BaseProperty.index"
					}
				},
				{
					"id": 17075,
					"name": "unique",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"signatures": [
						{
							"id": 17076,
							"name": "unique",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Define a unique index on the property"
									}
								]
							},
							"parameters": [
								{
									"id": 17077,
									"name": "name",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 17046,
								"name": "IdProperty",
								"package": "@medusajs/utils"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17432,
								"name": "BaseProperty.unique"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 17431,
						"name": "BaseProperty.unique"
					}
				},
				{
					"id": 17078,
					"name": "default",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"signatures": [
						{
							"id": 17079,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Define default value for the property"
									}
								]
							},
							"parameters": [
								{
									"id": 17080,
									"name": "value",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 17046,
								"name": "IdProperty",
								"package": "@medusajs/utils"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17435,
								"name": "BaseProperty.default"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 17434,
						"name": "BaseProperty.default"
					}
				},
				{
					"id": 17081,
					"name": "parse",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"signatures": [
						{
							"id": 17082,
							"name": "parse",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the serialized metadata"
									}
								]
							},
							"parameters": [
								{
									"id": 17083,
									"name": "fieldName",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 17397,
								"name": "PropertyMetadata",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17438,
								"name": "BaseProperty.parse"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 17437,
						"name": "BaseProperty.parse"
					}
				},
				{
					"id": 17053,
					"name": "dataType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The runtime dataType for the schema. It is not the same as\nthe \"$dataType\"."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 17054,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 17055,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "id"
									}
								},
								{
									"id": 17056,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 17057,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 17058,
													"name": "primaryKey",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 17059,
													"name": "prefix",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														17058,
														17059
													]
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										17055,
										17056
									]
								}
							]
						}
					},
					"overwrites": {
						"type": "reference",
						"target": 17421,
						"name": "BaseProperty.dataType"
					}
				},
				{
					"id": 17047,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 17048,
							"name": "new IdProperty",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 17049,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 17050,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 17051,
													"name": "primaryKey",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 17052,
													"name": "prefix",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														17051,
														17052
													]
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 17046,
								"name": "IdProperty",
								"package": "@medusajs/utils"
							},
							"overwrites": {
								"type": "reference",
								"target": 17413,
								"name": "BaseProperty.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": 17412,
						"name": "BaseProperty.constructor"
					}
				},
				{
					"id": 17060,
					"name": "primaryKey",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 17061,
							"name": "primaryKey",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 17062,
									"name": "decision",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 17046,
								"name": "IdProperty",
								"package": "@medusajs/utils"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						17047
					]
				},
				{
					"title": "Properties",
					"children": [
						17069,
						17053
					]
				},
				{
					"title": "Methods",
					"children": [
						17070,
						17072,
						17075,
						17078,
						17081,
						17060
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 17411,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "string"
						}
					],
					"name": "BaseProperty",
					"package": "@medusajs/utils"
				}
			]
		},
		{
			"id": 17014,
			"name": "JSONProperty",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The JSONProperty is used to define a property that stores\ndata as a JSON string"
					}
				]
			},
			"children": [
				{
					"id": 17015,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 17016,
							"name": "new JSONProperty",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 17014,
								"name": "JSONProperty",
								"package": "@medusajs/utils"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17413,
								"name": "BaseProperty.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 17412,
						"name": "BaseProperty.constructor"
					}
				},
				{
					"id": 17026,
					"name": "$dataType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A type-only property to infer the JavScript data-type\nof the schema property"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 17425,
						"name": "BaseProperty.$dataType"
					}
				},
				{
					"id": 17027,
					"name": "nullable",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"signatures": [
						{
							"id": 17028,
							"name": "nullable",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Apply nullable modifier on the schema"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 16967,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									},
									{
										"type": "reference",
										"target": 17014,
										"name": "JSONProperty",
										"package": "@medusajs/utils"
									}
								],
								"name": "NullableModifier",
								"package": "@medusajs/utils"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17427,
								"name": "BaseProperty.nullable"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 17426,
						"name": "BaseProperty.nullable"
					}
				},
				{
					"id": 17029,
					"name": "index",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"signatures": [
						{
							"id": 17030,
							"name": "index",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Define an index on the property"
									}
								]
							},
							"parameters": [
								{
									"id": 17031,
									"name": "name",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 17014,
								"name": "JSONProperty",
								"package": "@medusajs/utils"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17429,
								"name": "BaseProperty.index"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 17428,
						"name": "BaseProperty.index"
					}
				},
				{
					"id": 17032,
					"name": "unique",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"signatures": [
						{
							"id": 17033,
							"name": "unique",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Define a unique index on the property"
									}
								]
							},
							"parameters": [
								{
									"id": 17034,
									"name": "name",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 17014,
								"name": "JSONProperty",
								"package": "@medusajs/utils"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17432,
								"name": "BaseProperty.unique"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 17431,
						"name": "BaseProperty.unique"
					}
				},
				{
					"id": 17035,
					"name": "default",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"signatures": [
						{
							"id": 17036,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Define default value for the property"
									}
								]
							},
							"parameters": [
								{
									"id": 17037,
									"name": "value",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 17014,
								"name": "JSONProperty",
								"package": "@medusajs/utils"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17435,
								"name": "BaseProperty.default"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 17434,
						"name": "BaseProperty.default"
					}
				},
				{
					"id": 17038,
					"name": "parse",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"signatures": [
						{
							"id": 17039,
							"name": "parse",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the serialized metadata"
									}
								]
							},
							"parameters": [
								{
									"id": 17040,
									"name": "fieldName",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 17397,
								"name": "PropertyMetadata",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17438,
								"name": "BaseProperty.parse"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 17437,
						"name": "BaseProperty.parse"
					}
				},
				{
					"id": 17017,
					"name": "dataType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The runtime dataType for the schema. It is not the same as\nthe \"$dataType\"."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 17018,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 17019,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isReadonly": true
									},
									"type": {
										"type": "literal",
										"value": "json"
									},
									"defaultValue": "\"json\""
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										17019
									]
								}
							]
						}
					},
					"defaultValue": "...",
					"overwrites": {
						"type": "reference",
						"target": 17421,
						"name": "BaseProperty.dataType"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						17015
					]
				},
				{
					"title": "Properties",
					"children": [
						17026,
						17017
					]
				},
				{
					"title": "Methods",
					"children": [
						17027,
						17029,
						17032,
						17035,
						17038
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 17411,
					"typeArguments": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Record"
							},
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "intrinsic",
									"name": "unknown"
								}
							],
							"name": "Record",
							"package": "typescript"
						}
					],
					"name": "BaseProperty",
					"package": "@medusajs/utils"
				}
			]
		},
		{
			"id": 16967,
			"name": "NullableModifier",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Nullable modifier marks a schema node as nullable"
					}
				]
			},
			"children": [
				{
					"id": 16981,
					"name": "[IsNullableModifier]",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "literal",
						"value": true
					},
					"defaultValue": "true"
				},
				{
					"id": 16968,
					"name": "isNullableModifier",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"signatures": [
						{
							"id": 16969,
							"name": "isNullableModifier",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 16970,
									"name": "obj",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "obj",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"target": 16967,
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "any"
										},
										{
											"type": "intrinsic",
											"name": "any"
										}
									],
									"name": "NullableModifier",
									"package": "@medusajs/utils"
								}
							}
						}
					]
				},
				{
					"id": 16976,
					"name": "$dataType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A type-only property to infer the JavScript data-type\nof the schema property"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 16973,
								"name": "T",
								"package": "@medusajs/utils",
								"qualifiedName": "NullableModifier.T",
								"refersToTypeParameter": true
							}
						]
					},
					"implementationOf": {
						"type": "reference",
						"target": -1,
						"name": "PropertyType.$dataType"
					}
				},
				{
					"id": 16971,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 16972,
							"name": "new NullableModifier",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"typeParameters": [
								{
									"id": 16973,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 16974,
									"name": "Schema",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 17382,
										"typeArguments": [
											{
												"type": "reference",
												"target": 16973,
												"name": "T",
												"package": "@medusajs/utils",
												"qualifiedName": "NullableModifier.T",
												"refersToTypeParameter": true
											}
										],
										"name": "PropertyType",
										"package": "@medusajs/types"
									}
								}
							],
							"parameters": [
								{
									"id": 16975,
									"name": "schema",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 16974,
										"name": "Schema",
										"package": "@medusajs/utils",
										"qualifiedName": "NullableModifier.Schema",
										"refersToTypeParameter": true
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 16967,
								"typeArguments": [
									{
										"type": "reference",
										"target": 16973,
										"name": "T",
										"package": "@medusajs/utils",
										"qualifiedName": "NullableModifier.T",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 16974,
										"name": "Schema",
										"package": "@medusajs/utils",
										"qualifiedName": "NullableModifier.Schema",
										"refersToTypeParameter": true
									}
								],
								"name": "NullableModifier",
								"package": "@medusajs/utils"
							}
						}
					]
				},
				{
					"id": 16978,
					"name": "parse",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 16979,
							"name": "parse",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the serialized metadata"
									}
								]
							},
							"parameters": [
								{
									"id": 16980,
									"name": "fieldName",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 17397,
								"name": "PropertyMetadata",
								"package": "@medusajs/types"
							},
							"implementationOf": {
								"type": "reference",
								"target": -1,
								"name": "PropertyType.parse"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": -1,
						"name": "PropertyType.parse"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						16971
					]
				},
				{
					"title": "Properties",
					"children": [
						16981,
						16976
					]
				},
				{
					"title": "Methods",
					"children": [
						16968,
						16978
					]
				}
			],
			"typeParameters": [
				{
					"id": 16982,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 16983,
					"name": "Schema",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 17382,
						"typeArguments": [
							{
								"type": "reference",
								"target": 16973,
								"name": "T",
								"package": "@medusajs/utils",
								"qualifiedName": "NullableModifier.T",
								"refersToTypeParameter": true
							}
						],
						"name": "PropertyType",
						"package": "@medusajs/types"
					}
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"target": 17382,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 16973,
									"name": "T",
									"package": "@medusajs/utils",
									"qualifiedName": "NullableModifier.T",
									"refersToTypeParameter": true
								},
								{
									"type": "literal",
									"value": null
								}
							]
						}
					],
					"name": "PropertyType",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 17150,
			"name": "NumberProperty",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The NumberProperty is used to define a numeric/integer\nproperty"
					}
				]
			},
			"children": [
				{
					"id": 17170,
					"name": "$dataType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A type-only property to infer the JavScript data-type\nof the schema property"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 17425,
						"name": "BaseProperty.$dataType"
					}
				},
				{
					"id": 17171,
					"name": "nullable",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"signatures": [
						{
							"id": 17172,
							"name": "nullable",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Apply nullable modifier on the schema"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 16967,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"target": 17150,
										"name": "NumberProperty",
										"package": "@medusajs/utils"
									}
								],
								"name": "NullableModifier",
								"package": "@medusajs/utils"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17427,
								"name": "BaseProperty.nullable"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 17426,
						"name": "BaseProperty.nullable"
					}
				},
				{
					"id": 17173,
					"name": "index",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"signatures": [
						{
							"id": 17174,
							"name": "index",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Define an index on the property"
									}
								]
							},
							"parameters": [
								{
									"id": 17175,
									"name": "name",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 17150,
								"name": "NumberProperty",
								"package": "@medusajs/utils"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17429,
								"name": "BaseProperty.index"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 17428,
						"name": "BaseProperty.index"
					}
				},
				{
					"id": 17176,
					"name": "unique",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"signatures": [
						{
							"id": 17177,
							"name": "unique",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Define a unique index on the property"
									}
								]
							},
							"parameters": [
								{
									"id": 17178,
									"name": "name",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 17150,
								"name": "NumberProperty",
								"package": "@medusajs/utils"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17432,
								"name": "BaseProperty.unique"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 17431,
						"name": "BaseProperty.unique"
					}
				},
				{
					"id": 17179,
					"name": "default",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"signatures": [
						{
							"id": 17180,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Define default value for the property"
									}
								]
							},
							"parameters": [
								{
									"id": 17181,
									"name": "value",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 17150,
								"name": "NumberProperty",
								"package": "@medusajs/utils"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17435,
								"name": "BaseProperty.default"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 17434,
						"name": "BaseProperty.default"
					}
				},
				{
					"id": 17182,
					"name": "parse",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"signatures": [
						{
							"id": 17183,
							"name": "parse",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the serialized metadata"
									}
								]
							},
							"parameters": [
								{
									"id": 17184,
									"name": "fieldName",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 17397,
								"name": "PropertyMetadata",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17438,
								"name": "BaseProperty.parse"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 17437,
						"name": "BaseProperty.parse"
					}
				},
				{
					"id": 17156,
					"name": "dataType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The runtime dataType for the schema. It is not the same as\nthe \"$dataType\"."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 17157,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 17158,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "number"
									}
								},
								{
									"id": 17159,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 17160,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 17161,
													"name": "primaryKey",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														17161
													]
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										17158,
										17159
									]
								}
							]
						}
					},
					"overwrites": {
						"type": "reference",
						"target": 17421,
						"name": "BaseProperty.dataType"
					}
				},
				{
					"id": 17162,
					"name": "primaryKey",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 17163,
							"name": "primaryKey",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 17150,
								"name": "NumberProperty",
								"package": "@medusajs/utils"
							}
						}
					]
				},
				{
					"id": 17151,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 17152,
							"name": "new NumberProperty",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 17153,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 17154,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 17155,
													"name": "primaryKey",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														17155
													]
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 17150,
								"name": "NumberProperty",
								"package": "@medusajs/utils"
							},
							"overwrites": {
								"type": "reference",
								"target": 17413,
								"name": "BaseProperty.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": 17412,
						"name": "BaseProperty.constructor"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						17151
					]
				},
				{
					"title": "Properties",
					"children": [
						17170,
						17156
					]
				},
				{
					"title": "Methods",
					"children": [
						17171,
						17173,
						17176,
						17179,
						17182,
						17162
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 17411,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "BaseProperty",
					"package": "@medusajs/utils"
				}
			]
		},
		{
			"id": 17084,
			"name": "TextProperty",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The TextProperty is used to define a textual property"
					}
				]
			},
			"children": [
				{
					"id": 17108,
					"name": "$dataType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A type-only property to infer the JavScript data-type\nof the schema property"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 17425,
						"name": "BaseProperty.$dataType"
					}
				},
				{
					"id": 17109,
					"name": "nullable",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"signatures": [
						{
							"id": 17110,
							"name": "nullable",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Apply nullable modifier on the schema"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 16967,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 17084,
										"name": "TextProperty",
										"package": "@medusajs/utils"
									}
								],
								"name": "NullableModifier",
								"package": "@medusajs/utils"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17427,
								"name": "BaseProperty.nullable"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 17426,
						"name": "BaseProperty.nullable"
					}
				},
				{
					"id": 17111,
					"name": "index",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"signatures": [
						{
							"id": 17112,
							"name": "index",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Define an index on the property"
									}
								]
							},
							"parameters": [
								{
									"id": 17113,
									"name": "name",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 17084,
								"name": "TextProperty",
								"package": "@medusajs/utils"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17429,
								"name": "BaseProperty.index"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 17428,
						"name": "BaseProperty.index"
					}
				},
				{
					"id": 17114,
					"name": "unique",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"signatures": [
						{
							"id": 17115,
							"name": "unique",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Define a unique index on the property"
									}
								]
							},
							"parameters": [
								{
									"id": 17116,
									"name": "name",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 17084,
								"name": "TextProperty",
								"package": "@medusajs/utils"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17432,
								"name": "BaseProperty.unique"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 17431,
						"name": "BaseProperty.unique"
					}
				},
				{
					"id": 17117,
					"name": "default",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"signatures": [
						{
							"id": 17118,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Define default value for the property"
									}
								]
							},
							"parameters": [
								{
									"id": 17119,
									"name": "value",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 17084,
								"name": "TextProperty",
								"package": "@medusajs/utils"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17435,
								"name": "BaseProperty.default"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 17434,
						"name": "BaseProperty.default"
					}
				},
				{
					"id": 17120,
					"name": "parse",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"signatures": [
						{
							"id": 17121,
							"name": "parse",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the serialized metadata"
									}
								]
							},
							"parameters": [
								{
									"id": 17122,
									"name": "fieldName",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 17397,
								"name": "PropertyMetadata",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17438,
								"name": "BaseProperty.parse"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 17437,
						"name": "BaseProperty.parse"
					}
				},
				{
					"id": 17091,
					"name": "dataType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The runtime dataType for the schema. It is not the same as\nthe \"$dataType\"."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 17092,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 17093,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "text"
									}
								},
								{
									"id": 17094,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 17095,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 17096,
													"name": "primaryKey",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 17097,
													"name": "searchable",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														17096,
														17097
													]
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										17093,
										17094
									]
								}
							]
						}
					},
					"overwrites": {
						"type": "reference",
						"target": 17421,
						"name": "BaseProperty.dataType"
					}
				},
				{
					"id": 17098,
					"name": "primaryKey",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 17099,
							"name": "primaryKey",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 17084,
								"name": "TextProperty",
								"package": "@medusajs/utils"
							}
						}
					]
				},
				{
					"id": 17100,
					"name": "searchable",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 17101,
							"name": "searchable",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 17084,
								"name": "TextProperty",
								"package": "@medusajs/utils"
							}
						}
					]
				},
				{
					"id": 17085,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 17086,
							"name": "new TextProperty",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 17087,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 17088,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 17089,
													"name": "primaryKey",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 17090,
													"name": "searchable",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														17089,
														17090
													]
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 17084,
								"name": "TextProperty",
								"package": "@medusajs/utils"
							},
							"overwrites": {
								"type": "reference",
								"target": 17413,
								"name": "BaseProperty.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": 17412,
						"name": "BaseProperty.constructor"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						17085
					]
				},
				{
					"title": "Properties",
					"children": [
						17108,
						17091
					]
				},
				{
					"title": "Methods",
					"children": [
						17109,
						17111,
						17114,
						17117,
						17120,
						17098,
						17100
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 17411,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "string"
						}
					],
					"name": "BaseProperty",
					"package": "@medusajs/utils"
				}
			]
		},
		{
			"id": 17449,
			"name": "BaseRelationship",
			"variant": "declaration",
			"kind": 128,
			"flags": {
				"isAbstract": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The BaseRelationship encapsulates the repetitive parts of defining\na relationship"
					}
				]
			},
			"children": [
				{
					"id": 17456,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Configuration options for the relationship"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 17272,
						"name": "RelationshipOptions",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 17457,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isAbstract": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Relationship type"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 17484,
						"name": "RelationshipTypes",
						"package": "@medusajs/types"
					},
					"implementationOf": {
						"type": "reference",
						"target": -1,
						"name": "RelationshipType.type"
					}
				},
				{
					"id": 17458,
					"name": "$dataType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A type-only property to infer the JavScript data-type\nof the relationship property"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 17452,
						"name": "T",
						"package": "@medusajs/utils",
						"qualifiedName": "BaseRelationship.T",
						"refersToTypeParameter": true
					},
					"implementationOf": {
						"type": "reference",
						"target": -1,
						"name": "RelationshipType.$dataType"
					}
				},
				{
					"id": 17450,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 17451,
							"name": "new BaseRelationship",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"typeParameters": [
								{
									"id": 17452,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 17453,
									"name": "referencedEntity",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 17452,
										"name": "T",
										"package": "@medusajs/utils",
										"qualifiedName": "BaseRelationship.T",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 17454,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 17272,
										"name": "RelationshipOptions",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 17449,
								"typeArguments": [
									{
										"type": "reference",
										"target": 17452,
										"name": "T",
										"package": "@medusajs/utils",
										"qualifiedName": "BaseRelationship.T",
										"refersToTypeParameter": true
									}
								],
								"name": "BaseRelationship",
								"package": "@medusajs/utils"
							}
						}
					]
				},
				{
					"id": 17459,
					"name": "parse",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 17460,
							"name": "parse",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the parsed copy of the relationship"
									}
								]
							},
							"parameters": [
								{
									"id": 17461,
									"name": "relationshipName",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 17441,
								"name": "RelationshipMetadata",
								"package": "@medusajs/types"
							},
							"implementationOf": {
								"type": "reference",
								"target": -1,
								"name": "RelationshipType.parse"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": -1,
						"name": "RelationshipType.parse"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						17450
					]
				},
				{
					"title": "Properties",
					"children": [
						17456,
						17457,
						17458
					]
				},
				{
					"title": "Methods",
					"children": [
						17459
					]
				}
			],
			"typeParameters": [
				{
					"id": 17462,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 17275,
					"name": "HasOne"
				},
				{
					"type": "reference",
					"target": 17295,
					"name": "BelongsTo"
				},
				{
					"type": "reference",
					"target": 17315,
					"name": "HasMany"
				},
				{
					"type": "reference",
					"target": 17333,
					"name": "ManyToMany"
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"target": 17389,
					"typeArguments": [
						{
							"type": "reference",
							"target": 17452,
							"name": "T",
							"package": "@medusajs/utils",
							"qualifiedName": "BaseRelationship.T",
							"refersToTypeParameter": true
						}
					],
					"name": "RelationshipType",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 17295,
			"name": "BelongsTo",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The BaseRelationship encapsulates the repetitive parts of defining\na relationship"
					}
				]
			},
			"children": [
				{
					"id": 17309,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Configuration options for the relationship"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 17272,
						"name": "RelationshipOptions",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 17456,
						"name": "BaseRelationship.options"
					}
				},
				{
					"id": 17310,
					"name": "$dataType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A type-only property to infer the JavScript data-type\nof the relationship property"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 17302,
						"name": "T",
						"package": "@medusajs/utils",
						"qualifiedName": "BelongsTo.T",
						"refersToTypeParameter": true
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 17458,
						"name": "BaseRelationship.$dataType"
					}
				},
				{
					"id": 17300,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 17301,
							"name": "new BelongsTo",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"typeParameters": [
								{
									"id": 17302,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 17303,
									"name": "referencedEntity",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 17302,
										"name": "T",
										"package": "@medusajs/utils",
										"qualifiedName": "BelongsTo.T",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 17304,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 17272,
										"name": "RelationshipOptions",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 17295,
								"typeArguments": [
									{
										"type": "reference",
										"target": 17302,
										"name": "T",
										"package": "@medusajs/utils",
										"qualifiedName": "BelongsTo.T",
										"refersToTypeParameter": true
									}
								],
								"name": "BelongsTo",
								"package": "@medusajs/utils"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17451,
								"name": "BaseRelationship.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 17450,
						"name": "BaseRelationship.constructor"
					}
				},
				{
					"id": 17311,
					"name": "parse",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"signatures": [
						{
							"id": 17312,
							"name": "parse",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the parsed copy of the relationship"
									}
								]
							},
							"parameters": [
								{
									"id": 17313,
									"name": "relationshipName",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 17441,
								"name": "RelationshipMetadata",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17460,
								"name": "BaseRelationship.parse"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 17459,
						"name": "BaseRelationship.parse"
					}
				},
				{
					"id": 17305,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Relationship type"
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "belongsTo"
					},
					"defaultValue": "...",
					"overwrites": {
						"type": "reference",
						"target": 17457,
						"name": "BaseRelationship.type"
					}
				},
				{
					"id": 17296,
					"name": "isBelongsTo",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"signatures": [
						{
							"id": 17297,
							"name": "isBelongsTo",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameters": [
								{
									"id": 17298,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 17299,
									"name": "relationship",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "relationship",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"target": 17295,
									"typeArguments": [
										{
											"type": "reference",
											"target": 17298,
											"name": "T",
											"package": "@medusajs/utils",
											"refersToTypeParameter": true
										}
									],
									"name": "BelongsTo",
									"package": "@medusajs/utils"
								}
							}
						}
					]
				},
				{
					"id": 17306,
					"name": "nullable",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 17307,
							"name": "nullable",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Apply nullable modifier on the schema"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 17463,
								"typeArguments": [
									{
										"type": "reference",
										"target": 17302,
										"name": "T",
										"package": "@medusajs/utils",
										"qualifiedName": "BelongsTo.T",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 17295,
										"typeArguments": [
											{
												"type": "reference",
												"target": 17302,
												"name": "T",
												"package": "@medusajs/utils",
												"qualifiedName": "BelongsTo.T",
												"refersToTypeParameter": true
											}
										],
										"name": "BelongsTo",
										"package": "@medusajs/utils"
									}
								],
								"name": "NullableModifier",
								"package": "@medusajs/utils"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						17300
					]
				},
				{
					"title": "Properties",
					"children": [
						17309,
						17310,
						17305
					]
				},
				{
					"title": "Methods",
					"children": [
						17311,
						17296,
						17306
					]
				}
			],
			"typeParameters": [
				{
					"id": 17314,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 17449,
					"typeArguments": [
						{
							"type": "reference",
							"target": 17302,
							"name": "T",
							"package": "@medusajs/utils",
							"qualifiedName": "BelongsTo.T",
							"refersToTypeParameter": true
						}
					],
					"name": "BaseRelationship",
					"package": "@medusajs/utils"
				}
			]
		},
		{
			"id": 17315,
			"name": "HasMany",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "HasMany relationship defines a relationship between two entities\nwhere the owner of the relationship has many instance of the\nrelated entity.\n\nFor example:\n\n- A user HasMany books\n- A user HasMany addresses"
					}
				]
			},
			"children": [
				{
					"id": 17327,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Configuration options for the relationship"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 17272,
						"name": "RelationshipOptions",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 17456,
						"name": "BaseRelationship.options"
					}
				},
				{
					"id": 17328,
					"name": "$dataType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A type-only property to infer the JavScript data-type\nof the relationship property"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 17322,
						"name": "T",
						"package": "@medusajs/utils",
						"qualifiedName": "HasMany.T",
						"refersToTypeParameter": true
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 17458,
						"name": "BaseRelationship.$dataType"
					}
				},
				{
					"id": 17320,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 17321,
							"name": "new HasMany",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"typeParameters": [
								{
									"id": 17322,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 17323,
									"name": "referencedEntity",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 17322,
										"name": "T",
										"package": "@medusajs/utils",
										"qualifiedName": "HasMany.T",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 17324,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 17272,
										"name": "RelationshipOptions",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 17315,
								"typeArguments": [
									{
										"type": "reference",
										"target": 17322,
										"name": "T",
										"package": "@medusajs/utils",
										"qualifiedName": "HasMany.T",
										"refersToTypeParameter": true
									}
								],
								"name": "HasMany",
								"package": "@medusajs/utils"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17451,
								"name": "BaseRelationship.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 17450,
						"name": "BaseRelationship.constructor"
					}
				},
				{
					"id": 17329,
					"name": "parse",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"signatures": [
						{
							"id": 17330,
							"name": "parse",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the parsed copy of the relationship"
									}
								]
							},
							"parameters": [
								{
									"id": 17331,
									"name": "relationshipName",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 17441,
								"name": "RelationshipMetadata",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17460,
								"name": "BaseRelationship.parse"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 17459,
						"name": "BaseRelationship.parse"
					}
				},
				{
					"id": 17325,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Relationship type"
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "hasMany"
					},
					"defaultValue": "...",
					"overwrites": {
						"type": "reference",
						"target": 17457,
						"name": "BaseRelationship.type"
					}
				},
				{
					"id": 17316,
					"name": "isHasMany",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"signatures": [
						{
							"id": 17317,
							"name": "isHasMany",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameters": [
								{
									"id": 17318,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 17319,
									"name": "relationship",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "relationship",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"target": 17315,
									"typeArguments": [
										{
											"type": "reference",
											"target": 17318,
											"name": "T",
											"package": "@medusajs/utils",
											"refersToTypeParameter": true
										}
									],
									"name": "HasMany",
									"package": "@medusajs/utils"
								}
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						17320
					]
				},
				{
					"title": "Properties",
					"children": [
						17327,
						17328,
						17325
					]
				},
				{
					"title": "Methods",
					"children": [
						17329,
						17316
					]
				}
			],
			"typeParameters": [
				{
					"id": 17332,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 17449,
					"typeArguments": [
						{
							"type": "reference",
							"target": 17322,
							"name": "T",
							"package": "@medusajs/utils",
							"qualifiedName": "HasMany.T",
							"refersToTypeParameter": true
						}
					],
					"name": "BaseRelationship",
					"package": "@medusajs/utils"
				}
			]
		},
		{
			"id": 17275,
			"name": "HasOne",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "HasOne relationship defines a relationship between two entities\nwhere the owner of the relationship has exactly one instance\nof the related entity.\n\nFor example: A user HasOne profile\n\nYou may use the \"BelongsTo\" relationship to define the inverse\nof the \"HasOne\" relationship"
					}
				]
			},
			"children": [
				{
					"id": 17289,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Configuration options for the relationship"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 17272,
						"name": "RelationshipOptions",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 17456,
						"name": "BaseRelationship.options"
					}
				},
				{
					"id": 17290,
					"name": "$dataType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A type-only property to infer the JavScript data-type\nof the relationship property"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 17282,
						"name": "T",
						"package": "@medusajs/utils",
						"qualifiedName": "HasOne.T",
						"refersToTypeParameter": true
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 17458,
						"name": "BaseRelationship.$dataType"
					}
				},
				{
					"id": 17280,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 17281,
							"name": "new HasOne",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"typeParameters": [
								{
									"id": 17282,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 17283,
									"name": "referencedEntity",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 17282,
										"name": "T",
										"package": "@medusajs/utils",
										"qualifiedName": "HasOne.T",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 17284,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 17272,
										"name": "RelationshipOptions",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 17275,
								"typeArguments": [
									{
										"type": "reference",
										"target": 17282,
										"name": "T",
										"package": "@medusajs/utils",
										"qualifiedName": "HasOne.T",
										"refersToTypeParameter": true
									}
								],
								"name": "HasOne",
								"package": "@medusajs/utils"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17451,
								"name": "BaseRelationship.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 17450,
						"name": "BaseRelationship.constructor"
					}
				},
				{
					"id": 17291,
					"name": "parse",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"signatures": [
						{
							"id": 17292,
							"name": "parse",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the parsed copy of the relationship"
									}
								]
							},
							"parameters": [
								{
									"id": 17293,
									"name": "relationshipName",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 17441,
								"name": "RelationshipMetadata",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17460,
								"name": "BaseRelationship.parse"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 17459,
						"name": "BaseRelationship.parse"
					}
				},
				{
					"id": 17285,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Relationship type"
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "hasOne"
					},
					"defaultValue": "...",
					"overwrites": {
						"type": "reference",
						"target": 17457,
						"name": "BaseRelationship.type"
					}
				},
				{
					"id": 17276,
					"name": "isHasOne",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"signatures": [
						{
							"id": 17277,
							"name": "isHasOne",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameters": [
								{
									"id": 17278,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 17279,
									"name": "relationship",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "relationship",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"target": 17275,
									"typeArguments": [
										{
											"type": "reference",
											"target": 17278,
											"name": "T",
											"package": "@medusajs/utils",
											"refersToTypeParameter": true
										}
									],
									"name": "HasOne",
									"package": "@medusajs/utils"
								}
							}
						}
					]
				},
				{
					"id": 17286,
					"name": "nullable",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 17287,
							"name": "nullable",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Apply nullable modifier on the schema"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 17463,
								"typeArguments": [
									{
										"type": "reference",
										"target": 17282,
										"name": "T",
										"package": "@medusajs/utils",
										"qualifiedName": "HasOne.T",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 17275,
										"typeArguments": [
											{
												"type": "reference",
												"target": 17282,
												"name": "T",
												"package": "@medusajs/utils",
												"qualifiedName": "HasOne.T",
												"refersToTypeParameter": true
											}
										],
										"name": "HasOne",
										"package": "@medusajs/utils"
									}
								],
								"name": "NullableModifier",
								"package": "@medusajs/utils"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						17280
					]
				},
				{
					"title": "Properties",
					"children": [
						17289,
						17290,
						17285
					]
				},
				{
					"title": "Methods",
					"children": [
						17291,
						17276,
						17286
					]
				}
			],
			"typeParameters": [
				{
					"id": 17294,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 17449,
					"typeArguments": [
						{
							"type": "reference",
							"target": 17282,
							"name": "T",
							"package": "@medusajs/utils",
							"qualifiedName": "HasOne.T",
							"refersToTypeParameter": true
						}
					],
					"name": "BaseRelationship",
					"package": "@medusajs/utils"
				}
			]
		},
		{
			"id": 17333,
			"name": "ManyToMany",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "ManyToMany relationship defines a relationship between two entities\nwhere the owner of the relationship has many instance of the\nrelated entity via a pivot table.\n\nFor example:\n\n- A user has many teams. But a team has many users as well. So this\n  relationship requires a pivot table to establish a many to many\n  relationship between two entities"
					}
				]
			},
			"children": [
				{
					"id": 17345,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Configuration options for the relationship"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 17272,
						"name": "RelationshipOptions",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 17456,
						"name": "BaseRelationship.options"
					}
				},
				{
					"id": 17346,
					"name": "$dataType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A type-only property to infer the JavScript data-type\nof the relationship property"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 17340,
						"name": "T",
						"package": "@medusajs/utils",
						"qualifiedName": "ManyToMany.T",
						"refersToTypeParameter": true
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 17458,
						"name": "BaseRelationship.$dataType"
					}
				},
				{
					"id": 17338,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 17339,
							"name": "new ManyToMany",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"typeParameters": [
								{
									"id": 17340,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 17341,
									"name": "referencedEntity",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 17340,
										"name": "T",
										"package": "@medusajs/utils",
										"qualifiedName": "ManyToMany.T",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 17342,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 17272,
										"name": "RelationshipOptions",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 17333,
								"typeArguments": [
									{
										"type": "reference",
										"target": 17340,
										"name": "T",
										"package": "@medusajs/utils",
										"qualifiedName": "ManyToMany.T",
										"refersToTypeParameter": true
									}
								],
								"name": "ManyToMany",
								"package": "@medusajs/utils"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17451,
								"name": "BaseRelationship.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 17450,
						"name": "BaseRelationship.constructor"
					}
				},
				{
					"id": 17347,
					"name": "parse",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"signatures": [
						{
							"id": 17348,
							"name": "parse",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the parsed copy of the relationship"
									}
								]
							},
							"parameters": [
								{
									"id": 17349,
									"name": "relationshipName",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 17441,
								"name": "RelationshipMetadata",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17460,
								"name": "BaseRelationship.parse"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 17459,
						"name": "BaseRelationship.parse"
					}
				},
				{
					"id": 17343,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Relationship type"
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "manyToMany"
					},
					"defaultValue": "...",
					"overwrites": {
						"type": "reference",
						"target": 17457,
						"name": "BaseRelationship.type"
					}
				},
				{
					"id": 17334,
					"name": "isManyToMany",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"signatures": [
						{
							"id": 17335,
							"name": "isManyToMany",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameters": [
								{
									"id": 17336,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 17337,
									"name": "relationship",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "relationship",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"target": 17333,
									"typeArguments": [
										{
											"type": "reference",
											"target": 17336,
											"name": "T",
											"package": "@medusajs/utils",
											"refersToTypeParameter": true
										}
									],
									"name": "ManyToMany",
									"package": "@medusajs/utils"
								}
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						17338
					]
				},
				{
					"title": "Properties",
					"children": [
						17345,
						17346,
						17343
					]
				},
				{
					"title": "Methods",
					"children": [
						17347,
						17334
					]
				}
			],
			"typeParameters": [
				{
					"id": 17350,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 17449,
					"typeArguments": [
						{
							"type": "reference",
							"target": 17340,
							"name": "T",
							"package": "@medusajs/utils",
							"qualifiedName": "ManyToMany.T",
							"refersToTypeParameter": true
						}
					],
					"name": "BaseRelationship",
					"package": "@medusajs/utils"
				}
			]
		},
		{
			"id": 17463,
			"name": "NullableModifier",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Nullable modifier marks a schema node as nullable"
					}
				]
			},
			"children": [
				{
					"id": 17479,
					"name": "[IsNullableModifier]",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "literal",
						"value": true
					},
					"defaultValue": "true"
				},
				{
					"id": 17464,
					"name": "isNullableModifier",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"signatures": [
						{
							"id": 17465,
							"name": "isNullableModifier",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameters": [
								{
									"id": 17466,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 17467,
									"name": "modifier",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "modifier",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"target": 17463,
									"typeArguments": [
										{
											"type": "reference",
											"target": 17466,
											"name": "T",
											"package": "@medusajs/utils",
											"refersToTypeParameter": true
										},
										{
											"type": "intrinsic",
											"name": "any"
										}
									],
									"name": "NullableModifier",
									"package": "@medusajs/utils"
								}
							}
						}
					]
				},
				{
					"id": 17473,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 17484,
						"name": "RelationshipTypes",
						"package": "@medusajs/types"
					},
					"implementationOf": {
						"type": "reference",
						"target": -1,
						"name": "RelationshipType.type"
					}
				},
				{
					"id": 17474,
					"name": "$dataType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A type-only property to infer the JavScript data-type\nof the schema property"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 17470,
								"name": "T",
								"package": "@medusajs/utils",
								"qualifiedName": "NullableModifier.T",
								"refersToTypeParameter": true
							}
						]
					},
					"implementationOf": {
						"type": "reference",
						"target": -1,
						"name": "RelationshipType.$dataType"
					}
				},
				{
					"id": 17468,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 17469,
							"name": "new NullableModifier",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"typeParameters": [
								{
									"id": 17470,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 17471,
									"name": "Relation",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 17389,
										"typeArguments": [
											{
												"type": "reference",
												"target": 17470,
												"name": "T",
												"package": "@medusajs/utils",
												"qualifiedName": "NullableModifier.T",
												"refersToTypeParameter": true
											}
										],
										"name": "RelationshipType",
										"package": "@medusajs/types"
									}
								}
							],
							"parameters": [
								{
									"id": 17472,
									"name": "relation",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 17471,
										"name": "Relation",
										"package": "@medusajs/utils",
										"qualifiedName": "NullableModifier.Relation",
										"refersToTypeParameter": true
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 17463,
								"typeArguments": [
									{
										"type": "reference",
										"target": 17470,
										"name": "T",
										"package": "@medusajs/utils",
										"qualifiedName": "NullableModifier.T",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 17471,
										"name": "Relation",
										"package": "@medusajs/utils",
										"qualifiedName": "NullableModifier.Relation",
										"refersToTypeParameter": true
									}
								],
								"name": "NullableModifier",
								"package": "@medusajs/utils"
							}
						}
					]
				},
				{
					"id": 17476,
					"name": "parse",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 17477,
							"name": "parse",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the serialized metadata"
									}
								]
							},
							"parameters": [
								{
									"id": 17478,
									"name": "fieldName",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 17441,
								"name": "RelationshipMetadata",
								"package": "@medusajs/types"
							},
							"implementationOf": {
								"type": "reference",
								"target": -1,
								"name": "RelationshipType.parse"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": -1,
						"name": "RelationshipType.parse"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						17468
					]
				},
				{
					"title": "Properties",
					"children": [
						17479,
						17473,
						17474
					]
				},
				{
					"title": "Methods",
					"children": [
						17464,
						17476
					]
				}
			],
			"typeParameters": [
				{
					"id": 17480,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 17481,
					"name": "Relation",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 17389,
						"typeArguments": [
							{
								"type": "reference",
								"target": 17470,
								"name": "T",
								"package": "@medusajs/utils",
								"qualifiedName": "NullableModifier.T",
								"refersToTypeParameter": true
							}
						],
						"name": "RelationshipType",
						"package": "@medusajs/types"
					}
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"target": 17389,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 17470,
									"name": "T",
									"package": "@medusajs/utils",
									"qualifiedName": "NullableModifier.T",
									"refersToTypeParameter": true
								},
								{
									"type": "literal",
									"value": null
								}
							]
						}
					],
					"name": "RelationshipType",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 16727,
			"name": "FulfillmentUtils",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 16736,
					"name": "FulfillmentEvents",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 16737,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 16739,
									"name": "FULFILLMENT_CREATED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "fulfillment.created"
									}
								},
								{
									"id": 16740,
									"name": "FULFILLMENT_SET_CREATED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "fulfillment-set.created"
									}
								},
								{
									"id": 16741,
									"name": "SERVICE_ZONE_CREATED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "service-zone.created"
									}
								},
								{
									"id": 16742,
									"name": "GEO_ZONE_CREATED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "geo-zone.created"
									}
								},
								{
									"id": 16743,
									"name": "SHIPPING_OPTION_CREATED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "shipping-option.created"
									}
								},
								{
									"id": 16744,
									"name": "SHIPPING_OPTION_TYPE_CREATED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "shipping-option-type.created"
									}
								},
								{
									"id": 16745,
									"name": "SHIPPING_PROFILE_CREATED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "shipping-profile.created"
									}
								},
								{
									"id": 16746,
									"name": "SHIPPING_OPTION_RULE_CREATED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "shipping-option-rule.created"
									}
								},
								{
									"id": 16747,
									"name": "FULFILLMENT_ADDRESS_CREATED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "fulfillment-address.created"
									}
								},
								{
									"id": 16748,
									"name": "FULFILLMENT_ITEM_CREATED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "fulfillment-item.created"
									}
								},
								{
									"id": 16749,
									"name": "FULFILLMENT_LABEL_CREATED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "fulfillment-label.created"
									}
								},
								{
									"id": 16750,
									"name": "FULFILLMENT_UPDATED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "fulfillment.updated"
									}
								},
								{
									"id": 16751,
									"name": "FULFILLMENT_SET_UPDATED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "fulfillment-set.updated"
									}
								},
								{
									"id": 16752,
									"name": "SERVICE_ZONE_UPDATED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "service-zone.updated"
									}
								},
								{
									"id": 16753,
									"name": "GEO_ZONE_UPDATED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "geo-zone.updated"
									}
								},
								{
									"id": 16754,
									"name": "SHIPPING_OPTION_UPDATED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "shipping-option.updated"
									}
								},
								{
									"id": 16755,
									"name": "SHIPPING_OPTION_TYPE_UPDATED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "shipping-option-type.updated"
									}
								},
								{
									"id": 16756,
									"name": "SHIPPING_PROFILE_UPDATED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "shipping-profile.updated"
									}
								},
								{
									"id": 16757,
									"name": "SHIPPING_OPTION_RULE_UPDATED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "shipping-option-rule.updated"
									}
								},
								{
									"id": 16758,
									"name": "FULFILLMENT_ADDRESS_UPDATED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "fulfillment-address.updated"
									}
								},
								{
									"id": 16759,
									"name": "FULFILLMENT_ITEM_UPDATED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "fulfillment-item.updated"
									}
								},
								{
									"id": 16760,
									"name": "FULFILLMENT_LABEL_UPDATED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "fulfillment-label.updated"
									}
								},
								{
									"id": 16761,
									"name": "FULFILLMENT_DELETED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "fulfillment.deleted"
									}
								},
								{
									"id": 16762,
									"name": "FULFILLMENT_SET_DELETED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "fulfillment-set.deleted"
									}
								},
								{
									"id": 16763,
									"name": "SERVICE_ZONE_DELETED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "service-zone.deleted"
									}
								},
								{
									"id": 16764,
									"name": "GEO_ZONE_DELETED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "geo-zone.deleted"
									}
								},
								{
									"id": 16765,
									"name": "SHIPPING_OPTION_DELETED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "shipping-option.deleted"
									}
								},
								{
									"id": 16766,
									"name": "SHIPPING_OPTION_TYPE_DELETED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "shipping-option-type.deleted"
									}
								},
								{
									"id": 16767,
									"name": "SHIPPING_PROFILE_DELETED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "shipping-profile.deleted"
									}
								},
								{
									"id": 16768,
									"name": "SHIPPING_OPTION_RULE_DELETED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "shipping-option-rule.deleted"
									}
								},
								{
									"id": 16769,
									"name": "FULFILLMENT_ADDRESS_DELETED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "fulfillment-address.deleted"
									}
								},
								{
									"id": 16770,
									"name": "FULFILLMENT_ITEM_DELETED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "fulfillment-item.deleted"
									}
								},
								{
									"id": 16771,
									"name": "FULFILLMENT_LABEL_DELETED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "fulfillment-label.deleted"
									}
								},
								{
									"id": 16772,
									"name": "FULFILLMENT_RESTORED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "fulfillment.restored"
									}
								},
								{
									"id": 16773,
									"name": "FULFILLMENT_SET_RESTORED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "fulfillment-set.restored"
									}
								},
								{
									"id": 16774,
									"name": "SERVICE_ZONE_RESTORED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "service-zone.restored"
									}
								},
								{
									"id": 16775,
									"name": "GEO_ZONE_RESTORED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "geo-zone.restored"
									}
								},
								{
									"id": 16776,
									"name": "SHIPPING_OPTION_RESTORED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "shipping-option.restored"
									}
								},
								{
									"id": 16777,
									"name": "SHIPPING_OPTION_TYPE_RESTORED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "shipping-option-type.restored"
									}
								},
								{
									"id": 16778,
									"name": "SHIPPING_PROFILE_RESTORED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "shipping-profile.restored"
									}
								},
								{
									"id": 16779,
									"name": "SHIPPING_OPTION_RULE_RESTORED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "shipping-option-rule.restored"
									}
								},
								{
									"id": 16780,
									"name": "FULFILLMENT_ADDRESS_RESTORED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "fulfillment-address.restored"
									}
								},
								{
									"id": 16781,
									"name": "FULFILLMENT_ITEM_RESTORED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "fulfillment-item.restored"
									}
								},
								{
									"id": 16782,
									"name": "FULFILLMENT_LABEL_RESTORED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "fulfillment-label.restored"
									}
								},
								{
									"id": 16783,
									"name": "FULFILLMENT_ATTACHED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "fulfillment.attached"
									}
								},
								{
									"id": 16784,
									"name": "FULFILLMENT_SET_ATTACHED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "fulfillment-set.attached"
									}
								},
								{
									"id": 16785,
									"name": "SERVICE_ZONE_ATTACHED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "service-zone.attached"
									}
								},
								{
									"id": 16786,
									"name": "GEO_ZONE_ATTACHED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "geo-zone.attached"
									}
								},
								{
									"id": 16787,
									"name": "SHIPPING_OPTION_ATTACHED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "shipping-option.attached"
									}
								},
								{
									"id": 16788,
									"name": "SHIPPING_OPTION_TYPE_ATTACHED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "shipping-option-type.attached"
									}
								},
								{
									"id": 16789,
									"name": "SHIPPING_PROFILE_ATTACHED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "shipping-profile.attached"
									}
								},
								{
									"id": 16790,
									"name": "SHIPPING_OPTION_RULE_ATTACHED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "shipping-option-rule.attached"
									}
								},
								{
									"id": 16791,
									"name": "FULFILLMENT_ADDRESS_ATTACHED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "fulfillment-address.attached"
									}
								},
								{
									"id": 16792,
									"name": "FULFILLMENT_ITEM_ATTACHED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "fulfillment-item.attached"
									}
								},
								{
									"id": 16793,
									"name": "FULFILLMENT_LABEL_ATTACHED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "fulfillment-label.attached"
									}
								},
								{
									"id": 16794,
									"name": "FULFILLMENT_DETACHED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "fulfillment.detached"
									}
								},
								{
									"id": 16795,
									"name": "FULFILLMENT_SET_DETACHED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "fulfillment-set.detached"
									}
								},
								{
									"id": 16796,
									"name": "SERVICE_ZONE_DETACHED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "service-zone.detached"
									}
								},
								{
									"id": 16797,
									"name": "GEO_ZONE_DETACHED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "geo-zone.detached"
									}
								},
								{
									"id": 16798,
									"name": "SHIPPING_OPTION_DETACHED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "shipping-option.detached"
									}
								},
								{
									"id": 16799,
									"name": "SHIPPING_OPTION_TYPE_DETACHED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "shipping-option-type.detached"
									}
								},
								{
									"id": 16800,
									"name": "SHIPPING_PROFILE_DETACHED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "shipping-profile.detached"
									}
								},
								{
									"id": 16801,
									"name": "SHIPPING_OPTION_RULE_DETACHED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "shipping-option-rule.detached"
									}
								},
								{
									"id": 16802,
									"name": "FULFILLMENT_ADDRESS_DETACHED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "fulfillment-address.detached"
									}
								},
								{
									"id": 16803,
									"name": "FULFILLMENT_ITEM_DETACHED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "fulfillment-item.detached"
									}
								},
								{
									"id": 16804,
									"name": "FULFILLMENT_LABEL_DETACHED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "fulfillment-label.detached"
									}
								},
								{
									"id": 16738,
									"name": "SHIPMENT_CREATED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"shipment.created\""
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										16739,
										16740,
										16741,
										16742,
										16743,
										16744,
										16745,
										16746,
										16747,
										16748,
										16749,
										16750,
										16751,
										16752,
										16753,
										16754,
										16755,
										16756,
										16757,
										16758,
										16759,
										16760,
										16761,
										16762,
										16763,
										16764,
										16765,
										16766,
										16767,
										16768,
										16769,
										16770,
										16771,
										16772,
										16773,
										16774,
										16775,
										16776,
										16777,
										16778,
										16779,
										16780,
										16781,
										16782,
										16783,
										16784,
										16785,
										16786,
										16787,
										16788,
										16789,
										16790,
										16791,
										16792,
										16793,
										16794,
										16795,
										16796,
										16797,
										16798,
										16799,
										16800,
										16801,
										16802,
										16803,
										16804,
										16738
									]
								}
							]
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 16728,
					"name": "GeoZoneType",
					"variant": "declaration",
					"kind": 8,
					"flags": {},
					"children": [
						{
							"id": 16729,
							"name": "COUNTRY",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "country"
							}
						},
						{
							"id": 16730,
							"name": "PROVINCE",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "province"
							}
						},
						{
							"id": 16731,
							"name": "CITY",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "city"
							}
						},
						{
							"id": 16732,
							"name": "ZIP",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "zip"
							}
						}
					],
					"groups": [
						{
							"title": "Enumeration Members",
							"children": [
								16729,
								16730,
								16731,
								16732
							]
						}
					]
				},
				{
					"id": 16733,
					"name": "ShippingOptionPriceType",
					"variant": "declaration",
					"kind": 8,
					"flags": {},
					"children": [
						{
							"id": 16734,
							"name": "CALCULATED",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "calculated"
							}
						},
						{
							"id": 16735,
							"name": "FLAT",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "flat"
							}
						}
					],
					"groups": [
						{
							"title": "Enumeration Members",
							"children": [
								16734,
								16735
							]
						}
					]
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"children": [
						16728,
						16733
					]
				},
				{
					"title": "Variables",
					"children": [
						16736
					]
				}
			]
		},
		{
			"id": 16618,
			"name": "MedusaModuleType",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "query",
				"queryType": {
					"type": "reference",
					"target": 16618,
					"name": "MedusaModuleType",
					"package": "@medusajs/utils"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 16805,
			"name": "InventoryUtils",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 16806,
					"name": "InventoryEvents",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/utils/src/event-bus/utils.ts",
							"qualifiedName": "ReturnType"
						},
						"typeArguments": [
							{
								"type": "tuple",
								"elements": [
									{
										"type": "literal",
										"value": "inventoryItem"
									},
									{
										"type": "literal",
										"value": "reservationItem"
									},
									{
										"type": "literal",
										"value": "inventoryLevel"
									}
								]
							}
						],
						"name": "ReturnType",
						"package": "@medusajs/utils"
					},
					"defaultValue": "..."
				}
			],
			"groups": [
				{
					"title": "Variables",
					"children": [
						16806
					]
				}
			]
		},
		{
			"id": 16807,
			"name": "LinkUtils",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 16825,
					"name": "composeLinkName",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"signatures": [
						{
							"id": 16826,
							"name": "composeLinkName",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 16827,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 16828,
					"name": "composeTableName",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"signatures": [
						{
							"id": 16829,
							"name": "composeTableName",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 16830,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 16808,
					"name": "LINKS",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 16809,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 16810,
									"name": "ProductVariantInventoryItem",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "..."
								},
								{
									"id": 16811,
									"name": "ProductVariantPriceSet",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "..."
								},
								{
									"id": 16812,
									"name": "ShippingOptionPriceSet",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "..."
								},
								{
									"id": 16813,
									"name": "CartPaymentCollection",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "..."
								},
								{
									"id": 16814,
									"name": "RegionPaymentProvider",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "..."
								},
								{
									"id": 16815,
									"name": "CartPromotion",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "..."
								},
								{
									"id": 16816,
									"name": "SalesChannelLocation",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "..."
								},
								{
									"id": 16817,
									"name": "LocationFulfillmentSet",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "..."
								},
								{
									"id": 16818,
									"name": "OrderPromotion",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "..."
								},
								{
									"id": 16819,
									"name": "OrderCart",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "..."
								},
								{
									"id": 16820,
									"name": "OrderSalesChannel",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "..."
								},
								{
									"id": 16821,
									"name": "PublishableApiKeySalesChannel",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "..."
								},
								{
									"id": 16822,
									"name": "ProductSalesChannel",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "..."
								},
								{
									"id": 16823,
									"name": "OrderPaymentCollection",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "..."
								},
								{
									"id": 16824,
									"name": "OrderFulfillment",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "..."
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										16810,
										16811,
										16812,
										16813,
										16814,
										16815,
										16816,
										16817,
										16818,
										16819,
										16820,
										16821,
										16822,
										16823,
										16824
									]
								}
							]
						}
					},
					"defaultValue": "..."
				}
			],
			"groups": [
				{
					"title": "Variables",
					"children": [
						16808
					]
				},
				{
					"title": "Functions",
					"children": [
						16825,
						16828
					]
				}
			]
		},
		{
			"id": 16831,
			"name": "OrderUtils",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 16832,
					"name": "OrderEvents",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 16833,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 16834,
									"name": "PLACED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"order.placed\""
								},
								{
									"id": 16835,
									"name": "CANCELED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"order.canceled\""
								},
								{
									"id": 16836,
									"name": "COMPLETED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"order.completed\""
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										16834,
										16835,
										16836
									]
								}
							]
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 16837,
					"name": "OrderStatus",
					"variant": "declaration",
					"kind": 8,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The order's status."
							}
						]
					},
					"children": [
						{
							"id": 16838,
							"name": "PENDING",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The order is pending."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "pending"
							}
						},
						{
							"id": 16839,
							"name": "COMPLETED",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The order is completed"
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "completed"
							}
						},
						{
							"id": 16840,
							"name": "DRAFT",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The order is a draft."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "draft"
							}
						},
						{
							"id": 16841,
							"name": "ARCHIVED",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The order is archived."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "archived"
							}
						},
						{
							"id": 16842,
							"name": "CANCELED",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The order is canceled."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "canceled"
							}
						},
						{
							"id": 16843,
							"name": "REQUIRES_ACTION",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The order requires action."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "requires_action"
							}
						}
					],
					"groups": [
						{
							"title": "Enumeration Members",
							"children": [
								16838,
								16839,
								16840,
								16841,
								16842,
								16843
							]
						}
					]
				},
				{
					"id": 16844,
					"name": "ReturnStatus",
					"variant": "declaration",
					"kind": 8,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The return's status."
							}
						]
					},
					"children": [
						{
							"id": 16845,
							"name": "REQUESTED",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The return is requested."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "requested"
							}
						},
						{
							"id": 16846,
							"name": "RECEIVED",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The return is received."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "received"
							}
						},
						{
							"id": 16847,
							"name": "PARTIALLY_RECEIVED",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The return is partially received."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "partially_received"
							}
						},
						{
							"id": 16848,
							"name": "CANCELED",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The return is canceled."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "canceled"
							}
						}
					],
					"groups": [
						{
							"title": "Enumeration Members",
							"children": [
								16845,
								16846,
								16847,
								16848
							]
						}
					]
				},
				{
					"id": 16849,
					"name": "ClaimType",
					"variant": "declaration",
					"kind": 8,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The claim's type."
							}
						]
					},
					"children": [
						{
							"id": 16850,
							"name": "REFUND",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The claim refunds an amount to the customer."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "refund"
							}
						},
						{
							"id": 16851,
							"name": "REPLACE",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The claim replaces the returned item with a new one."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "replace"
							}
						}
					],
					"groups": [
						{
							"title": "Enumeration Members",
							"children": [
								16850,
								16851
							]
						}
					]
				},
				{
					"id": 16852,
					"name": "ClaimReason",
					"variant": "declaration",
					"kind": 8,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The claim's item reason."
							}
						]
					},
					"children": [
						{
							"id": 16853,
							"name": "MISSING_ITEM",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "missing_item"
							}
						},
						{
							"id": 16854,
							"name": "WRONG_ITEM",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "wrong_item"
							}
						},
						{
							"id": 16855,
							"name": "PRODUCTION_FAILURE",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "production_failure"
							}
						},
						{
							"id": 16856,
							"name": "OTHER",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "other"
							}
						}
					],
					"groups": [
						{
							"title": "Enumeration Members",
							"children": [
								16853,
								16854,
								16855,
								16856
							]
						}
					]
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"children": [
						16837,
						16844,
						16849,
						16852
					]
				},
				{
					"title": "Variables",
					"children": [
						16832
					]
				}
			]
		},
		{
			"id": 16924,
			"name": "PaymentEvents",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 16925,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 16926,
							"name": "CAPTURED",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"payment.captured\""
						},
						{
							"id": 16927,
							"name": "REFUNDED",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"payment.refunded\""
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								16926,
								16927
							]
						}
					]
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 16928,
			"name": "PaymentCollectionStatus",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The payment collection's status."
					}
				]
			},
			"children": [
				{
					"id": 16929,
					"name": "NOT_PAID",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment collection isn't paid."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "not_paid"
					}
				},
				{
					"id": 16930,
					"name": "AWAITING",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment collection is awaiting payment."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "awaiting"
					}
				},
				{
					"id": 16931,
					"name": "AUTHORIZED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment collection is authorized."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "authorized"
					}
				},
				{
					"id": 16932,
					"name": "PARTIALLY_AUTHORIZED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Some of the payments in the payment collection are authorized."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "partially_authorized"
					}
				},
				{
					"id": 16933,
					"name": "CANCELED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment collection is canceled."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "canceled"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						16929,
						16930,
						16931,
						16932,
						16933
					]
				}
			]
		},
		{
			"id": 16934,
			"name": "PaymentSessionStatus",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The status of a payment session."
					}
				]
			},
			"children": [
				{
					"id": 16935,
					"name": "AUTHORIZED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment is authorized."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "authorized"
					}
				},
				{
					"id": 16936,
					"name": "CAPTURED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment is captured."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "captured"
					}
				},
				{
					"id": 16937,
					"name": "PENDING",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment is pending."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "pending"
					}
				},
				{
					"id": 16938,
					"name": "REQUIRES_MORE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment requires an action."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "requires_more"
					}
				},
				{
					"id": 16939,
					"name": "ERROR",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An error occurred while processing the payment."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "error"
					}
				},
				{
					"id": 16940,
					"name": "CANCELED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment is canceled."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "canceled"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						16935,
						16936,
						16937,
						16938,
						16939,
						16940
					]
				}
			]
		},
		{
			"id": 16941,
			"name": "PaymentWebhookEvents",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 16942,
					"name": "WebhookReceived",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "payment.webhook_received"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						16942
					]
				}
			]
		},
		{
			"id": 16943,
			"name": "PaymentActions",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Normalized events from payment provider to internal payment module events."
					}
				]
			},
			"children": [
				{
					"id": 16944,
					"name": "AUTHORIZED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Payment session has been authorized and there are available funds for capture."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "authorized"
					}
				},
				{
					"id": 16945,
					"name": "SUCCESSFUL",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Payment was successful and the mount is captured."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "captured"
					}
				},
				{
					"id": 16946,
					"name": "FAILED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Payment failed."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "failed"
					}
				},
				{
					"id": 16947,
					"name": "NOT_SUPPORTED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Received an event that is not processable."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "not_supported"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						16944,
						16945,
						16946,
						16947
					]
				}
			]
		},
		{
			"id": 16961,
			"name": "PricingEvents",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../../../packages/core/utils/src/event-bus/utils.ts",
					"qualifiedName": "ReturnType"
				},
				"typeArguments": [
					{
						"type": "tuple",
						"elements": [
							{
								"type": "literal",
								"value": "priceListRuleValue"
							},
							{
								"type": "literal",
								"value": "priceListRule"
							},
							{
								"type": "literal",
								"value": "priceList"
							},
							{
								"type": "literal",
								"value": "priceRule"
							},
							{
								"type": "literal",
								"value": "priceSetRuleType"
							},
							{
								"type": "literal",
								"value": "priceSet"
							},
							{
								"type": "literal",
								"value": "price"
							},
							{
								"type": "literal",
								"value": "ruleType"
							}
						]
					}
				],
				"name": "ReturnType",
				"package": "@medusajs/utils"
			},
			"defaultValue": "..."
		},
		{
			"id": 16948,
			"name": "PriceListStatus",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 16949,
					"name": "ACTIVE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "active"
					}
				},
				{
					"id": 16950,
					"name": "DRAFT",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "draft"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						16949,
						16950
					]
				}
			]
		},
		{
			"id": 16951,
			"name": "PriceListType",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 16952,
					"name": "SALE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "sale"
					}
				},
				{
					"id": 16953,
					"name": "OVERRIDE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "override"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						16952,
						16953
					]
				}
			]
		},
		{
			"id": 17381,
			"name": "RuleAttributeInput",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "intrinsic",
						"name": "undefined"
					}
				]
			}
		},
		{
			"id": 16954,
			"name": "ReservedPricingRuleAttributes",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 16955,
			"name": "getInvalidRuleAttributes",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 16956,
					"name": "getInvalidRuleAttributes",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 16957,
							"name": "ruleAttributes",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 17381,
									"name": "RuleAttributeInput",
									"package": "@medusajs/utils"
								}
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			]
		},
		{
			"id": 16958,
			"name": "validateRuleAttributes",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 16959,
					"name": "validateRuleAttributes",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 16960,
							"name": "ruleAttributes",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 17381,
									"name": "RuleAttributeInput",
									"package": "@medusajs/utils"
								}
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "void"
					}
				}
			]
		},
		{
			"id": 16857,
			"name": "ProductUtils",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 16863,
					"name": "ProductEvents",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/utils/src/event-bus/utils.ts",
							"qualifiedName": "ReturnType"
						},
						"typeArguments": [
							{
								"type": "tuple",
								"elements": [
									{
										"type": "literal",
										"value": "product"
									},
									{
										"type": "literal",
										"value": "productVariant"
									},
									{
										"type": "literal",
										"value": "productOption"
									},
									{
										"type": "literal",
										"value": "productType"
									},
									{
										"type": "literal",
										"value": "productTag"
									},
									{
										"type": "literal",
										"value": "productCategory"
									}
								]
							}
						],
						"name": "ReturnType",
						"package": "@medusajs/utils"
					},
					"defaultValue": "..."
				},
				{
					"id": 16858,
					"name": "ProductStatus",
					"variant": "declaration",
					"kind": 8,
					"flags": {},
					"children": [
						{
							"id": 16859,
							"name": "DRAFT",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "draft"
							}
						},
						{
							"id": 16860,
							"name": "PROPOSED",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "proposed"
							}
						},
						{
							"id": 16861,
							"name": "PUBLISHED",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "published"
							}
						},
						{
							"id": 16862,
							"name": "REJECTED",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "rejected"
							}
						}
					],
					"groups": [
						{
							"title": "Enumeration Members",
							"children": [
								16859,
								16860,
								16861,
								16862
							]
						}
					]
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"children": [
						16858
					]
				},
				{
					"title": "Variables",
					"children": [
						16863
					]
				}
			]
		},
		{
			"id": 16864,
			"name": "PromotionUtils",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 16865,
					"name": "PromotionType",
					"variant": "declaration",
					"kind": 8,
					"flags": {},
					"children": [
						{
							"id": 16866,
							"name": "STANDARD",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "standard"
							}
						},
						{
							"id": 16867,
							"name": "BUYGET",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "buyget"
							}
						}
					],
					"groups": [
						{
							"title": "Enumeration Members",
							"children": [
								16866,
								16867
							]
						}
					]
				},
				{
					"id": 16868,
					"name": "ApplicationMethodType",
					"variant": "declaration",
					"kind": 8,
					"flags": {},
					"children": [
						{
							"id": 16869,
							"name": "FIXED",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "fixed"
							}
						},
						{
							"id": 16870,
							"name": "PERCENTAGE",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "percentage"
							}
						}
					],
					"groups": [
						{
							"title": "Enumeration Members",
							"children": [
								16869,
								16870
							]
						}
					]
				},
				{
					"id": 16871,
					"name": "ApplicationMethodTargetType",
					"variant": "declaration",
					"kind": 8,
					"flags": {},
					"children": [
						{
							"id": 16872,
							"name": "ORDER",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "order"
							}
						},
						{
							"id": 16873,
							"name": "SHIPPING_METHODS",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "shipping_methods"
							}
						},
						{
							"id": 16874,
							"name": "ITEMS",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "items"
							}
						}
					],
					"groups": [
						{
							"title": "Enumeration Members",
							"children": [
								16872,
								16873,
								16874
							]
						}
					]
				},
				{
					"id": 16875,
					"name": "ApplicationMethodAllocation",
					"variant": "declaration",
					"kind": 8,
					"flags": {},
					"children": [
						{
							"id": 16876,
							"name": "EACH",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "each"
							}
						},
						{
							"id": 16877,
							"name": "ACROSS",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "across"
							}
						}
					],
					"groups": [
						{
							"title": "Enumeration Members",
							"children": [
								16876,
								16877
							]
						}
					]
				},
				{
					"id": 16878,
					"name": "PromotionRuleOperator",
					"variant": "declaration",
					"kind": 8,
					"flags": {},
					"children": [
						{
							"id": 16879,
							"name": "GTE",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "gte"
							}
						},
						{
							"id": 16880,
							"name": "LTE",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "lte"
							}
						},
						{
							"id": 16881,
							"name": "GT",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "gt"
							}
						},
						{
							"id": 16882,
							"name": "LT",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "lt"
							}
						},
						{
							"id": 16883,
							"name": "EQ",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "eq"
							}
						},
						{
							"id": 16884,
							"name": "NE",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "ne"
							}
						},
						{
							"id": 16885,
							"name": "IN",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "in"
							}
						}
					],
					"groups": [
						{
							"title": "Enumeration Members",
							"children": [
								16879,
								16880,
								16881,
								16882,
								16883,
								16884,
								16885
							]
						}
					]
				},
				{
					"id": 16886,
					"name": "CampaignBudgetType",
					"variant": "declaration",
					"kind": 8,
					"flags": {},
					"children": [
						{
							"id": 16887,
							"name": "SPEND",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "spend"
							}
						},
						{
							"id": 16888,
							"name": "USAGE",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "usage"
							}
						}
					],
					"groups": [
						{
							"title": "Enumeration Members",
							"children": [
								16887,
								16888
							]
						}
					]
				},
				{
					"id": 16889,
					"name": "ComputedActions",
					"variant": "declaration",
					"kind": 8,
					"flags": {},
					"children": [
						{
							"id": 16890,
							"name": "ADD_ITEM_ADJUSTMENT",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "addItemAdjustment"
							}
						},
						{
							"id": 16891,
							"name": "ADD_SHIPPING_METHOD_ADJUSTMENT",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "addShippingMethodAdjustment"
							}
						},
						{
							"id": 16892,
							"name": "REMOVE_ITEM_ADJUSTMENT",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "removeItemAdjustment"
							}
						},
						{
							"id": 16893,
							"name": "REMOVE_SHIPPING_METHOD_ADJUSTMENT",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "removeShippingMethodAdjustment"
							}
						},
						{
							"id": 16894,
							"name": "CAMPAIGN_BUDGET_EXCEEDED",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "campaignBudgetExceeded"
							}
						}
					],
					"groups": [
						{
							"title": "Enumeration Members",
							"children": [
								16890,
								16891,
								16892,
								16893,
								16894
							]
						}
					]
				},
				{
					"id": 16895,
					"name": "PromotionActions",
					"variant": "declaration",
					"kind": 8,
					"flags": {},
					"children": [
						{
							"id": 16896,
							"name": "ADD",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "add"
							}
						},
						{
							"id": 16897,
							"name": "REMOVE",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "remove"
							}
						},
						{
							"id": 16898,
							"name": "REPLACE",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "replace"
							}
						}
					],
					"groups": [
						{
							"title": "Enumeration Members",
							"children": [
								16896,
								16897,
								16898
							]
						}
					]
				},
				{
					"id": 16899,
					"name": "RuleType",
					"variant": "declaration",
					"kind": 8,
					"flags": {},
					"children": [
						{
							"id": 16900,
							"name": "RULES",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "rules"
							}
						},
						{
							"id": 16901,
							"name": "TARGET_RULES",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "target_rules"
							}
						},
						{
							"id": 16902,
							"name": "BUY_RULES",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "buy_rules"
							}
						}
					],
					"groups": [
						{
							"title": "Enumeration Members",
							"children": [
								16900,
								16901,
								16902
							]
						}
					]
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"children": [
						16865,
						16868,
						16871,
						16875,
						16878,
						16886,
						16889,
						16895,
						16899
					]
				}
			]
		},
		{
			"id": 16903,
			"name": "ShippingProfileUtils",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 16904,
					"name": "ShippingProfileType",
					"variant": "declaration",
					"kind": 8,
					"flags": {},
					"children": [
						{
							"id": 16905,
							"name": "DEFAULT",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "default"
							}
						},
						{
							"id": 16906,
							"name": "GIFT_CARD",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "gift_card"
							}
						},
						{
							"id": 16907,
							"name": "CUSTOM",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "custom"
							}
						}
					],
					"groups": [
						{
							"title": "Enumeration Members",
							"children": [
								16905,
								16906,
								16907
							]
						}
					]
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"children": [
						16904
					]
				}
			]
		},
		{
			"id": 16908,
			"name": "UserUtils",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 16909,
					"name": "UserEvents",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 16910,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 16912,
									"name": "USER_CREATED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "user.created"
									}
								},
								{
									"id": 16913,
									"name": "INVITE_CREATED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "invite.created"
									}
								},
								{
									"id": 16914,
									"name": "USER_UPDATED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "user.updated"
									}
								},
								{
									"id": 16915,
									"name": "INVITE_UPDATED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "invite.updated"
									}
								},
								{
									"id": 16916,
									"name": "USER_DELETED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "user.deleted"
									}
								},
								{
									"id": 16917,
									"name": "INVITE_DELETED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "invite.deleted"
									}
								},
								{
									"id": 16918,
									"name": "USER_RESTORED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "user.restored"
									}
								},
								{
									"id": 16919,
									"name": "INVITE_RESTORED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "invite.restored"
									}
								},
								{
									"id": 16920,
									"name": "USER_ATTACHED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "user.attached"
									}
								},
								{
									"id": 16921,
									"name": "INVITE_ATTACHED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "invite.attached"
									}
								},
								{
									"id": 16922,
									"name": "USER_DETACHED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "user.detached"
									}
								},
								{
									"id": 16923,
									"name": "INVITE_DETACHED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "invite.detached"
									}
								},
								{
									"id": 16911,
									"name": "INVITE_TOKEN_GENERATED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "..."
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										16912,
										16913,
										16914,
										16915,
										16916,
										16917,
										16918,
										16919,
										16920,
										16921,
										16922,
										16923,
										16911
									]
								}
							]
						}
					},
					"defaultValue": "..."
				}
			],
			"groups": [
				{
					"title": "Variables",
					"children": [
						16909
					]
				}
			]
		}
	],
	"groups": [
		{
			"title": "Namespaces",
			"children": [
				16626,
				16727,
				16805,
				16807,
				16831,
				16857,
				16864,
				16903,
				16908
			]
		},
		{
			"title": "Enumerations",
			"children": [
				16928,
				16934,
				16941,
				16943,
				16948,
				16951
			]
		},
		{
			"title": "Classes",
			"children": [
				17185,
				17411,
				16984,
				17123,
				17212,
				17239,
				17046,
				17014,
				16967,
				17150,
				17084,
				17449,
				17295,
				17315,
				17275,
				17333,
				17463
			]
		},
		{
			"title": "Interfaces",
			"children": [
				17351,
				17485
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				16962,
				17491,
				17484,
				17397,
				17382,
				17272,
				17441,
				17389,
				17489,
				17375,
				17370,
				17359,
				17482,
				17363,
				16963,
				17355,
				17041,
				17381
			]
		},
		{
			"title": "Variables",
			"children": [
				16618,
				16924,
				16961,
				16954
			]
		},
		{
			"title": "Functions",
			"children": [
				16619,
				16955,
				16958
			]
		}
	],
	"packageName": "@medusajs/utils",
	"symbolIdMap": {
		"16617": {
			"sourceFileName": "../../../../packages/core/utils/src/index.ts",
			"qualifiedName": ""
		},
		"16618": {
			"sourceFileName": "../../../../packages/core/utils/src/index.ts",
			"qualifiedName": "MedusaModuleType"
		},
		"16619": {
			"sourceFileName": "../../../../packages/core/utils/src/auth/token.ts",
			"qualifiedName": "generateJwtToken"
		},
		"16620": {
			"sourceFileName": "../../../../packages/core/utils/src/auth/token.ts",
			"qualifiedName": "generateJwtToken"
		},
		"16621": {
			"sourceFileName": "../../../../packages/core/utils/src/auth/token.ts",
			"qualifiedName": "tokenPayload"
		},
		"16622": {
			"sourceFileName": "../../../../packages/core/utils/src/auth/token.ts",
			"qualifiedName": "jwtConfig"
		},
		"16623": {
			"sourceFileName": "../../../../packages/core/utils/src/auth/token.ts",
			"qualifiedName": "__type"
		},
		"16624": {
			"sourceFileName": "../../../../packages/core/utils/src/auth/token.ts",
			"qualifiedName": "__type.secret"
		},
		"16625": {
			"sourceFileName": "../../../../packages/core/utils/src/auth/token.ts",
			"qualifiedName": "__type.expiresIn"
		},
		"16626": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/index.ts",
			"qualifiedName": ""
		},
		"16627": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder"
		},
		"16633": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.define"
		},
		"16634": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.define"
		},
		"16635": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "Schema"
		},
		"16636": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "nameOrConfig"
		},
		"16637": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "schema"
		},
		"16638": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.id"
		},
		"16639": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.id"
		},
		"16640": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "options"
		},
		"16641": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/id.ts",
			"qualifiedName": "__type"
		},
		"16642": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/id.ts",
			"qualifiedName": "__type.primaryKey"
		},
		"16643": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/id.ts",
			"qualifiedName": "__type.prefix"
		},
		"16644": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.text"
		},
		"16645": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.text"
		},
		"16646": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.boolean"
		},
		"16647": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.boolean"
		},
		"16648": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.number"
		},
		"16649": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.number"
		},
		"16650": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.bigNumber"
		},
		"16651": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.bigNumber"
		},
		"16652": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.array"
		},
		"16653": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.array"
		},
		"16654": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.dateTime"
		},
		"16655": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.dateTime"
		},
		"16656": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.json"
		},
		"16657": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.json"
		},
		"16658": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.enum"
		},
		"16659": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.enum"
		},
		"16660": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "Values"
		},
		"16661": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "values"
		},
		"16662": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.hasOne"
		},
		"16663": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.hasOne"
		},
		"16664": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "T"
		},
		"16665": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "entityBuilder"
		},
		"16666": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "options"
		},
		"16667": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.belongsTo"
		},
		"16668": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.belongsTo"
		},
		"16669": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "T"
		},
		"16670": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "entityBuilder"
		},
		"16671": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "options"
		},
		"16672": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.hasMany"
		},
		"16673": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.hasMany"
		},
		"16674": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "T"
		},
		"16675": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "entityBuilder"
		},
		"16676": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "options"
		},
		"16677": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.manyToMany"
		},
		"16678": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.manyToMany"
		},
		"16679": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "T"
		},
		"16680": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "entityBuilder"
		},
		"16681": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "options"
		},
		"16682": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "model"
		},
		"16683": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "DmlEntity"
		},
		"16684": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "DmlEntity.isDmlEntity"
		},
		"16685": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "DmlEntity.isDmlEntity"
		},
		"16686": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "entity"
		},
		"16687": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "DmlEntity.__constructor"
		},
		"16688": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "DmlEntity"
		},
		"16689": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "DmlEntity.Schema"
		},
		"16690": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "nameOrConfig"
		},
		"16691": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "schema"
		},
		"16692": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "DmlEntity.name"
		},
		"16696": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "DmlEntity.schema"
		},
		"16697": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "DmlEntity.parse"
		},
		"16698": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "DmlEntity.parse"
		},
		"16699": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "__type"
		},
		"16700": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "__type.name"
		},
		"16701": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "__type.tableName"
		},
		"16702": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "__type.schema"
		},
		"16703": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "__type.cascades"
		},
		"16704": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "__type.indexes"
		},
		"16705": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "DmlEntity.cascades"
		},
		"16706": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "DmlEntity.cascades"
		},
		"16707": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "options"
		},
		"16708": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "DmlEntity.indexes"
		},
		"16709": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "DmlEntity.indexes"
		},
		"16710": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "indexes"
		},
		"16711": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "DmlEntity.[IsDmlEntity]"
		},
		"16712": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "DmlEntity.Schema"
		},
		"16713": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/helpers/create-mikro-orm-entity.ts",
			"qualifiedName": "createMikrORMEntity"
		},
		"16714": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/helpers/create-mikro-orm-entity.ts",
			"qualifiedName": "createMikrORMEntity"
		},
		"16715": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/helpers/create-mikro-orm-entity.ts",
			"qualifiedName": "createEntity"
		},
		"16716": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/helpers/create-mikro-orm-entity.ts",
			"qualifiedName": "createEntity"
		},
		"16717": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/helpers/create-mikro-orm-entity.ts",
			"qualifiedName": "T"
		},
		"16718": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/helpers/create-mikro-orm-entity.ts",
			"qualifiedName": "entity"
		},
		"16719": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/helpers/create-mikro-orm-entity.ts",
			"qualifiedName": "toMikroORMEntity"
		},
		"16720": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/helpers/create-mikro-orm-entity.ts",
			"qualifiedName": "toMikroORMEntity"
		},
		"16721": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/helpers/create-mikro-orm-entity.ts",
			"qualifiedName": "T"
		},
		"16722": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/helpers/create-mikro-orm-entity.ts",
			"qualifiedName": "entity"
		},
		"16723": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/helpers/create-mikro-orm-entity.ts",
			"qualifiedName": "toMikroOrmEntities"
		},
		"16724": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/helpers/create-mikro-orm-entity.ts",
			"qualifiedName": "toMikroOrmEntities"
		},
		"16725": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/helpers/create-mikro-orm-entity.ts",
			"qualifiedName": "T"
		},
		"16726": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/helpers/create-mikro-orm-entity.ts",
			"qualifiedName": "entities"
		},
		"16727": {
			"sourceFileName": "../../../../packages/core/utils/src/fulfillment/index.ts",
			"qualifiedName": ""
		},
		"16728": {
			"sourceFileName": "../../../../packages/core/utils/src/fulfillment/geo-zone.ts",
			"qualifiedName": "GeoZoneType"
		},
		"16729": {
			"sourceFileName": "../../../../packages/core/utils/src/fulfillment/geo-zone.ts",
			"qualifiedName": "GeoZoneType.COUNTRY"
		},
		"16730": {
			"sourceFileName": "../../../../packages/core/utils/src/fulfillment/geo-zone.ts",
			"qualifiedName": "GeoZoneType.PROVINCE"
		},
		"16731": {
			"sourceFileName": "../../../../packages/core/utils/src/fulfillment/geo-zone.ts",
			"qualifiedName": "GeoZoneType.CITY"
		},
		"16732": {
			"sourceFileName": "../../../../packages/core/utils/src/fulfillment/geo-zone.ts",
			"qualifiedName": "GeoZoneType.ZIP"
		},
		"16733": {
			"sourceFileName": "../../../../packages/core/utils/src/fulfillment/shipping-options.ts",
			"qualifiedName": "ShippingOptionPriceType"
		},
		"16734": {
			"sourceFileName": "../../../../packages/core/utils/src/fulfillment/shipping-options.ts",
			"qualifiedName": "ShippingOptionPriceType.CALCULATED"
		},
		"16735": {
			"sourceFileName": "../../../../packages/core/utils/src/fulfillment/shipping-options.ts",
			"qualifiedName": "ShippingOptionPriceType.FLAT"
		},
		"16736": {
			"sourceFileName": "../../../../packages/core/utils/src/fulfillment/events.ts",
			"qualifiedName": "FulfillmentEvents"
		},
		"16737": {
			"sourceFileName": "../../../../packages/core/utils/src/fulfillment/events.ts",
			"qualifiedName": "__object"
		},
		"16738": {
			"sourceFileName": "../../../../packages/core/utils/src/fulfillment/events.ts",
			"qualifiedName": "__object.SHIPMENT_CREATED"
		},
		"16739": {
			"sourceFileName": "",
			"qualifiedName": "FULFILLMENT_CREATED"
		},
		"16740": {
			"sourceFileName": "",
			"qualifiedName": "FULFILLMENT_SET_CREATED"
		},
		"16741": {
			"sourceFileName": "",
			"qualifiedName": "SERVICE_ZONE_CREATED"
		},
		"16742": {
			"sourceFileName": "",
			"qualifiedName": "GEO_ZONE_CREATED"
		},
		"16743": {
			"sourceFileName": "",
			"qualifiedName": "SHIPPING_OPTION_CREATED"
		},
		"16744": {
			"sourceFileName": "",
			"qualifiedName": "SHIPPING_OPTION_TYPE_CREATED"
		},
		"16745": {
			"sourceFileName": "",
			"qualifiedName": "SHIPPING_PROFILE_CREATED"
		},
		"16746": {
			"sourceFileName": "",
			"qualifiedName": "SHIPPING_OPTION_RULE_CREATED"
		},
		"16747": {
			"sourceFileName": "",
			"qualifiedName": "FULFILLMENT_ADDRESS_CREATED"
		},
		"16748": {
			"sourceFileName": "",
			"qualifiedName": "FULFILLMENT_ITEM_CREATED"
		},
		"16749": {
			"sourceFileName": "",
			"qualifiedName": "FULFILLMENT_LABEL_CREATED"
		},
		"16750": {
			"sourceFileName": "",
			"qualifiedName": "FULFILLMENT_UPDATED"
		},
		"16751": {
			"sourceFileName": "",
			"qualifiedName": "FULFILLMENT_SET_UPDATED"
		},
		"16752": {
			"sourceFileName": "",
			"qualifiedName": "SERVICE_ZONE_UPDATED"
		},
		"16753": {
			"sourceFileName": "",
			"qualifiedName": "GEO_ZONE_UPDATED"
		},
		"16754": {
			"sourceFileName": "",
			"qualifiedName": "SHIPPING_OPTION_UPDATED"
		},
		"16755": {
			"sourceFileName": "",
			"qualifiedName": "SHIPPING_OPTION_TYPE_UPDATED"
		},
		"16756": {
			"sourceFileName": "",
			"qualifiedName": "SHIPPING_PROFILE_UPDATED"
		},
		"16757": {
			"sourceFileName": "",
			"qualifiedName": "SHIPPING_OPTION_RULE_UPDATED"
		},
		"16758": {
			"sourceFileName": "",
			"qualifiedName": "FULFILLMENT_ADDRESS_UPDATED"
		},
		"16759": {
			"sourceFileName": "",
			"qualifiedName": "FULFILLMENT_ITEM_UPDATED"
		},
		"16760": {
			"sourceFileName": "",
			"qualifiedName": "FULFILLMENT_LABEL_UPDATED"
		},
		"16761": {
			"sourceFileName": "",
			"qualifiedName": "FULFILLMENT_DELETED"
		},
		"16762": {
			"sourceFileName": "",
			"qualifiedName": "FULFILLMENT_SET_DELETED"
		},
		"16763": {
			"sourceFileName": "",
			"qualifiedName": "SERVICE_ZONE_DELETED"
		},
		"16764": {
			"sourceFileName": "",
			"qualifiedName": "GEO_ZONE_DELETED"
		},
		"16765": {
			"sourceFileName": "",
			"qualifiedName": "SHIPPING_OPTION_DELETED"
		},
		"16766": {
			"sourceFileName": "",
			"qualifiedName": "SHIPPING_OPTION_TYPE_DELETED"
		},
		"16767": {
			"sourceFileName": "",
			"qualifiedName": "SHIPPING_PROFILE_DELETED"
		},
		"16768": {
			"sourceFileName": "",
			"qualifiedName": "SHIPPING_OPTION_RULE_DELETED"
		},
		"16769": {
			"sourceFileName": "",
			"qualifiedName": "FULFILLMENT_ADDRESS_DELETED"
		},
		"16770": {
			"sourceFileName": "",
			"qualifiedName": "FULFILLMENT_ITEM_DELETED"
		},
		"16771": {
			"sourceFileName": "",
			"qualifiedName": "FULFILLMENT_LABEL_DELETED"
		},
		"16772": {
			"sourceFileName": "",
			"qualifiedName": "FULFILLMENT_RESTORED"
		},
		"16773": {
			"sourceFileName": "",
			"qualifiedName": "FULFILLMENT_SET_RESTORED"
		},
		"16774": {
			"sourceFileName": "",
			"qualifiedName": "SERVICE_ZONE_RESTORED"
		},
		"16775": {
			"sourceFileName": "",
			"qualifiedName": "GEO_ZONE_RESTORED"
		},
		"16776": {
			"sourceFileName": "",
			"qualifiedName": "SHIPPING_OPTION_RESTORED"
		},
		"16777": {
			"sourceFileName": "",
			"qualifiedName": "SHIPPING_OPTION_TYPE_RESTORED"
		},
		"16778": {
			"sourceFileName": "",
			"qualifiedName": "SHIPPING_PROFILE_RESTORED"
		},
		"16779": {
			"sourceFileName": "",
			"qualifiedName": "SHIPPING_OPTION_RULE_RESTORED"
		},
		"16780": {
			"sourceFileName": "",
			"qualifiedName": "FULFILLMENT_ADDRESS_RESTORED"
		},
		"16781": {
			"sourceFileName": "",
			"qualifiedName": "FULFILLMENT_ITEM_RESTORED"
		},
		"16782": {
			"sourceFileName": "",
			"qualifiedName": "FULFILLMENT_LABEL_RESTORED"
		},
		"16783": {
			"sourceFileName": "",
			"qualifiedName": "FULFILLMENT_ATTACHED"
		},
		"16784": {
			"sourceFileName": "",
			"qualifiedName": "FULFILLMENT_SET_ATTACHED"
		},
		"16785": {
			"sourceFileName": "",
			"qualifiedName": "SERVICE_ZONE_ATTACHED"
		},
		"16786": {
			"sourceFileName": "",
			"qualifiedName": "GEO_ZONE_ATTACHED"
		},
		"16787": {
			"sourceFileName": "",
			"qualifiedName": "SHIPPING_OPTION_ATTACHED"
		},
		"16788": {
			"sourceFileName": "",
			"qualifiedName": "SHIPPING_OPTION_TYPE_ATTACHED"
		},
		"16789": {
			"sourceFileName": "",
			"qualifiedName": "SHIPPING_PROFILE_ATTACHED"
		},
		"16790": {
			"sourceFileName": "",
			"qualifiedName": "SHIPPING_OPTION_RULE_ATTACHED"
		},
		"16791": {
			"sourceFileName": "",
			"qualifiedName": "FULFILLMENT_ADDRESS_ATTACHED"
		},
		"16792": {
			"sourceFileName": "",
			"qualifiedName": "FULFILLMENT_ITEM_ATTACHED"
		},
		"16793": {
			"sourceFileName": "",
			"qualifiedName": "FULFILLMENT_LABEL_ATTACHED"
		},
		"16794": {
			"sourceFileName": "",
			"qualifiedName": "FULFILLMENT_DETACHED"
		},
		"16795": {
			"sourceFileName": "",
			"qualifiedName": "FULFILLMENT_SET_DETACHED"
		},
		"16796": {
			"sourceFileName": "",
			"qualifiedName": "SERVICE_ZONE_DETACHED"
		},
		"16797": {
			"sourceFileName": "",
			"qualifiedName": "GEO_ZONE_DETACHED"
		},
		"16798": {
			"sourceFileName": "",
			"qualifiedName": "SHIPPING_OPTION_DETACHED"
		},
		"16799": {
			"sourceFileName": "",
			"qualifiedName": "SHIPPING_OPTION_TYPE_DETACHED"
		},
		"16800": {
			"sourceFileName": "",
			"qualifiedName": "SHIPPING_PROFILE_DETACHED"
		},
		"16801": {
			"sourceFileName": "",
			"qualifiedName": "SHIPPING_OPTION_RULE_DETACHED"
		},
		"16802": {
			"sourceFileName": "",
			"qualifiedName": "FULFILLMENT_ADDRESS_DETACHED"
		},
		"16803": {
			"sourceFileName": "",
			"qualifiedName": "FULFILLMENT_ITEM_DETACHED"
		},
		"16804": {
			"sourceFileName": "",
			"qualifiedName": "FULFILLMENT_LABEL_DETACHED"
		},
		"16805": {
			"sourceFileName": "../../../../packages/core/utils/src/inventory/index.ts",
			"qualifiedName": ""
		},
		"16806": {
			"sourceFileName": "../../../../packages/core/utils/src/inventory/events.ts",
			"qualifiedName": "InventoryEvents"
		},
		"16807": {
			"sourceFileName": "../../../../packages/core/utils/src/link/index.ts",
			"qualifiedName": ""
		},
		"16808": {
			"sourceFileName": "../../../../packages/core/utils/src/link/links.ts",
			"qualifiedName": "LINKS"
		},
		"16809": {
			"sourceFileName": "../../../../packages/core/utils/src/link/links.ts",
			"qualifiedName": "__object"
		},
		"16810": {
			"sourceFileName": "../../../../packages/core/utils/src/link/links.ts",
			"qualifiedName": "__object.ProductVariantInventoryItem"
		},
		"16811": {
			"sourceFileName": "../../../../packages/core/utils/src/link/links.ts",
			"qualifiedName": "__object.ProductVariantPriceSet"
		},
		"16812": {
			"sourceFileName": "../../../../packages/core/utils/src/link/links.ts",
			"qualifiedName": "__object.ShippingOptionPriceSet"
		},
		"16813": {
			"sourceFileName": "../../../../packages/core/utils/src/link/links.ts",
			"qualifiedName": "__object.CartPaymentCollection"
		},
		"16814": {
			"sourceFileName": "../../../../packages/core/utils/src/link/links.ts",
			"qualifiedName": "__object.RegionPaymentProvider"
		},
		"16815": {
			"sourceFileName": "../../../../packages/core/utils/src/link/links.ts",
			"qualifiedName": "__object.CartPromotion"
		},
		"16816": {
			"sourceFileName": "../../../../packages/core/utils/src/link/links.ts",
			"qualifiedName": "__object.SalesChannelLocation"
		},
		"16817": {
			"sourceFileName": "../../../../packages/core/utils/src/link/links.ts",
			"qualifiedName": "__object.LocationFulfillmentSet"
		},
		"16818": {
			"sourceFileName": "../../../../packages/core/utils/src/link/links.ts",
			"qualifiedName": "__object.OrderPromotion"
		},
		"16819": {
			"sourceFileName": "../../../../packages/core/utils/src/link/links.ts",
			"qualifiedName": "__object.OrderCart"
		},
		"16820": {
			"sourceFileName": "../../../../packages/core/utils/src/link/links.ts",
			"qualifiedName": "__object.OrderSalesChannel"
		},
		"16821": {
			"sourceFileName": "../../../../packages/core/utils/src/link/links.ts",
			"qualifiedName": "__object.PublishableApiKeySalesChannel"
		},
		"16822": {
			"sourceFileName": "../../../../packages/core/utils/src/link/links.ts",
			"qualifiedName": "__object.ProductSalesChannel"
		},
		"16823": {
			"sourceFileName": "../../../../packages/core/utils/src/link/links.ts",
			"qualifiedName": "__object.OrderPaymentCollection"
		},
		"16824": {
			"sourceFileName": "../../../../packages/core/utils/src/link/links.ts",
			"qualifiedName": "__object.OrderFulfillment"
		},
		"16825": {
			"sourceFileName": "../../../../packages/core/utils/src/link/compose-link-name.ts",
			"qualifiedName": "composeLinkName"
		},
		"16826": {
			"sourceFileName": "../../../../packages/core/utils/src/link/compose-link-name.ts",
			"qualifiedName": "composeLinkName"
		},
		"16827": {
			"sourceFileName": "../../../../packages/core/utils/src/link/compose-link-name.ts",
			"qualifiedName": "args"
		},
		"16828": {
			"sourceFileName": "../../../../packages/core/utils/src/link/compose-link-name.ts",
			"qualifiedName": "composeTableName"
		},
		"16829": {
			"sourceFileName": "../../../../packages/core/utils/src/link/compose-link-name.ts",
			"qualifiedName": "composeTableName"
		},
		"16830": {
			"sourceFileName": "../../../../packages/core/utils/src/link/compose-link-name.ts",
			"qualifiedName": "args"
		},
		"16831": {
			"sourceFileName": "../../../../packages/core/utils/src/order/index.ts",
			"qualifiedName": ""
		},
		"16832": {
			"sourceFileName": "../../../../packages/core/utils/src/order/events.ts",
			"qualifiedName": "OrderEvents"
		},
		"16833": {
			"sourceFileName": "../../../../packages/core/utils/src/order/events.ts",
			"qualifiedName": "__object"
		},
		"16834": {
			"sourceFileName": "../../../../packages/core/utils/src/order/events.ts",
			"qualifiedName": "__object.PLACED"
		},
		"16835": {
			"sourceFileName": "../../../../packages/core/utils/src/order/events.ts",
			"qualifiedName": "__object.CANCELED"
		},
		"16836": {
			"sourceFileName": "../../../../packages/core/utils/src/order/events.ts",
			"qualifiedName": "__object.COMPLETED"
		},
		"16837": {
			"sourceFileName": "../../../../packages/core/utils/src/order/status.ts",
			"qualifiedName": "OrderStatus"
		},
		"16838": {
			"sourceFileName": "../../../../packages/core/utils/src/order/status.ts",
			"qualifiedName": "OrderStatus.PENDING"
		},
		"16839": {
			"sourceFileName": "../../../../packages/core/utils/src/order/status.ts",
			"qualifiedName": "OrderStatus.COMPLETED"
		},
		"16840": {
			"sourceFileName": "../../../../packages/core/utils/src/order/status.ts",
			"qualifiedName": "OrderStatus.DRAFT"
		},
		"16841": {
			"sourceFileName": "../../../../packages/core/utils/src/order/status.ts",
			"qualifiedName": "OrderStatus.ARCHIVED"
		},
		"16842": {
			"sourceFileName": "../../../../packages/core/utils/src/order/status.ts",
			"qualifiedName": "OrderStatus.CANCELED"
		},
		"16843": {
			"sourceFileName": "../../../../packages/core/utils/src/order/status.ts",
			"qualifiedName": "OrderStatus.REQUIRES_ACTION"
		},
		"16844": {
			"sourceFileName": "../../../../packages/core/utils/src/order/status.ts",
			"qualifiedName": "ReturnStatus"
		},
		"16845": {
			"sourceFileName": "../../../../packages/core/utils/src/order/status.ts",
			"qualifiedName": "ReturnStatus.REQUESTED"
		},
		"16846": {
			"sourceFileName": "../../../../packages/core/utils/src/order/status.ts",
			"qualifiedName": "ReturnStatus.RECEIVED"
		},
		"16847": {
			"sourceFileName": "../../../../packages/core/utils/src/order/status.ts",
			"qualifiedName": "ReturnStatus.PARTIALLY_RECEIVED"
		},
		"16848": {
			"sourceFileName": "../../../../packages/core/utils/src/order/status.ts",
			"qualifiedName": "ReturnStatus.CANCELED"
		},
		"16849": {
			"sourceFileName": "../../../../packages/core/utils/src/order/status.ts",
			"qualifiedName": "ClaimType"
		},
		"16850": {
			"sourceFileName": "../../../../packages/core/utils/src/order/status.ts",
			"qualifiedName": "ClaimType.REFUND"
		},
		"16851": {
			"sourceFileName": "../../../../packages/core/utils/src/order/status.ts",
			"qualifiedName": "ClaimType.REPLACE"
		},
		"16852": {
			"sourceFileName": "../../../../packages/core/utils/src/order/status.ts",
			"qualifiedName": "ClaimReason"
		},
		"16853": {
			"sourceFileName": "../../../../packages/core/utils/src/order/status.ts",
			"qualifiedName": "ClaimReason.MISSING_ITEM"
		},
		"16854": {
			"sourceFileName": "../../../../packages/core/utils/src/order/status.ts",
			"qualifiedName": "ClaimReason.WRONG_ITEM"
		},
		"16855": {
			"sourceFileName": "../../../../packages/core/utils/src/order/status.ts",
			"qualifiedName": "ClaimReason.PRODUCTION_FAILURE"
		},
		"16856": {
			"sourceFileName": "../../../../packages/core/utils/src/order/status.ts",
			"qualifiedName": "ClaimReason.OTHER"
		},
		"16857": {
			"sourceFileName": "../../../../packages/core/utils/src/product/index.ts",
			"qualifiedName": ""
		},
		"16858": {
			"sourceFileName": "../../../../packages/core/utils/src/product/index.ts",
			"qualifiedName": "ProductStatus"
		},
		"16859": {
			"sourceFileName": "../../../../packages/core/utils/src/product/index.ts",
			"qualifiedName": "ProductStatus.DRAFT"
		},
		"16860": {
			"sourceFileName": "../../../../packages/core/utils/src/product/index.ts",
			"qualifiedName": "ProductStatus.PROPOSED"
		},
		"16861": {
			"sourceFileName": "../../../../packages/core/utils/src/product/index.ts",
			"qualifiedName": "ProductStatus.PUBLISHED"
		},
		"16862": {
			"sourceFileName": "../../../../packages/core/utils/src/product/index.ts",
			"qualifiedName": "ProductStatus.REJECTED"
		},
		"16863": {
			"sourceFileName": "../../../../packages/core/utils/src/product/events.ts",
			"qualifiedName": "ProductEvents"
		},
		"16864": {
			"sourceFileName": "../../../../packages/core/utils/src/promotion/index.ts",
			"qualifiedName": ""
		},
		"16865": {
			"sourceFileName": "../../../../packages/core/utils/src/promotion/index.ts",
			"qualifiedName": "PromotionType"
		},
		"16866": {
			"sourceFileName": "../../../../packages/core/utils/src/promotion/index.ts",
			"qualifiedName": "PromotionType.STANDARD"
		},
		"16867": {
			"sourceFileName": "../../../../packages/core/utils/src/promotion/index.ts",
			"qualifiedName": "PromotionType.BUYGET"
		},
		"16868": {
			"sourceFileName": "../../../../packages/core/utils/src/promotion/index.ts",
			"qualifiedName": "ApplicationMethodType"
		},
		"16869": {
			"sourceFileName": "../../../../packages/core/utils/src/promotion/index.ts",
			"qualifiedName": "ApplicationMethodType.FIXED"
		},
		"16870": {
			"sourceFileName": "../../../../packages/core/utils/src/promotion/index.ts",
			"qualifiedName": "ApplicationMethodType.PERCENTAGE"
		},
		"16871": {
			"sourceFileName": "../../../../packages/core/utils/src/promotion/index.ts",
			"qualifiedName": "ApplicationMethodTargetType"
		},
		"16872": {
			"sourceFileName": "../../../../packages/core/utils/src/promotion/index.ts",
			"qualifiedName": "ApplicationMethodTargetType.ORDER"
		},
		"16873": {
			"sourceFileName": "../../../../packages/core/utils/src/promotion/index.ts",
			"qualifiedName": "ApplicationMethodTargetType.SHIPPING_METHODS"
		},
		"16874": {
			"sourceFileName": "../../../../packages/core/utils/src/promotion/index.ts",
			"qualifiedName": "ApplicationMethodTargetType.ITEMS"
		},
		"16875": {
			"sourceFileName": "../../../../packages/core/utils/src/promotion/index.ts",
			"qualifiedName": "ApplicationMethodAllocation"
		},
		"16876": {
			"sourceFileName": "../../../../packages/core/utils/src/promotion/index.ts",
			"qualifiedName": "ApplicationMethodAllocation.EACH"
		},
		"16877": {
			"sourceFileName": "../../../../packages/core/utils/src/promotion/index.ts",
			"qualifiedName": "ApplicationMethodAllocation.ACROSS"
		},
		"16878": {
			"sourceFileName": "../../../../packages/core/utils/src/promotion/index.ts",
			"qualifiedName": "PromotionRuleOperator"
		},
		"16879": {
			"sourceFileName": "../../../../packages/core/utils/src/promotion/index.ts",
			"qualifiedName": "PromotionRuleOperator.GTE"
		},
		"16880": {
			"sourceFileName": "../../../../packages/core/utils/src/promotion/index.ts",
			"qualifiedName": "PromotionRuleOperator.LTE"
		},
		"16881": {
			"sourceFileName": "../../../../packages/core/utils/src/promotion/index.ts",
			"qualifiedName": "PromotionRuleOperator.GT"
		},
		"16882": {
			"sourceFileName": "../../../../packages/core/utils/src/promotion/index.ts",
			"qualifiedName": "PromotionRuleOperator.LT"
		},
		"16883": {
			"sourceFileName": "../../../../packages/core/utils/src/promotion/index.ts",
			"qualifiedName": "PromotionRuleOperator.EQ"
		},
		"16884": {
			"sourceFileName": "../../../../packages/core/utils/src/promotion/index.ts",
			"qualifiedName": "PromotionRuleOperator.NE"
		},
		"16885": {
			"sourceFileName": "../../../../packages/core/utils/src/promotion/index.ts",
			"qualifiedName": "PromotionRuleOperator.IN"
		},
		"16886": {
			"sourceFileName": "../../../../packages/core/utils/src/promotion/index.ts",
			"qualifiedName": "CampaignBudgetType"
		},
		"16887": {
			"sourceFileName": "../../../../packages/core/utils/src/promotion/index.ts",
			"qualifiedName": "CampaignBudgetType.SPEND"
		},
		"16888": {
			"sourceFileName": "../../../../packages/core/utils/src/promotion/index.ts",
			"qualifiedName": "CampaignBudgetType.USAGE"
		},
		"16889": {
			"sourceFileName": "../../../../packages/core/utils/src/promotion/index.ts",
			"qualifiedName": "ComputedActions"
		},
		"16890": {
			"sourceFileName": "../../../../packages/core/utils/src/promotion/index.ts",
			"qualifiedName": "ComputedActions.ADD_ITEM_ADJUSTMENT"
		},
		"16891": {
			"sourceFileName": "../../../../packages/core/utils/src/promotion/index.ts",
			"qualifiedName": "ComputedActions.ADD_SHIPPING_METHOD_ADJUSTMENT"
		},
		"16892": {
			"sourceFileName": "../../../../packages/core/utils/src/promotion/index.ts",
			"qualifiedName": "ComputedActions.REMOVE_ITEM_ADJUSTMENT"
		},
		"16893": {
			"sourceFileName": "../../../../packages/core/utils/src/promotion/index.ts",
			"qualifiedName": "ComputedActions.REMOVE_SHIPPING_METHOD_ADJUSTMENT"
		},
		"16894": {
			"sourceFileName": "../../../../packages/core/utils/src/promotion/index.ts",
			"qualifiedName": "ComputedActions.CAMPAIGN_BUDGET_EXCEEDED"
		},
		"16895": {
			"sourceFileName": "../../../../packages/core/utils/src/promotion/index.ts",
			"qualifiedName": "PromotionActions"
		},
		"16896": {
			"sourceFileName": "../../../../packages/core/utils/src/promotion/index.ts",
			"qualifiedName": "PromotionActions.ADD"
		},
		"16897": {
			"sourceFileName": "../../../../packages/core/utils/src/promotion/index.ts",
			"qualifiedName": "PromotionActions.REMOVE"
		},
		"16898": {
			"sourceFileName": "../../../../packages/core/utils/src/promotion/index.ts",
			"qualifiedName": "PromotionActions.REPLACE"
		},
		"16899": {
			"sourceFileName": "../../../../packages/core/utils/src/promotion/index.ts",
			"qualifiedName": "RuleType"
		},
		"16900": {
			"sourceFileName": "../../../../packages/core/utils/src/promotion/index.ts",
			"qualifiedName": "RuleType.RULES"
		},
		"16901": {
			"sourceFileName": "../../../../packages/core/utils/src/promotion/index.ts",
			"qualifiedName": "RuleType.TARGET_RULES"
		},
		"16902": {
			"sourceFileName": "../../../../packages/core/utils/src/promotion/index.ts",
			"qualifiedName": "RuleType.BUY_RULES"
		},
		"16903": {
			"sourceFileName": "../../../../packages/core/utils/src/shipping/index.ts",
			"qualifiedName": ""
		},
		"16904": {
			"sourceFileName": "../../../../packages/core/utils/src/shipping/index.ts",
			"qualifiedName": "ShippingProfileType"
		},
		"16905": {
			"sourceFileName": "../../../../packages/core/utils/src/shipping/index.ts",
			"qualifiedName": "ShippingProfileType.DEFAULT"
		},
		"16906": {
			"sourceFileName": "../../../../packages/core/utils/src/shipping/index.ts",
			"qualifiedName": "ShippingProfileType.GIFT_CARD"
		},
		"16907": {
			"sourceFileName": "../../../../packages/core/utils/src/shipping/index.ts",
			"qualifiedName": "ShippingProfileType.CUSTOM"
		},
		"16908": {
			"sourceFileName": "../../../../packages/core/utils/src/user/index.ts",
			"qualifiedName": ""
		},
		"16909": {
			"sourceFileName": "../../../../packages/core/utils/src/user/events.ts",
			"qualifiedName": "UserEvents"
		},
		"16910": {
			"sourceFileName": "../../../../packages/core/utils/src/user/events.ts",
			"qualifiedName": "__object"
		},
		"16911": {
			"sourceFileName": "../../../../packages/core/utils/src/user/events.ts",
			"qualifiedName": "__object.INVITE_TOKEN_GENERATED"
		},
		"16912": {
			"sourceFileName": "",
			"qualifiedName": "USER_CREATED"
		},
		"16913": {
			"sourceFileName": "",
			"qualifiedName": "INVITE_CREATED"
		},
		"16914": {
			"sourceFileName": "",
			"qualifiedName": "USER_UPDATED"
		},
		"16915": {
			"sourceFileName": "",
			"qualifiedName": "INVITE_UPDATED"
		},
		"16916": {
			"sourceFileName": "",
			"qualifiedName": "USER_DELETED"
		},
		"16917": {
			"sourceFileName": "",
			"qualifiedName": "INVITE_DELETED"
		},
		"16918": {
			"sourceFileName": "",
			"qualifiedName": "USER_RESTORED"
		},
		"16919": {
			"sourceFileName": "",
			"qualifiedName": "INVITE_RESTORED"
		},
		"16920": {
			"sourceFileName": "",
			"qualifiedName": "USER_ATTACHED"
		},
		"16921": {
			"sourceFileName": "",
			"qualifiedName": "INVITE_ATTACHED"
		},
		"16922": {
			"sourceFileName": "",
			"qualifiedName": "USER_DETACHED"
		},
		"16923": {
			"sourceFileName": "",
			"qualifiedName": "INVITE_DETACHED"
		},
		"16924": {
			"sourceFileName": "../../../../packages/core/utils/src/payment/events.ts",
			"qualifiedName": "PaymentEvents"
		},
		"16925": {
			"sourceFileName": "../../../../packages/core/utils/src/payment/events.ts",
			"qualifiedName": "__object"
		},
		"16926": {
			"sourceFileName": "../../../../packages/core/utils/src/payment/events.ts",
			"qualifiedName": "__object.CAPTURED"
		},
		"16927": {
			"sourceFileName": "../../../../packages/core/utils/src/payment/events.ts",
			"qualifiedName": "__object.REFUNDED"
		},
		"16928": {
			"sourceFileName": "../../../../packages/core/utils/src/payment/payment-collection.ts",
			"qualifiedName": "PaymentCollectionStatus"
		},
		"16929": {
			"sourceFileName": "../../../../packages/core/utils/src/payment/payment-collection.ts",
			"qualifiedName": "PaymentCollectionStatus.NOT_PAID"
		},
		"16930": {
			"sourceFileName": "../../../../packages/core/utils/src/payment/payment-collection.ts",
			"qualifiedName": "PaymentCollectionStatus.AWAITING"
		},
		"16931": {
			"sourceFileName": "../../../../packages/core/utils/src/payment/payment-collection.ts",
			"qualifiedName": "PaymentCollectionStatus.AUTHORIZED"
		},
		"16932": {
			"sourceFileName": "../../../../packages/core/utils/src/payment/payment-collection.ts",
			"qualifiedName": "PaymentCollectionStatus.PARTIALLY_AUTHORIZED"
		},
		"16933": {
			"sourceFileName": "../../../../packages/core/utils/src/payment/payment-collection.ts",
			"qualifiedName": "PaymentCollectionStatus.CANCELED"
		},
		"16934": {
			"sourceFileName": "../../../../packages/core/utils/src/payment/payment-session.ts",
			"qualifiedName": "PaymentSessionStatus"
		},
		"16935": {
			"sourceFileName": "../../../../packages/core/utils/src/payment/payment-session.ts",
			"qualifiedName": "PaymentSessionStatus.AUTHORIZED"
		},
		"16936": {
			"sourceFileName": "../../../../packages/core/utils/src/payment/payment-session.ts",
			"qualifiedName": "PaymentSessionStatus.CAPTURED"
		},
		"16937": {
			"sourceFileName": "../../../../packages/core/utils/src/payment/payment-session.ts",
			"qualifiedName": "PaymentSessionStatus.PENDING"
		},
		"16938": {
			"sourceFileName": "../../../../packages/core/utils/src/payment/payment-session.ts",
			"qualifiedName": "PaymentSessionStatus.REQUIRES_MORE"
		},
		"16939": {
			"sourceFileName": "../../../../packages/core/utils/src/payment/payment-session.ts",
			"qualifiedName": "PaymentSessionStatus.ERROR"
		},
		"16940": {
			"sourceFileName": "../../../../packages/core/utils/src/payment/payment-session.ts",
			"qualifiedName": "PaymentSessionStatus.CANCELED"
		},
		"16941": {
			"sourceFileName": "../../../../packages/core/utils/src/payment/webhook.ts",
			"qualifiedName": "PaymentWebhookEvents"
		},
		"16942": {
			"sourceFileName": "../../../../packages/core/utils/src/payment/webhook.ts",
			"qualifiedName": "PaymentWebhookEvents.WebhookReceived"
		},
		"16943": {
			"sourceFileName": "../../../../packages/core/utils/src/payment/webhook.ts",
			"qualifiedName": "PaymentActions"
		},
		"16944": {
			"sourceFileName": "../../../../packages/core/utils/src/payment/webhook.ts",
			"qualifiedName": "PaymentActions.AUTHORIZED"
		},
		"16945": {
			"sourceFileName": "../../../../packages/core/utils/src/payment/webhook.ts",
			"qualifiedName": "PaymentActions.SUCCESSFUL"
		},
		"16946": {
			"sourceFileName": "../../../../packages/core/utils/src/payment/webhook.ts",
			"qualifiedName": "PaymentActions.FAILED"
		},
		"16947": {
			"sourceFileName": "../../../../packages/core/utils/src/payment/webhook.ts",
			"qualifiedName": "PaymentActions.NOT_SUPPORTED"
		},
		"16948": {
			"sourceFileName": "../../../../packages/core/utils/src/pricing/price-list.ts",
			"qualifiedName": "PriceListStatus"
		},
		"16949": {
			"sourceFileName": "../../../../packages/core/utils/src/pricing/price-list.ts",
			"qualifiedName": "PriceListStatus.ACTIVE"
		},
		"16950": {
			"sourceFileName": "../../../../packages/core/utils/src/pricing/price-list.ts",
			"qualifiedName": "PriceListStatus.DRAFT"
		},
		"16951": {
			"sourceFileName": "../../../../packages/core/utils/src/pricing/price-list.ts",
			"qualifiedName": "PriceListType"
		},
		"16952": {
			"sourceFileName": "../../../../packages/core/utils/src/pricing/price-list.ts",
			"qualifiedName": "PriceListType.SALE"
		},
		"16953": {
			"sourceFileName": "../../../../packages/core/utils/src/pricing/price-list.ts",
			"qualifiedName": "PriceListType.OVERRIDE"
		},
		"16954": {
			"sourceFileName": "../../../../packages/core/utils/src/pricing/rule-type.ts",
			"qualifiedName": "ReservedPricingRuleAttributes"
		},
		"16955": {
			"sourceFileName": "../../../../packages/core/utils/src/pricing/rule-type.ts",
			"qualifiedName": "getInvalidRuleAttributes"
		},
		"16956": {
			"sourceFileName": "../../../../packages/core/utils/src/pricing/rule-type.ts",
			"qualifiedName": "getInvalidRuleAttributes"
		},
		"16957": {
			"sourceFileName": "../../../../packages/core/utils/src/pricing/rule-type.ts",
			"qualifiedName": "ruleAttributes"
		},
		"16958": {
			"sourceFileName": "../../../../packages/core/utils/src/pricing/rule-type.ts",
			"qualifiedName": "validateRuleAttributes"
		},
		"16959": {
			"sourceFileName": "../../../../packages/core/utils/src/pricing/rule-type.ts",
			"qualifiedName": "validateRuleAttributes"
		},
		"16960": {
			"sourceFileName": "../../../../packages/core/utils/src/pricing/rule-type.ts",
			"qualifiedName": "ruleAttributes"
		},
		"16961": {
			"sourceFileName": "../../../../packages/core/utils/src/pricing/events.ts",
			"qualifiedName": "PricingEvents"
		},
		"16962": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "DMLSchema"
		},
		"16963": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "DefineOptions"
		},
		"16964": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "__type"
		},
		"16965": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "__type.name"
		},
		"16966": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "__type.tableName"
		},
		"16967": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/nullable.ts",
			"qualifiedName": "NullableModifier"
		},
		"16968": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/nullable.ts",
			"qualifiedName": "NullableModifier.isNullableModifier"
		},
		"16969": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/nullable.ts",
			"qualifiedName": "NullableModifier.isNullableModifier"
		},
		"16970": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/nullable.ts",
			"qualifiedName": "obj"
		},
		"16971": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/nullable.ts",
			"qualifiedName": "NullableModifier.__constructor"
		},
		"16972": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/nullable.ts",
			"qualifiedName": "NullableModifier"
		},
		"16973": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/nullable.ts",
			"qualifiedName": "NullableModifier.T"
		},
		"16974": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/nullable.ts",
			"qualifiedName": "NullableModifier.Schema"
		},
		"16975": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/nullable.ts",
			"qualifiedName": "schema"
		},
		"16976": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/nullable.ts",
			"qualifiedName": "NullableModifier.$dataType"
		},
		"16978": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/nullable.ts",
			"qualifiedName": "NullableModifier.parse"
		},
		"16979": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/nullable.ts",
			"qualifiedName": "NullableModifier.parse"
		},
		"16980": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/nullable.ts",
			"qualifiedName": "fieldName"
		},
		"16981": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/nullable.ts",
			"qualifiedName": "NullableModifier.[IsNullableModifier]"
		},
		"16982": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/nullable.ts",
			"qualifiedName": "NullableModifier.T"
		},
		"16983": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/nullable.ts",
			"qualifiedName": "NullableModifier.Schema"
		},
		"16984": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/big-number.ts",
			"qualifiedName": "BigNumberProperty"
		},
		"16985": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/big-number.ts",
			"qualifiedName": "BigNumberProperty.isBigNumberProperty"
		},
		"16986": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/big-number.ts",
			"qualifiedName": "BigNumberProperty.isBigNumberProperty"
		},
		"16987": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/big-number.ts",
			"qualifiedName": "obj"
		},
		"16990": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/big-number.ts",
			"qualifiedName": "BigNumberProperty.dataType"
		},
		"16991": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/big-number.ts",
			"qualifiedName": "__object"
		},
		"16992": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/big-number.ts",
			"qualifiedName": "__object.name"
		},
		"16999": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.$dataType"
		},
		"17000": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.nullable"
		},
		"17001": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.nullable"
		},
		"17002": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.index"
		},
		"17003": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.index"
		},
		"17004": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "name"
		},
		"17005": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.unique"
		},
		"17006": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.unique"
		},
		"17007": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "name"
		},
		"17008": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.default"
		},
		"17009": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.default"
		},
		"17010": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "value"
		},
		"17011": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.parse"
		},
		"17012": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.parse"
		},
		"17013": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "fieldName"
		},
		"17014": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/json.ts",
			"qualifiedName": "JSONProperty"
		},
		"17017": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/json.ts",
			"qualifiedName": "JSONProperty.dataType"
		},
		"17018": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/json.ts",
			"qualifiedName": "__object"
		},
		"17019": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/json.ts",
			"qualifiedName": "__object.name"
		},
		"17026": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.$dataType"
		},
		"17027": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.nullable"
		},
		"17028": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.nullable"
		},
		"17029": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.index"
		},
		"17030": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.index"
		},
		"17031": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "name"
		},
		"17032": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.unique"
		},
		"17033": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.unique"
		},
		"17034": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "name"
		},
		"17035": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.default"
		},
		"17036": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.default"
		},
		"17037": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "value"
		},
		"17038": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.parse"
		},
		"17039": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.parse"
		},
		"17040": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "fieldName"
		},
		"17041": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/helpers/entity-builder/create-default-properties.ts",
			"qualifiedName": "DMLSchemaDefaults"
		},
		"17042": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/helpers/entity-builder/create-default-properties.ts",
			"qualifiedName": "__type"
		},
		"17043": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/helpers/entity-builder/create-default-properties.ts",
			"qualifiedName": "__type.created_at"
		},
		"17044": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/helpers/entity-builder/create-default-properties.ts",
			"qualifiedName": "__type.updated_at"
		},
		"17045": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/helpers/entity-builder/create-default-properties.ts",
			"qualifiedName": "__type.deleted_at"
		},
		"17046": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/id.ts",
			"qualifiedName": "IdProperty"
		},
		"17047": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/id.ts",
			"qualifiedName": "IdProperty.__constructor"
		},
		"17048": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/id.ts",
			"qualifiedName": "IdProperty"
		},
		"17049": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/id.ts",
			"qualifiedName": "options"
		},
		"17050": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/id.ts",
			"qualifiedName": "__type"
		},
		"17051": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/id.ts",
			"qualifiedName": "__type.primaryKey"
		},
		"17052": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/id.ts",
			"qualifiedName": "__type.prefix"
		},
		"17053": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/id.ts",
			"qualifiedName": "IdProperty.dataType"
		},
		"17054": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/id.ts",
			"qualifiedName": "__type"
		},
		"17055": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/id.ts",
			"qualifiedName": "__type.name"
		},
		"17056": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/id.ts",
			"qualifiedName": "__type.options"
		},
		"17057": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/id.ts",
			"qualifiedName": "__type"
		},
		"17058": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/id.ts",
			"qualifiedName": "__type.primaryKey"
		},
		"17059": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/id.ts",
			"qualifiedName": "__type.prefix"
		},
		"17060": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/id.ts",
			"qualifiedName": "IdProperty.primaryKey"
		},
		"17061": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/id.ts",
			"qualifiedName": "IdProperty.primaryKey"
		},
		"17062": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/id.ts",
			"qualifiedName": "decision"
		},
		"17069": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.$dataType"
		},
		"17070": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.nullable"
		},
		"17071": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.nullable"
		},
		"17072": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.index"
		},
		"17073": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.index"
		},
		"17074": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "name"
		},
		"17075": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.unique"
		},
		"17076": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.unique"
		},
		"17077": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "name"
		},
		"17078": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.default"
		},
		"17079": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.default"
		},
		"17080": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "value"
		},
		"17081": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.parse"
		},
		"17082": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.parse"
		},
		"17083": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "fieldName"
		},
		"17084": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/text.ts",
			"qualifiedName": "TextProperty"
		},
		"17085": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/text.ts",
			"qualifiedName": "TextProperty.__constructor"
		},
		"17086": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/text.ts",
			"qualifiedName": "TextProperty"
		},
		"17087": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/text.ts",
			"qualifiedName": "options"
		},
		"17088": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/text.ts",
			"qualifiedName": "__type"
		},
		"17089": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/text.ts",
			"qualifiedName": "__type.primaryKey"
		},
		"17090": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/text.ts",
			"qualifiedName": "__type.searchable"
		},
		"17091": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/text.ts",
			"qualifiedName": "TextProperty.dataType"
		},
		"17092": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/text.ts",
			"qualifiedName": "__type"
		},
		"17093": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/text.ts",
			"qualifiedName": "__type.name"
		},
		"17094": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/text.ts",
			"qualifiedName": "__type.options"
		},
		"17095": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/text.ts",
			"qualifiedName": "__type"
		},
		"17096": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/text.ts",
			"qualifiedName": "__type.primaryKey"
		},
		"17097": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/text.ts",
			"qualifiedName": "__type.searchable"
		},
		"17098": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/text.ts",
			"qualifiedName": "TextProperty.primaryKey"
		},
		"17099": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/text.ts",
			"qualifiedName": "TextProperty.primaryKey"
		},
		"17100": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/text.ts",
			"qualifiedName": "TextProperty.searchable"
		},
		"17101": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/text.ts",
			"qualifiedName": "TextProperty.searchable"
		},
		"17108": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.$dataType"
		},
		"17109": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.nullable"
		},
		"17110": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.nullable"
		},
		"17111": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.index"
		},
		"17112": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.index"
		},
		"17113": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "name"
		},
		"17114": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.unique"
		},
		"17115": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.unique"
		},
		"17116": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "name"
		},
		"17117": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.default"
		},
		"17118": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.default"
		},
		"17119": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "value"
		},
		"17120": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.parse"
		},
		"17121": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.parse"
		},
		"17122": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "fieldName"
		},
		"17123": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/boolean.ts",
			"qualifiedName": "BooleanProperty"
		},
		"17126": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/boolean.ts",
			"qualifiedName": "BooleanProperty.dataType"
		},
		"17127": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/boolean.ts",
			"qualifiedName": "__object"
		},
		"17128": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/boolean.ts",
			"qualifiedName": "__object.name"
		},
		"17135": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.$dataType"
		},
		"17136": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.nullable"
		},
		"17137": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.nullable"
		},
		"17138": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.index"
		},
		"17139": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.index"
		},
		"17140": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "name"
		},
		"17141": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.unique"
		},
		"17142": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.unique"
		},
		"17143": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "name"
		},
		"17144": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.default"
		},
		"17145": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.default"
		},
		"17146": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "value"
		},
		"17147": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.parse"
		},
		"17148": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.parse"
		},
		"17149": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "fieldName"
		},
		"17150": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/number.ts",
			"qualifiedName": "NumberProperty"
		},
		"17151": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/number.ts",
			"qualifiedName": "NumberProperty.__constructor"
		},
		"17152": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/number.ts",
			"qualifiedName": "NumberProperty"
		},
		"17153": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/number.ts",
			"qualifiedName": "options"
		},
		"17154": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/number.ts",
			"qualifiedName": "__type"
		},
		"17155": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/number.ts",
			"qualifiedName": "__type.primaryKey"
		},
		"17156": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/number.ts",
			"qualifiedName": "NumberProperty.dataType"
		},
		"17157": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/number.ts",
			"qualifiedName": "__type"
		},
		"17158": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/number.ts",
			"qualifiedName": "__type.name"
		},
		"17159": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/number.ts",
			"qualifiedName": "__type.options"
		},
		"17160": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/number.ts",
			"qualifiedName": "__type"
		},
		"17161": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/number.ts",
			"qualifiedName": "__type.primaryKey"
		},
		"17162": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/number.ts",
			"qualifiedName": "NumberProperty.primaryKey"
		},
		"17163": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/number.ts",
			"qualifiedName": "NumberProperty.primaryKey"
		},
		"17170": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.$dataType"
		},
		"17171": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.nullable"
		},
		"17172": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.nullable"
		},
		"17173": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.index"
		},
		"17174": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.index"
		},
		"17175": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "name"
		},
		"17176": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.unique"
		},
		"17177": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.unique"
		},
		"17178": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "name"
		},
		"17179": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.default"
		},
		"17180": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.default"
		},
		"17181": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "value"
		},
		"17182": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.parse"
		},
		"17183": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.parse"
		},
		"17184": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "fieldName"
		},
		"17185": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/array.ts",
			"qualifiedName": "ArrayProperty"
		},
		"17188": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/array.ts",
			"qualifiedName": "ArrayProperty.dataType"
		},
		"17189": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/array.ts",
			"qualifiedName": "__object"
		},
		"17190": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/array.ts",
			"qualifiedName": "__object.name"
		},
		"17197": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.$dataType"
		},
		"17198": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.nullable"
		},
		"17199": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.nullable"
		},
		"17200": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.index"
		},
		"17201": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.index"
		},
		"17202": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "name"
		},
		"17203": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.unique"
		},
		"17204": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.unique"
		},
		"17205": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "name"
		},
		"17206": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.default"
		},
		"17207": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.default"
		},
		"17208": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "value"
		},
		"17209": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.parse"
		},
		"17210": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.parse"
		},
		"17211": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "fieldName"
		},
		"17212": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/date-time.ts",
			"qualifiedName": "DateTimeProperty"
		},
		"17215": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/date-time.ts",
			"qualifiedName": "DateTimeProperty.dataType"
		},
		"17216": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/date-time.ts",
			"qualifiedName": "__object"
		},
		"17217": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/date-time.ts",
			"qualifiedName": "__object.name"
		},
		"17224": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.$dataType"
		},
		"17225": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.nullable"
		},
		"17226": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.nullable"
		},
		"17227": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.index"
		},
		"17228": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.index"
		},
		"17229": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "name"
		},
		"17230": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.unique"
		},
		"17231": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.unique"
		},
		"17232": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "name"
		},
		"17233": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.default"
		},
		"17234": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.default"
		},
		"17235": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "value"
		},
		"17236": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.parse"
		},
		"17237": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.parse"
		},
		"17238": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "fieldName"
		},
		"17239": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/enum.ts",
			"qualifiedName": "EnumProperty"
		},
		"17240": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/enum.ts",
			"qualifiedName": "EnumProperty.__constructor"
		},
		"17241": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/enum.ts",
			"qualifiedName": "EnumProperty"
		},
		"17242": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/enum.ts",
			"qualifiedName": "EnumProperty.Values"
		},
		"17243": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/enum.ts",
			"qualifiedName": "values"
		},
		"17244": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/enum.ts",
			"qualifiedName": "EnumProperty.dataType"
		},
		"17245": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/enum.ts",
			"qualifiedName": "__type"
		},
		"17246": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/enum.ts",
			"qualifiedName": "__type.name"
		},
		"17247": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/enum.ts",
			"qualifiedName": "__type.options"
		},
		"17248": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/enum.ts",
			"qualifiedName": "__type"
		},
		"17249": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/enum.ts",
			"qualifiedName": "__type.choices"
		},
		"17256": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.$dataType"
		},
		"17257": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.nullable"
		},
		"17258": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.nullable"
		},
		"17259": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.index"
		},
		"17260": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.index"
		},
		"17261": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "name"
		},
		"17262": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.unique"
		},
		"17263": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.unique"
		},
		"17264": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "name"
		},
		"17265": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.default"
		},
		"17266": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.default"
		},
		"17267": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "value"
		},
		"17268": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.parse"
		},
		"17269": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.parse"
		},
		"17270": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "fieldName"
		},
		"17271": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/enum.ts",
			"qualifiedName": "EnumProperty.Values"
		},
		"17272": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "RelationshipOptions"
		},
		"17273": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"17274": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.mappedBy"
		},
		"17275": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/has-one.ts",
			"qualifiedName": "HasOne"
		},
		"17276": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/has-one.ts",
			"qualifiedName": "HasOne.isHasOne"
		},
		"17277": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/has-one.ts",
			"qualifiedName": "HasOne.isHasOne"
		},
		"17278": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/has-one.ts",
			"qualifiedName": "T"
		},
		"17279": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/has-one.ts",
			"qualifiedName": "relationship"
		},
		"17280": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/base.ts",
			"qualifiedName": "BaseRelationship.__constructor"
		},
		"17281": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/base.ts",
			"qualifiedName": "HasOne"
		},
		"17282": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/has-one.ts",
			"qualifiedName": "HasOne.T"
		},
		"17283": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/base.ts",
			"qualifiedName": "referencedEntity"
		},
		"17284": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/base.ts",
			"qualifiedName": "options"
		},
		"17285": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/has-one.ts",
			"qualifiedName": "HasOne.type"
		},
		"17286": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/has-one.ts",
			"qualifiedName": "HasOne.nullable"
		},
		"17287": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/has-one.ts",
			"qualifiedName": "HasOne.nullable"
		},
		"17289": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/base.ts",
			"qualifiedName": "BaseRelationship.options"
		},
		"17290": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/base.ts",
			"qualifiedName": "BaseRelationship.$dataType"
		},
		"17291": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/base.ts",
			"qualifiedName": "BaseRelationship.parse"
		},
		"17292": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/base.ts",
			"qualifiedName": "BaseRelationship.parse"
		},
		"17293": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/base.ts",
			"qualifiedName": "relationshipName"
		},
		"17294": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/has-one.ts",
			"qualifiedName": "HasOne.T"
		},
		"17295": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/belongs-to.ts",
			"qualifiedName": "BelongsTo"
		},
		"17296": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/belongs-to.ts",
			"qualifiedName": "BelongsTo.isBelongsTo"
		},
		"17297": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/belongs-to.ts",
			"qualifiedName": "BelongsTo.isBelongsTo"
		},
		"17298": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/belongs-to.ts",
			"qualifiedName": "T"
		},
		"17299": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/belongs-to.ts",
			"qualifiedName": "relationship"
		},
		"17300": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/base.ts",
			"qualifiedName": "BaseRelationship.__constructor"
		},
		"17301": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/base.ts",
			"qualifiedName": "BelongsTo"
		},
		"17302": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/belongs-to.ts",
			"qualifiedName": "BelongsTo.T"
		},
		"17303": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/base.ts",
			"qualifiedName": "referencedEntity"
		},
		"17304": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/base.ts",
			"qualifiedName": "options"
		},
		"17305": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/belongs-to.ts",
			"qualifiedName": "BelongsTo.type"
		},
		"17306": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/belongs-to.ts",
			"qualifiedName": "BelongsTo.nullable"
		},
		"17307": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/belongs-to.ts",
			"qualifiedName": "BelongsTo.nullable"
		},
		"17309": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/base.ts",
			"qualifiedName": "BaseRelationship.options"
		},
		"17310": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/base.ts",
			"qualifiedName": "BaseRelationship.$dataType"
		},
		"17311": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/base.ts",
			"qualifiedName": "BaseRelationship.parse"
		},
		"17312": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/base.ts",
			"qualifiedName": "BaseRelationship.parse"
		},
		"17313": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/base.ts",
			"qualifiedName": "relationshipName"
		},
		"17314": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/belongs-to.ts",
			"qualifiedName": "BelongsTo.T"
		},
		"17315": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/has-many.ts",
			"qualifiedName": "HasMany"
		},
		"17316": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/has-many.ts",
			"qualifiedName": "HasMany.isHasMany"
		},
		"17317": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/has-many.ts",
			"qualifiedName": "HasMany.isHasMany"
		},
		"17318": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/has-many.ts",
			"qualifiedName": "T"
		},
		"17319": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/has-many.ts",
			"qualifiedName": "relationship"
		},
		"17320": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/base.ts",
			"qualifiedName": "BaseRelationship.__constructor"
		},
		"17321": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/base.ts",
			"qualifiedName": "HasMany"
		},
		"17322": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/has-many.ts",
			"qualifiedName": "HasMany.T"
		},
		"17323": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/base.ts",
			"qualifiedName": "referencedEntity"
		},
		"17324": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/base.ts",
			"qualifiedName": "options"
		},
		"17325": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/has-many.ts",
			"qualifiedName": "HasMany.type"
		},
		"17327": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/base.ts",
			"qualifiedName": "BaseRelationship.options"
		},
		"17328": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/base.ts",
			"qualifiedName": "BaseRelationship.$dataType"
		},
		"17329": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/base.ts",
			"qualifiedName": "BaseRelationship.parse"
		},
		"17330": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/base.ts",
			"qualifiedName": "BaseRelationship.parse"
		},
		"17331": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/base.ts",
			"qualifiedName": "relationshipName"
		},
		"17332": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/has-many.ts",
			"qualifiedName": "HasMany.T"
		},
		"17333": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/many-to-many.ts",
			"qualifiedName": "ManyToMany"
		},
		"17334": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/many-to-many.ts",
			"qualifiedName": "ManyToMany.isManyToMany"
		},
		"17335": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/many-to-many.ts",
			"qualifiedName": "ManyToMany.isManyToMany"
		},
		"17336": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/many-to-many.ts",
			"qualifiedName": "T"
		},
		"17337": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/many-to-many.ts",
			"qualifiedName": "relationship"
		},
		"17338": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/base.ts",
			"qualifiedName": "BaseRelationship.__constructor"
		},
		"17339": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/base.ts",
			"qualifiedName": "ManyToMany"
		},
		"17340": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/many-to-many.ts",
			"qualifiedName": "ManyToMany.T"
		},
		"17341": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/base.ts",
			"qualifiedName": "referencedEntity"
		},
		"17342": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/base.ts",
			"qualifiedName": "options"
		},
		"17343": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/many-to-many.ts",
			"qualifiedName": "ManyToMany.type"
		},
		"17345": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/base.ts",
			"qualifiedName": "BaseRelationship.options"
		},
		"17346": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/base.ts",
			"qualifiedName": "BaseRelationship.$dataType"
		},
		"17347": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/base.ts",
			"qualifiedName": "BaseRelationship.parse"
		},
		"17348": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/base.ts",
			"qualifiedName": "BaseRelationship.parse"
		},
		"17349": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/base.ts",
			"qualifiedName": "relationshipName"
		},
		"17350": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/many-to-many.ts",
			"qualifiedName": "ManyToMany.T"
		},
		"17351": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "IDmlEntity"
		},
		"17352": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "IDmlEntity.schema"
		},
		"17353": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "IDmlEntity.[IsDmlEntity]"
		},
		"17354": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "IDmlEntity.Schema"
		},
		"17355": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "Config"
		},
		"17356": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "__type"
		},
		"17357": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "__type.name"
		},
		"17358": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "__type.tableName"
		},
		"17359": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "EntityCascades"
		},
		"17360": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"17361": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.delete"
		},
		"17362": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "Relationships"
		},
		"17363": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "EntityIndex"
		},
		"17364": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"17365": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.name"
		},
		"17366": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.unique"
		},
		"17367": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.on"
		},
		"17368": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.where"
		},
		"17369": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "TSchema"
		},
		"17370": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "ExtractEntityRelations"
		},
		"17371": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"17372": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.type"
		},
		"17373": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "Schema"
		},
		"17374": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "OfType"
		},
		"17375": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "Infer"
		},
		"17376": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"17377": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"17378": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"17379": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"17380": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "T"
		},
		"17381": {
			"sourceFileName": "../../../../packages/core/utils/src/pricing/rule-type.ts",
			"qualifiedName": "RuleAttributeInput"
		},
		"17382": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "PropertyType"
		},
		"17383": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"17384": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.$dataType"
		},
		"17385": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.parse"
		},
		"17386": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.parse"
		},
		"17387": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "fieldName"
		},
		"17388": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "T"
		},
		"17389": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "RelationshipType"
		},
		"17390": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"17391": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.$dataType"
		},
		"17392": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.type"
		},
		"17393": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.parse"
		},
		"17394": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.parse"
		},
		"17395": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "relationshipName"
		},
		"17396": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "T"
		},
		"17397": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "PropertyMetadata"
		},
		"17398": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"17399": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.fieldName"
		},
		"17400": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.defaultValue"
		},
		"17401": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.nullable"
		},
		"17402": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.dataType"
		},
		"17403": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"17404": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.name"
		},
		"17405": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.options"
		},
		"17406": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.indexes"
		},
		"17407": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"17408": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.name"
		},
		"17409": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.type"
		},
		"17410": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.relationships"
		},
		"17411": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty"
		},
		"17414": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.T"
		},
		"17421": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.dataType"
		},
		"17422": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"17423": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.name"
		},
		"17424": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.options"
		},
		"17425": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.$dataType"
		},
		"17426": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.nullable"
		},
		"17427": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.nullable"
		},
		"17428": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.index"
		},
		"17429": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.index"
		},
		"17430": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "name"
		},
		"17431": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.unique"
		},
		"17432": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.unique"
		},
		"17433": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "name"
		},
		"17434": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.default"
		},
		"17435": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.default"
		},
		"17436": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "value"
		},
		"17437": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.parse"
		},
		"17438": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.parse"
		},
		"17439": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "fieldName"
		},
		"17440": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.T"
		},
		"17441": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "RelationshipMetadata"
		},
		"17442": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"17443": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.name"
		},
		"17444": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.type"
		},
		"17445": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.entity"
		},
		"17446": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.nullable"
		},
		"17447": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.mappedBy"
		},
		"17448": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.options"
		},
		"17449": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/base.ts",
			"qualifiedName": "BaseRelationship"
		},
		"17450": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/base.ts",
			"qualifiedName": "BaseRelationship.__constructor"
		},
		"17451": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/base.ts",
			"qualifiedName": "BaseRelationship"
		},
		"17452": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/base.ts",
			"qualifiedName": "BaseRelationship.T"
		},
		"17453": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/base.ts",
			"qualifiedName": "referencedEntity"
		},
		"17454": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/base.ts",
			"qualifiedName": "options"
		},
		"17456": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/base.ts",
			"qualifiedName": "BaseRelationship.options"
		},
		"17457": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/base.ts",
			"qualifiedName": "BaseRelationship.type"
		},
		"17458": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/base.ts",
			"qualifiedName": "BaseRelationship.$dataType"
		},
		"17459": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/base.ts",
			"qualifiedName": "BaseRelationship.parse"
		},
		"17460": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/base.ts",
			"qualifiedName": "BaseRelationship.parse"
		},
		"17461": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/base.ts",
			"qualifiedName": "relationshipName"
		},
		"17462": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/base.ts",
			"qualifiedName": "BaseRelationship.T"
		},
		"17463": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/nullable.ts",
			"qualifiedName": "NullableModifier"
		},
		"17464": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/nullable.ts",
			"qualifiedName": "NullableModifier.isNullableModifier"
		},
		"17465": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/nullable.ts",
			"qualifiedName": "NullableModifier.isNullableModifier"
		},
		"17466": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/nullable.ts",
			"qualifiedName": "T"
		},
		"17467": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/nullable.ts",
			"qualifiedName": "modifier"
		},
		"17468": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/nullable.ts",
			"qualifiedName": "NullableModifier.__constructor"
		},
		"17469": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/nullable.ts",
			"qualifiedName": "NullableModifier"
		},
		"17470": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/nullable.ts",
			"qualifiedName": "NullableModifier.T"
		},
		"17471": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/nullable.ts",
			"qualifiedName": "NullableModifier.Relation"
		},
		"17472": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/nullable.ts",
			"qualifiedName": "relation"
		},
		"17473": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/nullable.ts",
			"qualifiedName": "NullableModifier.type"
		},
		"17474": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/nullable.ts",
			"qualifiedName": "NullableModifier.$dataType"
		},
		"17476": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/nullable.ts",
			"qualifiedName": "NullableModifier.parse"
		},
		"17477": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/nullable.ts",
			"qualifiedName": "NullableModifier.parse"
		},
		"17478": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/nullable.ts",
			"qualifiedName": "fieldName"
		},
		"17479": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/nullable.ts",
			"qualifiedName": "NullableModifier.[IsNullableModifier]"
		},
		"17480": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/nullable.ts",
			"qualifiedName": "NullableModifier.T"
		},
		"17481": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/relations/nullable.ts",
			"qualifiedName": "NullableModifier.Relation"
		},
		"17482": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "InferIndexableProperties"
		},
		"17483": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "T"
		},
		"17484": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "RelationshipTypes"
		},
		"17485": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "EntityConstructor"
		},
		"17486": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "EntityConstructor.Props"
		},
		"17487": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "EntityConstructor"
		},
		"17488": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "EntityConstructor"
		},
		"17489": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "InferForeignKeys"
		},
		"17490": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "T"
		},
		"17491": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "KnownDataTypes"
		}
	},
	"files": {
		"entries": {
			"1": "../../../../packages/core/utils/src/index.ts",
			"2": "../../../../packages/core/utils/src/dml/index.ts",
			"3": "../../../../packages/core/utils/src/fulfillment/index.ts",
			"4": "../../../../packages/core/utils/src/inventory/index.ts",
			"5": "../../../../packages/core/utils/src/link/index.ts",
			"6": "../../../../packages/core/utils/src/order/index.ts",
			"7": "../../../../packages/core/utils/src/product/index.ts",
			"8": "../../../../packages/core/utils/src/promotion/index.ts",
			"9": "../../../../packages/core/utils/src/shipping/index.ts",
			"10": "../../../../packages/core/utils/src/user/index.ts"
		},
		"reflections": {
			"1": 16617,
			"2": 16626,
			"3": 16727,
			"4": 16805,
			"5": 16807,
			"6": 16831,
			"7": 16857,
			"8": 16864,
			"9": 16903,
			"10": 16908
		}
	}
}