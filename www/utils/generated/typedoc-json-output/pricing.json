{
	"id": 7903,
	"name": "pricing",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 8177,
			"name": "FindConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object that is used to configure how an entity is retrieved from the database. It accepts as a typed parameter an "
					},
					{
						"kind": "code",
						"text": "`Entity`"
					},
					{
						"kind": "text",
						"text": " class,\nwhich provides correct typing of field names in its properties."
					}
				]
			},
			"children": [
				{
					"id": 8178,
					"name": "select",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being attribute names of the entity to retrieve in the result."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"target": 8189,
										"name": "Entity",
										"package": "@medusajs/types",
										"qualifiedName": "FindConfig.Entity",
										"refersToTypeParameter": true
									}
								}
							]
						}
					}
				},
				{
					"id": 8179,
					"name": "skip",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A number indicating the number of records to skip before retrieving the results."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 8180,
					"name": "take",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A number indicating the number of records to return in the result."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 8181,
					"name": "relations",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being relation names of the entity to retrieve in the result."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 8182,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to specify how to sort the returned records. Its keys are the names of attributes of the entity, and a key's value can either be "
							},
							{
								"kind": "code",
								"text": "`ASC`"
							},
							{
								"kind": "text",
								"text": "\nto sort retrieved records in an ascending order, or "
							},
							{
								"kind": "code",
								"text": "`DESC`"
							},
							{
								"kind": "text",
								"text": " to sort retrieved records in a descending order."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 8183,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"indexSignatures": [
								{
									"id": 8184,
									"name": "__index",
									"variant": "signature",
									"kind": 8192,
									"flags": {},
									"parameters": [
										{
											"id": 8185,
											"name": "K",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "ASC"
											},
											{
												"type": "literal",
												"value": "DESC"
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 8186,
					"name": "withDeleted",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean indicating whether deleted records should also be retrieved as part of the result. This only works if the entity extends the\n"
							},
							{
								"kind": "code",
								"text": "`SoftDeletableEntity`"
							},
							{
								"kind": "text",
								"text": " class."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 8187,
					"name": "filters",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Enable ORM specific defined filters"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 8188,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Enable ORM specific defined options"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8178,
						8179,
						8180,
						8181,
						8182,
						8186,
						8187,
						8188
					]
				}
			],
			"typeParameters": [
				{
					"id": 8189,
					"name": "Entity",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 8420,
			"name": "BaseFilterable",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object used to allow specifying flexible queries with and/or conditions."
					}
				]
			},
			"children": [
				{
					"id": 8421,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 8420,
									"typeArguments": [
										{
											"type": "reference",
											"target": 8423,
											"name": "T",
											"package": "@medusajs/types",
											"qualifiedName": "BaseFilterable.T",
											"refersToTypeParameter": true
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 8423,
									"name": "T",
									"package": "@medusajs/types",
									"qualifiedName": "BaseFilterable.T",
									"refersToTypeParameter": true
								}
							]
						}
					}
				},
				{
					"id": 8422,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 8420,
									"typeArguments": [
										{
											"type": "reference",
											"target": 8423,
											"name": "T",
											"package": "@medusajs/types",
											"qualifiedName": "BaseFilterable.T",
											"refersToTypeParameter": true
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 8423,
									"name": "T",
									"package": "@medusajs/types",
									"qualifiedName": "BaseFilterable.T",
									"refersToTypeParameter": true
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8421,
						8422
					]
				}
			],
			"typeParameters": [
				{
					"id": 8423,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 8195,
					"name": "FilterablePriceSetProps"
				},
				{
					"type": "reference",
					"target": 8227,
					"name": "FilterableRuleTypeProps"
				},
				{
					"type": "reference",
					"target": 8243,
					"name": "FilterablePriceProps"
				},
				{
					"type": "reference",
					"target": 8283,
					"name": "FilterablePriceRuleProps"
				},
				{
					"type": "reference",
					"target": 8318,
					"name": "FilterablePriceListProps"
				},
				{
					"type": "reference",
					"target": 8352,
					"name": "FilterablePriceListRuleProps"
				},
				{
					"type": "reference",
					"target": 8424,
					"name": "FilterableMoneyAmountProps"
				}
			]
		},
		{
			"id": 8264,
			"name": "SoftDeleteReturn",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
					}
				]
			},
			"children": [
				{
					"id": 8265,
					"name": "returnLinkableKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being the ID attribute names of the entity's relations."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 8266,
							"name": "TReturnableLinkableKeys",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8265
					]
				}
			],
			"typeParameters": [
				{
					"id": 8266,
					"name": "TReturnableLinkableKeys",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 8267,
			"name": "RestoreReturn",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object that is used to specify an entity's related entities that should be restored when the main entity is restored."
					}
				]
			},
			"children": [
				{
					"id": 8268,
					"name": "returnLinkableKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being the ID attribute names of the entity's relations."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 8269,
							"name": "TReturnableLinkableKeys",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8268
					]
				}
			],
			"typeParameters": [
				{
					"id": 8269,
					"name": "TReturnableLinkableKeys",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 8536,
			"name": "Query",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 8537,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 8537,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "intrinsic",
					"name": "object"
				},
				"trueType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 8537,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reference",
						"target": 8564,
						"name": "Scalar",
						"package": "@medusajs/types"
					},
					"trueType": {
						"type": "intrinsic",
						"name": "never"
					},
					"falseType": {
						"type": "reference",
						"target": 8568,
						"typeArguments": [
							{
								"type": "reference",
								"target": 8537,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "FilterQuery",
						"package": "@medusajs/types"
					}
				},
				"falseType": {
					"type": "reference",
					"target": 8574,
					"typeArguments": [
						{
							"type": "reference",
							"target": 8537,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "FilterValue",
					"package": "@medusajs/types"
				}
			}
		},
		{
			"id": 8538,
			"name": "ExpandScalar",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 8539,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": null
					},
					{
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 8539,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "intrinsic",
							"name": "string"
						},
						"trueType": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "RegExp"
									},
									"name": "RegExp",
									"package": "typescript"
								}
							]
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 8539,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							},
							"trueType": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"falseType": {
								"type": "reference",
								"target": 8539,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					}
				]
			}
		},
		{
			"id": 8564,
			"name": "Scalar",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "intrinsic",
						"name": "boolean"
					},
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "intrinsic",
						"name": "bigint"
					},
					{
						"type": "intrinsic",
						"name": "symbol"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "RegExp"
						},
						"name": "RegExp",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/node/buffer.d.ts",
							"qualifiedName": "__global.Buffer"
						},
						"name": "Buffer",
						"package": "@types/node",
						"qualifiedName": "__global.Buffer"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 8565,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 8566,
									"name": "toHexString",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"signatures": [
										{
											"id": 8567,
											"name": "toHexString",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"children": [
										8566
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 8592,
			"name": "ReadonlyPrimary",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 8593,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 8593,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "array",
					"elementType": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				"trueType": {
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Readonly"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": 8593,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "Readonly",
					"package": "typescript"
				},
				"falseType": {
					"type": "reference",
					"target": 8593,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				}
			}
		},
		{
			"id": 8582,
			"name": "Primary",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 8591,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 8591,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "reflection",
					"declaration": {
						"id": 8583,
						"name": "__type",
						"variant": "declaration",
						"kind": 65536,
						"flags": {},
						"children": [
							{
								"id": 8584,
								"name": "[PrimaryKeyType]",
								"variant": "declaration",
								"kind": 1024,
								"flags": {
									"isOptional": true
								},
								"type": {
									"type": "inferred",
									"name": "PK"
								}
							}
						],
						"groups": [
							{
								"title": "Properties",
								"children": [
									8584
								]
							}
						]
					}
				},
				"trueType": {
					"type": "reference",
					"target": 8592,
					"typeArguments": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
								"qualifiedName": "PK"
							},
							"name": "PK",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "ReadonlyPrimary",
					"package": "@medusajs/types"
				},
				"falseType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 8591,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reflection",
						"declaration": {
							"id": 8585,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 8586,
									"name": "_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "inferred",
										"name": "PK"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										8586
									]
								}
							]
						}
					},
					"trueType": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 8592,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
											"qualifiedName": "PK"
										},
										"name": "PK",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ReadonlyPrimary",
								"package": "@medusajs/types"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"falseType": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 8591,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "reflection",
							"declaration": {
								"id": 8587,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 8588,
										"name": "uuid",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"type": {
											"type": "inferred",
											"name": "PK"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											8588
										]
									}
								]
							}
						},
						"trueType": {
							"type": "reference",
							"target": 8592,
							"typeArguments": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
										"qualifiedName": "PK"
									},
									"name": "PK",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "ReadonlyPrimary",
							"package": "@medusajs/types"
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 8591,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reflection",
								"declaration": {
									"id": 8589,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 8590,
											"name": "id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "inferred",
												"name": "PK"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												8590
											]
										}
									]
								}
							},
							"trueType": {
								"type": "reference",
								"target": 8592,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
											"qualifiedName": "PK"
										},
										"name": "PK",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ReadonlyPrimary",
								"package": "@medusajs/types"
							},
							"falseType": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					}
				}
			}
		},
		{
			"id": 8438,
			"name": "OperatorMap",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 8459,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 8439,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 8440,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 8536,
									"typeArguments": [
										{
											"type": "reference",
											"target": 8459,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "Query",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 8441,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 8536,
									"typeArguments": [
										{
											"type": "reference",
											"target": 8459,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "Query",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 8442,
							"name": "$eq",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 8538,
										"typeArguments": [
											{
												"type": "reference",
												"target": 8459,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "ExpandScalar",
										"package": "@medusajs/types"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8538,
											"typeArguments": [
												{
													"type": "reference",
													"target": 8459,
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "ExpandScalar",
											"package": "@medusajs/types"
										}
									}
								]
							}
						},
						{
							"id": 8443,
							"name": "$ne",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 8538,
								"typeArguments": [
									{
										"type": "reference",
										"target": 8459,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 8444,
							"name": "$in",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 8538,
									"typeArguments": [
										{
											"type": "reference",
											"target": 8459,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "ExpandScalar",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 8445,
							"name": "$nin",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 8538,
									"typeArguments": [
										{
											"type": "reference",
											"target": 8459,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "ExpandScalar",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 8446,
							"name": "$not",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 8536,
								"typeArguments": [
									{
										"type": "reference",
										"target": 8459,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "Query",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 8447,
							"name": "$gt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 8538,
								"typeArguments": [
									{
										"type": "reference",
										"target": 8459,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 8448,
							"name": "$gte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 8538,
								"typeArguments": [
									{
										"type": "reference",
										"target": 8459,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 8449,
							"name": "$lt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 8538,
								"typeArguments": [
									{
										"type": "reference",
										"target": 8459,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 8450,
							"name": "$lte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 8538,
								"typeArguments": [
									{
										"type": "reference",
										"target": 8459,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 8451,
							"name": "$like",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 8452,
							"name": "$re",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 8453,
							"name": "$ilike",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 8454,
							"name": "$fulltext",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 8455,
							"name": "$overlap",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 8456,
							"name": "$contains",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 8457,
							"name": "$contained",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 8458,
							"name": "$exists",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								8440,
								8441,
								8442,
								8443,
								8444,
								8445,
								8446,
								8447,
								8448,
								8449,
								8450,
								8451,
								8452,
								8453,
								8454,
								8455,
								8456,
								8457,
								8458
							]
						}
					]
				}
			}
		},
		{
			"id": 8580,
			"name": "FilterValue2",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 8581,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 8581,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					{
						"type": "reference",
						"target": 8538,
						"typeArguments": [
							{
								"type": "reference",
								"target": 8581,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "ExpandScalar",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 8582,
						"typeArguments": [
							{
								"type": "reference",
								"target": 8581,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "Primary",
						"package": "@medusajs/types"
					}
				]
			}
		},
		{
			"id": 8574,
			"name": "FilterValue",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 8575,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 8438,
						"typeArguments": [
							{
								"type": "reference",
								"target": 8580,
								"typeArguments": [
									{
										"type": "reference",
										"target": 8575,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "FilterValue2",
								"package": "@medusajs/types"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 8580,
						"typeArguments": [
							{
								"type": "reference",
								"target": 8575,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "FilterValue2",
						"package": "@medusajs/types"
					},
					{
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 8580,
							"typeArguments": [
								{
									"type": "reference",
									"target": 8575,
									"name": "T",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "FilterValue2",
							"package": "@medusajs/types"
						}
					},
					{
						"type": "literal",
						"value": null
					}
				]
			}
		},
		{
			"id": 8579,
			"name": "PrevLimit",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "tuple",
				"elements": [
					{
						"type": "intrinsic",
						"name": "never"
					},
					{
						"type": "literal",
						"value": 1
					},
					{
						"type": "literal",
						"value": 2
					},
					{
						"type": "literal",
						"value": 3
					}
				]
			}
		},
		{
			"id": 8568,
			"name": "FilterQuery",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 8572,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 8573,
					"name": "Prev",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"default": {
						"type": "literal",
						"value": 3
					}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 8573,
					"name": "Prev",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "intrinsic",
					"name": "never"
				},
				"trueType": {
					"type": "intrinsic",
					"name": "never"
				},
				"falseType": {
					"type": "mapped",
					"parameter": "Key",
					"parameterType": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "reference",
							"target": 8572,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					},
					"templateType": {
						"type": "conditional",
						"checkType": {
							"type": "indexedAccess",
							"indexType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
									"qualifiedName": "Key"
								},
								"name": "Key",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"objectType": {
								"type": "reference",
								"target": 8572,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						},
						"extendsType": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "boolean"
								},
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "intrinsic",
									"name": "bigint"
								},
								{
									"type": "intrinsic",
									"name": "symbol"
								},
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Date"
									},
									"name": "Date",
									"package": "typescript"
								}
							]
						},
						"trueType": {
							"type": "union",
							"types": [
								{
									"type": "indexedAccess",
									"indexType": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
											"qualifiedName": "Key"
										},
										"name": "Key",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"objectType": {
										"type": "reference",
										"target": 8572,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								{
									"type": "reference",
									"target": 8438,
									"typeArguments": [
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
													"qualifiedName": "Key"
												},
												"name": "Key",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": 8572,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										}
									],
									"name": "OperatorMap",
									"package": "@medusajs/types"
								}
							]
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "indexedAccess",
								"indexType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
										"qualifiedName": "Key"
									},
									"name": "Key",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"objectType": {
									"type": "reference",
									"target": 8572,
									"name": "T",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							},
							"extendsType": {
								"type": "inferred",
								"name": "U"
							},
							"trueType": {
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
										"qualifiedName": "U"
									},
									"name": "U",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"extendsType": {
									"type": "reflection",
									"declaration": {
										"id": 8569,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"indexSignatures": [
											{
												"id": 8570,
												"name": "__index",
												"variant": "signature",
												"kind": 8192,
												"flags": {},
												"parameters": [
													{
														"id": 8571,
														"name": "x",
														"variant": "param",
														"kind": 32768,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "number"
														}
													}
												],
												"type": {
													"type": "inferred",
													"name": "V"
												}
											}
										]
									}
								},
								"trueType": {
									"type": "conditional",
									"checkType": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
											"qualifiedName": "V"
										},
										"name": "V",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"extendsType": {
										"type": "intrinsic",
										"name": "object"
									},
									"trueType": {
										"type": "reference",
										"target": 8568,
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Partial"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
															"qualifiedName": "V"
														},
														"name": "V",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "Partial",
												"package": "typescript"
											},
											{
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": 8573,
													"name": "Prev",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": 8579,
													"name": "PrevLimit",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "FilterQuery",
										"package": "@medusajs/types"
									},
									"falseType": {
										"type": "intrinsic",
										"name": "never"
									}
								},
								"falseType": {
									"type": "intrinsic",
									"name": "never"
								}
							},
							"falseType": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					},
					"optionalModifier": "+"
				}
			}
		},
		{
			"id": 8576,
			"name": "EventMetadata",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 8577,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 8578,
									"name": "eventGroupId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										8578
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 8558,
			"name": "MessageBody",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 8563,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 8559,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 8560,
							"name": "eventName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 8561,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 8576,
								"name": "EventMetadata",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 8562,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 8563,
								"name": "TData",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								8560,
								8561,
								8562
							]
						}
					]
				}
			}
		},
		{
			"id": 8509,
			"name": "Message",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 8512,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 8558,
						"typeArguments": [
							{
								"type": "reference",
								"target": 8512,
								"name": "TData",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "MessageBody",
						"package": "@medusajs/types"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 8510,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 8511,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										8511
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 8519,
			"name": "RawMessageFormat",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 8528,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 8520,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 8521,
							"name": "eventName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 8522,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 8528,
								"name": "TData",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 8523,
							"name": "source",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 8524,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 8525,
							"name": "action",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 8526,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Pick"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 8144,
										"name": "Context",
										"package": "@medusajs/types"
									},
									{
										"type": "literal",
										"value": "eventGroupId"
									}
								],
								"name": "Pick",
								"package": "typescript"
							}
						},
						{
							"id": 8527,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								8521,
								8522,
								8523,
								8524,
								8525,
								8526,
								8527
							]
						}
					]
				}
			}
		},
		{
			"id": 8549,
			"name": "JoinerRelationship",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 8550,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 8551,
							"name": "alias",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 8552,
							"name": "foreignKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 8553,
							"name": "primaryKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 8554,
							"name": "serviceName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 8555,
							"name": "inverse",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "In an inverted relationship the foreign key is on the other service and the primary key is on the current service"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 8556,
							"name": "isList",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Force the relationship to return a list"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 8557,
							"name": "args",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Extra arguments to pass to the remoteFetchData callback"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								8551,
								8552,
								8553,
								8554,
								8555,
								8556,
								8557
							]
						}
					]
				}
			}
		},
		{
			"id": 8546,
			"name": "JoinerServiceConfigAlias",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 8547,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 8548,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8547,
						8548
					]
				}
			]
		},
		{
			"id": 8481,
			"name": "JoinerServiceConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 8482,
					"name": "serviceName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8483,
					"name": "alias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Property name to use as entrypoint to the service"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 8546,
								"name": "JoinerServiceConfigAlias",
								"package": "@medusajs/types"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 8546,
									"name": "JoinerServiceConfigAlias",
									"package": "@medusajs/types"
								}
							}
						]
					}
				},
				{
					"id": 8484,
					"name": "fieldAlias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "alias for deeper nested relationships (e.g. { 'price': 'prices.calculated_price_set.amount' })"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 8485,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 8486,
													"name": "path",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 8487,
													"name": "forwardArgumentsOnPath",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														8486,
														8487
													]
												}
											]
										}
									}
								]
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 8488,
					"name": "primaryKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 8489,
					"name": "relationships",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 8549,
							"name": "JoinerRelationship",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 8490,
					"name": "extends",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 8491,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 8492,
										"name": "serviceName",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 8493,
										"name": "relationship",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "reference",
											"target": 8549,
											"name": "JoinerRelationship",
											"package": "@medusajs/types"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											8492,
											8493
										]
									}
								]
							}
						}
					}
				},
				{
					"id": 8494,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8482,
						8483,
						8484,
						8488,
						8489,
						8490,
						8494
					]
				}
			]
		},
		{
			"id": 8498,
			"name": "LinkModulesExtraFields",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
					"qualifiedName": "Record"
				},
				"typeArguments": [
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 8499,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 8500,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "date"
											},
											{
												"type": "literal",
												"value": "time"
											},
											{
												"type": "literal",
												"value": "datetime"
											},
											{
												"type": "literal",
												"value": "bigint"
											},
											{
												"type": "literal",
												"value": "blob"
											},
											{
												"type": "literal",
												"value": "uint8array"
											},
											{
												"type": "literal",
												"value": "array"
											},
											{
												"type": "literal",
												"value": "enumArray"
											},
											{
												"type": "literal",
												"value": "enum"
											},
											{
												"type": "literal",
												"value": "json"
											},
											{
												"type": "literal",
												"value": "integer"
											},
											{
												"type": "literal",
												"value": "smallint"
											},
											{
												"type": "literal",
												"value": "tinyint"
											},
											{
												"type": "literal",
												"value": "mediumint"
											},
											{
												"type": "literal",
												"value": "float"
											},
											{
												"type": "literal",
												"value": "double"
											},
											{
												"type": "literal",
												"value": "boolean"
											},
											{
												"type": "literal",
												"value": "decimal"
											},
											{
												"type": "literal",
												"value": "string"
											},
											{
												"type": "literal",
												"value": "uuid"
											},
											{
												"type": "literal",
												"value": "text"
											}
										]
									}
								},
								{
									"id": 8501,
									"name": "defaultValue",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 8502,
									"name": "nullable",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 8503,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Mikro-orm options for the column"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										8500,
										8501,
										8502,
										8503
									]
								}
							]
						}
					}
				],
				"name": "Record",
				"package": "typescript"
			}
		},
		{
			"id": 8371,
			"name": "ModuleJoinerConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 8481,
								"name": "JoinerServiceConfig",
								"package": "@medusajs/types"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "serviceName"
									},
									{
										"type": "literal",
										"value": "primaryKeys"
									},
									{
										"type": "literal",
										"value": "relationships"
									},
									{
										"type": "literal",
										"value": "extends"
									}
								]
							}
						],
						"name": "Omit",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 8372,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 8373,
									"name": "schema",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "GraphQL schema for the all module's available entities and fields"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 8374,
									"name": "relationships",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8495,
											"name": "ModuleJoinerRelationship",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 8375,
									"name": "extends",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 8376,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 8377,
														"name": "serviceName",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 8378,
														"name": "fieldAlias",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "Record"
															},
															"typeArguments": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "union",
																	"types": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "reflection",
																			"declaration": {
																				"id": 8379,
																				"name": "__type",
																				"variant": "declaration",
																				"kind": 65536,
																				"flags": {},
																				"children": [
																					{
																						"id": 8380,
																						"name": "path",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						}
																					},
																					{
																						"id": 8381,
																						"name": "forwardArgumentsOnPath",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"type": {
																							"type": "array",
																							"elementType": {
																								"type": "intrinsic",
																								"name": "string"
																							}
																						}
																					},
																					{
																						"id": 8382,
																						"name": "isList",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"type": {
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"children": [
																							8380,
																							8381,
																							8382
																						]
																					}
																				]
																			}
																		}
																	]
																}
															],
															"name": "Record",
															"package": "typescript"
														}
													},
													{
														"id": 8383,
														"name": "relationship",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "reference",
															"target": 8495,
															"name": "ModuleJoinerRelationship",
															"package": "@medusajs/types"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															8377,
															8378,
															8383
														]
													}
												]
											}
										}
									}
								},
								{
									"id": 8384,
									"name": "serviceName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 8385,
									"name": "primaryKeys",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 8386,
									"name": "isLink",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If the module is a link module"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 8387,
									"name": "linkableKeys",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Keys that can be used to link to other modules. e.g { product_id: \"Product\" } \"Product\" being the entity it refers to"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 8388,
									"name": "isReadOnlyLink",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true it expands a RemoteQuery property but doesn't create a pivot table"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 8389,
									"name": "extraDataFields",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Fields that will be part of the link record aside from the primary keys that can be updated\nIf not explicitly defined, this array will be populated by databaseConfig.extraFields"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 8390,
									"name": "databaseConfig",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 8391,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 8392,
													"name": "tableName",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Name of the pivot table. If not provided it is auto generated"
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 8393,
													"name": "idPrefix",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Prefix for the id column. If not provided it is \"link\""
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 8394,
													"name": "extraFields",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 8498,
														"name": "LinkModulesExtraFields",
														"package": "@medusajs/types"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														8392,
														8393,
														8394
													]
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										8373,
										8374,
										8375,
										8384,
										8385,
										8386,
										8387,
										8388,
										8389,
										8390
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 8495,
			"name": "ModuleJoinerRelationship",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 8549,
						"name": "JoinerRelationship",
						"package": "@medusajs/types"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 8496,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 8497,
									"name": "deleteCascade",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true, the link joiner will cascade deleting the relationship"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										8497
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 8126,
			"name": "IModuleService",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"extendedBy": [
				{
					"type": "reference",
					"target": 7904,
					"name": "IPricingModuleService"
				}
			]
		},
		{
			"id": 8411,
			"name": "MoneyAmountDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A money amount's data. A money amount represents a price."
					}
				]
			},
			"children": [
				{
					"id": 8412,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the money amount."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8413,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The currency code of this money amount."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8414,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price of this money amount."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8410,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 8415,
					"name": "min_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The minimum quantity required to be purchased for this price to be applied."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8410,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 8416,
					"name": "max_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum quantity required to be purchased for this price to be applied."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8410,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 8417,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the money_amount was created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 8418,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the money_amount was updated."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 8419,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the money_amount was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8412,
						8413,
						8414,
						8415,
						8416,
						8417,
						8418,
						8419
					]
				}
			]
		},
		{
			"id": 8529,
			"name": "CreateMoneyAmountDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The money amount to create."
					}
				]
			},
			"children": [
				{
					"id": 8530,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the money amount."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8531,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The currency code of this money amount."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8532,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount of this money amount."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8395,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 8533,
					"name": "min_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The minimum quantity required to be purchased for this money amount to be applied."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 8395,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 8534,
					"name": "max_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum quantity required to be purchased for this money amount to be applied."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 8395,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8530,
						8531,
						8532,
						8533,
						8534
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 8429,
					"name": "CreatePricesDTO"
				},
				{
					"type": "reference",
					"target": 8461,
					"name": "CreatePriceListPriceDTO"
				}
			]
		},
		{
			"id": 8540,
			"name": "UpdateMoneyAmountDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The data to update in a money amount. The "
					},
					{
						"kind": "code",
						"text": "`id`"
					},
					{
						"kind": "text",
						"text": " is used to identify which money amount to update."
					}
				]
			},
			"children": [
				{
					"id": 8541,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the money amount to update."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8542,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The code of the currency to associate with the money amount."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 8543,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price of this money amount."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8395,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 8544,
					"name": "min_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The minimum quantity required to be purchased for this money amount to be applied."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 8395,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 8545,
					"name": "max_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum quantity required to be purchased for this money amount to be applied."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 8395,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8541,
						8542,
						8543,
						8544,
						8545
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 8473,
					"name": "UpdatePriceListPriceDTO"
				}
			]
		},
		{
			"id": 8424,
			"name": "FilterableMoneyAmountProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Filters to apply on a money amount."
					}
				]
			},
			"children": [
				{
					"id": 8427,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 8424,
									"name": "FilterableMoneyAmountProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 8420,
									"typeArguments": [
										{
											"type": "reference",
											"target": 8424,
											"name": "FilterableMoneyAmountProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8421,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 8428,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 8424,
									"name": "FilterableMoneyAmountProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 8420,
									"typeArguments": [
										{
											"type": "reference",
											"target": 8424,
											"name": "FilterableMoneyAmountProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8422,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 8425,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "IDs to filter money amounts by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 8426,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Currency codes to filter money amounts by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8427,
						8428,
						8425,
						8426
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 8420,
					"typeArguments": [
						{
							"type": "reference",
							"target": 8424,
							"name": "FilterableMoneyAmountProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 8436,
			"name": "PriceListStatus",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The price list's status."
					}
				]
			},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "active"
					},
					{
						"type": "literal",
						"value": "draft"
					}
				]
			}
		},
		{
			"id": 8437,
			"name": "PriceListType",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The price list's type.\n\"sale\" - The price list's prices are used for a sale.\n\"override\" - The price list's prices override original prices. This affects the calculated price of associated price sets."
					}
				]
			},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "sale"
					},
					{
						"type": "literal",
						"value": "override"
					}
				]
			}
		},
		{
			"id": 8304,
			"name": "PriceListDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A price list's details."
					}
				]
			},
			"children": [
				{
					"id": 8305,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8306,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list's title."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8307,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list's description."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8308,
					"name": "starts_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list is enabled starting from this date."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 8309,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list's status."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8436,
						"name": "PriceListStatus",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 8310,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list's type."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8437,
						"name": "PriceListType",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 8311,
					"name": "ends_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list expires after this date."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 8312,
					"name": "rules_count",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of rules associated with this price list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 8313,
					"name": "prices",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated price set money amounts."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 8250,
							"name": "PriceDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 8314,
					"name": "money_amounts",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated money amounts."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 8411,
							"name": "MoneyAmountDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 8315,
					"name": "rule_types",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated rule types."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 8220,
							"name": "RuleTypeDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 8316,
					"name": "rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price set's rules."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 8346,
							"name": "PriceListRuleDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 8317,
					"name": "price_list_rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price set's rules."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 8346,
							"name": "PriceListRuleDTO",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8305,
						8306,
						8307,
						8308,
						8309,
						8310,
						8311,
						8312,
						8313,
						8314,
						8315,
						8316,
						8317
					]
				}
			]
		},
		{
			"id": 8461,
			"name": "CreatePriceListPriceDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The prices associated with a price list."
					}
				]
			},
			"children": [
				{
					"id": 8464,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the money amount."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8530,
						"name": "CreateMoneyAmountDTO.id"
					}
				},
				{
					"id": 8465,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The currency code of this money amount."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8531,
						"name": "CreateMoneyAmountDTO.currency_code"
					}
				},
				{
					"id": 8466,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount of this money amount."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8395,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8532,
						"name": "CreateMoneyAmountDTO.amount"
					}
				},
				{
					"id": 8467,
					"name": "min_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The minimum quantity required to be purchased for this money amount to be applied."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 8395,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8533,
						"name": "CreateMoneyAmountDTO.min_quantity"
					}
				},
				{
					"id": 8468,
					"name": "max_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum quantity required to be purchased for this money amount to be applied."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 8395,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8534,
						"name": "CreateMoneyAmountDTO.max_quantity"
					}
				},
				{
					"id": 8462,
					"name": "price_set_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated price set."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8463,
					"name": "rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rules to add to the price. The object's keys are rule types' "
							},
							{
								"kind": "code",
								"text": "`rule_attribute`"
							},
							{
								"kind": "text",
								"text": " attribute, and values are the value of that rule associated with this price."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8535,
						"name": "CreatePriceSetPriceRules",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8464,
						8465,
						8466,
						8467,
						8468,
						8462,
						8463
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 8529,
					"name": "CreateMoneyAmountDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 8473,
			"name": "UpdatePriceListPriceDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The data to update in a money amount. The "
					},
					{
						"kind": "code",
						"text": "`id`"
					},
					{
						"kind": "text",
						"text": " is used to identify which money amount to update."
					}
				]
			},
			"children": [
				{
					"id": 8476,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the money amount to update."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8541,
						"name": "UpdateMoneyAmountDTO.id"
					}
				},
				{
					"id": 8477,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The code of the currency to associate with the money amount."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8542,
						"name": "UpdateMoneyAmountDTO.currency_code"
					}
				},
				{
					"id": 8478,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price of this money amount."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8395,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8543,
						"name": "UpdateMoneyAmountDTO.amount"
					}
				},
				{
					"id": 8479,
					"name": "min_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The minimum quantity required to be purchased for this money amount to be applied."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 8395,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8544,
						"name": "UpdateMoneyAmountDTO.min_quantity"
					}
				},
				{
					"id": 8480,
					"name": "max_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum quantity required to be purchased for this money amount to be applied."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 8395,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8545,
						"name": "UpdateMoneyAmountDTO.max_quantity"
					}
				},
				{
					"id": 8474,
					"name": "price_set_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated price set."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8475,
					"name": "rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rules to add to the price. The object's keys are rule types' "
							},
							{
								"kind": "code",
								"text": "`rule_attribute`"
							},
							{
								"kind": "text",
								"text": " attribute, and values are the value of that rule associated with this price."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8535,
						"name": "CreatePriceSetPriceRules",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8476,
						8477,
						8478,
						8479,
						8480,
						8474,
						8475
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 8540,
					"name": "UpdateMoneyAmountDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 8535,
			"name": "CreatePriceSetPriceRules",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The price rules to be set for each price in the price set.\n\nEach key of the object is a rule type's "
					},
					{
						"kind": "code",
						"text": "`rule_attribute`"
					},
					{
						"kind": "text",
						"text": ", and its value\nis the values of the rule."
					}
				]
			},
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Record"
					},
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "string"
						},
						{
							"type": "intrinsic",
							"name": "string"
						}
					],
					"name": "Record",
					"package": "typescript"
				}
			]
		},
		{
			"id": 8460,
			"name": "CreatePriceListRules",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The price list's rules to be set. Each key of the object is a rule type's "
					},
					{
						"kind": "code",
						"text": "`rule_attribute`"
					},
					{
						"kind": "text",
						"text": ", and its value\nis the values of the rule."
					}
				]
			},
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Record"
					},
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "string"
						},
						{
							"type": "array",
							"elementType": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"name": "Record",
					"package": "typescript"
				}
			]
		},
		{
			"id": 8327,
			"name": "CreatePriceListDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The price list to create."
					}
				]
			},
			"children": [
				{
					"id": 8328,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list's title."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8329,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list's description."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8330,
					"name": "starts_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list is enabled starting from this date."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 8331,
					"name": "ends_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list expires after this date."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 8332,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list's status."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8436,
						"name": "PriceListStatus",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 8333,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list's type."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8437,
						"name": "PriceListType",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 8334,
					"name": "rules_count",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of rules associated with the price list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 8335,
					"name": "rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rules to be created and associated with the price list."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8460,
						"name": "CreatePriceListRules",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 8336,
					"name": "prices",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The prices associated with the price list."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 8461,
							"name": "CreatePriceListPriceDTO",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8328,
						8329,
						8330,
						8331,
						8332,
						8333,
						8334,
						8335,
						8336
					]
				}
			]
		},
		{
			"id": 8337,
			"name": "UpdatePriceListDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes to update in a price list."
					}
				]
			},
			"children": [
				{
					"id": 8338,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the price list to update."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8339,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list's title."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8340,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list's description."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 8341,
					"name": "starts_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list is enabled starting from this date."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 8342,
					"name": "ends_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list expires after this date."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 8343,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list's status."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8436,
						"name": "PriceListStatus",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 8344,
					"name": "rules_count",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of rules associated with the price list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 8345,
					"name": "rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rules to be created and associated with the price list."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8460,
						"name": "CreatePriceListRules",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8338,
						8339,
						8340,
						8341,
						8342,
						8343,
						8344,
						8345
					]
				}
			]
		},
		{
			"id": 8318,
			"name": "FilterablePriceListProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Filters to apply on price lists."
					}
				]
			},
			"children": [
				{
					"id": 8325,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 8318,
									"name": "FilterablePriceListProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 8420,
									"typeArguments": [
										{
											"type": "reference",
											"target": 8318,
											"name": "FilterablePriceListProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8421,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 8326,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 8318,
									"name": "FilterablePriceListProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 8420,
									"typeArguments": [
										{
											"type": "reference",
											"target": 8318,
											"name": "FilterablePriceListProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8422,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 8319,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Find price lists by title or description through this search term."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8320,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter price lists by"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 8321,
					"name": "starts_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The start dates to filter price lists by."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8438,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 8322,
					"name": "ends_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The end dates to filter price lists by."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8438,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 8323,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The statuses to filter price lists by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 8436,
							"name": "PriceListStatus",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 8324,
					"name": "rules_count",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of rules to filter price lists by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "number"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8325,
						8326,
						8319,
						8320,
						8321,
						8322,
						8323,
						8324
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 8420,
					"typeArguments": [
						{
							"type": "reference",
							"target": 8318,
							"name": "FilterablePriceListProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 8352,
			"name": "FilterablePriceListRuleProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Filters to apply on price list rules."
					}
				]
			},
			"children": [
				{
					"id": 8357,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 8352,
									"name": "FilterablePriceListRuleProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 8420,
									"typeArguments": [
										{
											"type": "reference",
											"target": 8352,
											"name": "FilterablePriceListRuleProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8421,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 8358,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 8352,
									"name": "FilterablePriceListRuleProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 8420,
									"typeArguments": [
										{
											"type": "reference",
											"target": 8352,
											"name": "FilterablePriceListRuleProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8422,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 8353,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter price list rules by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 8354,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The values to filter price list rules by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 8355,
					"name": "rule_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter price list rules by the ID of their associated rule types."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 8356,
					"name": "price_list_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter price list rules by the ID of their associated price lists."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8357,
						8358,
						8353,
						8354,
						8355,
						8356
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 8420,
					"typeArguments": [
						{
							"type": "reference",
							"target": 8352,
							"name": "FilterablePriceListRuleProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 8346,
			"name": "PriceListRuleDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The price list rule's details."
					}
				]
			},
			"children": [
				{
					"id": 8347,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list rule's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8348,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the rule."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8349,
					"name": "rule_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated rule type."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 8220,
						"name": "RuleTypeDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 8350,
					"name": "price_list",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated price list."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 8304,
						"name": "PriceListDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 8351,
					"name": "price_list_rule_values",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated rule values."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 8469,
							"name": "PriceListRuleValueDTO",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8347,
						8348,
						8349,
						8350,
						8351
					]
				}
			]
		},
		{
			"id": 8469,
			"name": "PriceListRuleValueDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The price list rule value's details."
					}
				]
			},
			"children": [
				{
					"id": 8470,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list rule value's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8471,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rule's value."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8472,
					"name": "price_list_rule",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated price list rule."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 8346,
						"name": "PriceListRuleDTO",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8470,
						8471,
						8472
					]
				}
			]
		},
		{
			"id": 8359,
			"name": "AddPriceListPricesDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The prices to be added to a price list."
					}
				]
			},
			"children": [
				{
					"id": 8360,
					"name": "price_list_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the price list to add prices to."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8361,
					"name": "prices",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The prices to add."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 8461,
							"name": "CreatePriceListPriceDTO",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8360,
						8361
					]
				}
			]
		},
		{
			"id": 8362,
			"name": "UpdatePriceListPricesDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The prices to be added to a price list."
					}
				]
			},
			"children": [
				{
					"id": 8363,
					"name": "price_list_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the price list to add prices to."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8364,
					"name": "prices",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The prices to add."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 8473,
							"name": "UpdatePriceListPriceDTO",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8363,
						8364
					]
				}
			]
		},
		{
			"id": 8365,
			"name": "SetPriceListRulesDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The rules to set in a price list."
					}
				]
			},
			"children": [
				{
					"id": 8366,
					"name": "price_list_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the price list to set its rules."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8367,
					"name": "rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rules to add to the price list. Each key of the object is a rule type's "
							},
							{
								"kind": "code",
								"text": "`rule_attribute`"
							},
							{
								"kind": "text",
								"text": ", and its value\nis the value(s) of the rule."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8366,
						8367
					]
				}
			]
		},
		{
			"id": 8368,
			"name": "RemovePriceListRulesDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The rules to remove from a price list."
					}
				]
			},
			"children": [
				{
					"id": 8369,
					"name": "price_list_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the price list to remove rules from."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8370,
					"name": "rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rules to remove from the price list. Each item being a rule type's "
							},
							{
								"kind": "code",
								"text": "`rule_attribute`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8369,
						8370
					]
				}
			]
		},
		{
			"id": 8270,
			"name": "PriceRuleDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A price rule's data."
					}
				]
			},
			"children": [
				{
					"id": 8271,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the price rule."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8272,
					"name": "price_set_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated price set."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8273,
					"name": "price_set",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated price set."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 8190,
						"name": "PriceSetDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 8274,
					"name": "rule_type_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated rule type."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8275,
					"name": "rule_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated rule type."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 8220,
						"name": "RuleTypeDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 8276,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the price rule."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8277,
					"name": "priority",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The priority of the price rule in comparison to other applicable price rules."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 8278,
					"name": "price_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated price."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8279,
					"name": "price_list_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated price list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8280,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the price_rule was created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 8281,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the price_rule was updated."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 8282,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the price_rule was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8271,
						8272,
						8273,
						8274,
						8275,
						8276,
						8277,
						8278,
						8279,
						8280,
						8281,
						8282
					]
				}
			]
		},
		{
			"id": 8290,
			"name": "CreatePriceRuleDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A price rule to create."
					}
				]
			},
			"children": [
				{
					"id": 8291,
					"name": "price_set_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated price set."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8292,
					"name": "rule_type_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated rule type."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8293,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the price rule."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8294,
					"name": "priority",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The priority of the price rule in comparison to other applicable price rules."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 8295,
					"name": "price_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated price."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8291,
						8292,
						8293,
						8294,
						8295
					]
				}
			]
		},
		{
			"id": 8296,
			"name": "UpdatePriceRuleDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The data to update in a price rule. The "
					},
					{
						"kind": "code",
						"text": "`id`"
					},
					{
						"kind": "text",
						"text": " is used to identify which price rule to update."
					}
				]
			},
			"children": [
				{
					"id": 8297,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8298,
					"name": "price_set_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8299,
					"name": "rule_type_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8300,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the price rule."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8301,
					"name": "priority",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The priority of the price rule in comparison to other applicable price rules."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 8302,
					"name": "price_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated price."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8303,
					"name": "price_list_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated price list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8297,
						8298,
						8299,
						8300,
						8301,
						8302,
						8303
					]
				}
			]
		},
		{
			"id": 8283,
			"name": "FilterablePriceRuleProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Filters to apply on price rules."
					}
				]
			},
			"children": [
				{
					"id": 8288,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 8283,
									"name": "FilterablePriceRuleProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 8420,
									"typeArguments": [
										{
											"type": "reference",
											"target": 8283,
											"name": "FilterablePriceRuleProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8421,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 8289,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 8283,
									"name": "FilterablePriceRuleProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 8420,
									"typeArguments": [
										{
											"type": "reference",
											"target": 8283,
											"name": "FilterablePriceRuleProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8422,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 8284,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter price rules by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 8285,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The names to filter price rules by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 8286,
					"name": "price_set_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the price rule's associated price set."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 8287,
					"name": "rule_type_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the price rule's associated rule type."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8288,
						8289,
						8284,
						8285,
						8286,
						8287
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 8420,
					"typeArguments": [
						{
							"type": "reference",
							"target": 8283,
							"name": "FilterablePriceRuleProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 8142,
			"name": "PricingContext",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The context to calculate prices. For example, you can specify the currency code to calculate prices in."
					}
				]
			},
			"children": [
				{
					"id": 8143,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "an object whose keys are the name of the context attribute. Its value can be a string or a BigNumberInput. For example, you can pass the "
							},
							{
								"kind": "code",
								"text": "`currency_code`"
							},
							{
								"kind": "text",
								"text": " property with its value being the currency code to calculate the price in.\nAnother example is passing the "
							},
							{
								"kind": "code",
								"text": "`quantity`"
							},
							{
								"kind": "text",
								"text": " property to calculate the price for that specified quantity, which finds a price set whose "
							},
							{
								"kind": "code",
								"text": "`min_quantity`"
							},
							{
								"kind": "text",
								"text": " and "
							},
							{
								"kind": "code",
								"text": "`max_quantity`"
							},
							{
								"kind": "text",
								"text": " conditions match the specified quantity."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 8395,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8143
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 8195,
					"name": "FilterablePriceSetProps"
				}
			]
		},
		{
			"id": 8140,
			"name": "PricingFilters",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Filters to apply when calculating prices."
					}
				]
			},
			"children": [
				{
					"id": 8141,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "IDs of the price sets to use in the\ncalculation."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8141
					]
				}
			]
		},
		{
			"id": 8190,
			"name": "PriceSetDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A price set's data."
					}
				]
			},
			"children": [
				{
					"id": 8191,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the price set."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8192,
					"name": "prices",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The prices that belong to this price set."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 8411,
							"name": "MoneyAmountDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 8193,
					"name": "calculated_price",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The calculated price based on the context."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8156,
						"name": "CalculatedPriceSet",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 8194,
					"name": "rule_types",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rule types applied on this price set."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 8220,
							"name": "RuleTypeDTO",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8191,
						8192,
						8193,
						8194
					]
				}
			]
		},
		{
			"id": 8156,
			"name": "CalculatedPriceSet",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The calculated price for a specific price set and context."
					}
				]
			},
			"children": [
				{
					"id": 8157,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the price set."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8158,
					"name": "is_calculated_price_price_list",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the calculated price is associated with a price list. During the calculation process, if no valid price list is found,\nthe calculated price is set to the original price, which doesn't belong to a price list. In that case, the value of this property is "
							},
							{
								"kind": "code",
								"text": "`false`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 8159,
					"name": "calculated_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount of the calculated price, or "
							},
							{
								"kind": "code",
								"text": "`null`"
							},
							{
								"kind": "text",
								"text": " if there isn't a calculated price."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 8410,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 8160,
					"name": "is_original_price_price_list",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the original price is associated with a price list. During the calculation process, if the price list of the calculated price is of type override,\nthe original price will be the same as the calculated price. In that case, the value of this property is "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 8161,
					"name": "original_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount of the original price, or "
							},
							{
								"kind": "code",
								"text": "`null`"
							},
							{
								"kind": "text",
								"text": " if there isn't a calculated price."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 8410,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 8162,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The currency code of the calculated price, or null if there isn't a calculated price."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 8163,
					"name": "calculated_price",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the calculated price."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 8164,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 8165,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the price selected as the calculated price."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 8166,
									"name": "price_list_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the associated price list, if any."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 8167,
									"name": "price_list_type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The type of the associated price list, if any."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 8168,
									"name": "min_quantity",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`min_quantity`"
											},
											{
												"kind": "text",
												"text": " field defined on a price."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": 8410,
												"name": "BigNumberValue",
												"package": "@medusajs/types"
											}
										]
									}
								},
								{
									"id": 8169,
									"name": "max_quantity",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`max_quantity`"
											},
											{
												"kind": "text",
												"text": " field defined on a price."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": 8410,
												"name": "BigNumberValue",
												"package": "@medusajs/types"
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										8165,
										8166,
										8167,
										8168,
										8169
									]
								}
							]
						}
					}
				},
				{
					"id": 8170,
					"name": "original_price",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the original price."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 8171,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 8172,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the price selected as the original price."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 8173,
									"name": "price_list_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the associated price list, if any."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 8174,
									"name": "price_list_type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The type of the associated price list, if any."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 8175,
									"name": "min_quantity",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`min_quantity`"
											},
											{
												"kind": "text",
												"text": " field defined on a price."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": 8410,
												"name": "BigNumberValue",
												"package": "@medusajs/types"
											}
										]
									}
								},
								{
									"id": 8176,
									"name": "max_quantity",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`max_quantity`"
											},
											{
												"kind": "text",
												"text": " field defined on a price."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": 8410,
												"name": "BigNumberValue",
												"package": "@medusajs/types"
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										8172,
										8173,
										8174,
										8175,
										8176
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8157,
						8158,
						8159,
						8160,
						8161,
						8162,
						8163,
						8170
					]
				}
			]
		},
		{
			"id": 8429,
			"name": "CreatePricesDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The prices to create part of a price set."
					}
				]
			},
			"children": [
				{
					"id": 8431,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the money amount."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8530,
						"name": "CreateMoneyAmountDTO.id"
					}
				},
				{
					"id": 8432,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The currency code of this money amount."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8531,
						"name": "CreateMoneyAmountDTO.currency_code"
					}
				},
				{
					"id": 8433,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount of this money amount."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8395,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8532,
						"name": "CreateMoneyAmountDTO.amount"
					}
				},
				{
					"id": 8434,
					"name": "min_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The minimum quantity required to be purchased for this money amount to be applied."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 8395,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8533,
						"name": "CreateMoneyAmountDTO.min_quantity"
					}
				},
				{
					"id": 8435,
					"name": "max_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum quantity required to be purchased for this money amount to be applied."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 8395,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8534,
						"name": "CreateMoneyAmountDTO.max_quantity"
					}
				},
				{
					"id": 8430,
					"name": "rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rules to add to the price. The object's keys are rule types' "
							},
							{
								"kind": "code",
								"text": "`rule_attribute`"
							},
							{
								"kind": "text",
								"text": " attribute, and values are the value of that rule associated with this price."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8535,
						"name": "CreatePriceSetPriceRules",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8431,
						8432,
						8433,
						8434,
						8435,
						8430
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 8529,
					"name": "CreateMoneyAmountDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 8217,
			"name": "AddPricesDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The prices to add to a price set."
					}
				]
			},
			"children": [
				{
					"id": 8218,
					"name": "priceSetId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the price set to add prices to."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8219,
					"name": "prices",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The prices to add to the price set."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 8429,
							"name": "CreatePricesDTO",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8218,
						8219
					]
				}
			]
		},
		{
			"id": 8201,
			"name": "CreatePriceSetDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A price set to create."
					}
				]
			},
			"children": [
				{
					"id": 8202,
					"name": "rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rules to associate with the price set."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 8203,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 8204,
										"name": "rule_attribute",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"comment": {
											"summary": [
												{
													"kind": "text",
													"text": "the value of the rule's "
												},
												{
													"kind": "code",
													"text": "`rule_attribute`"
												},
												{
													"kind": "text",
													"text": " attribute."
												}
											]
										},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											8204
										]
									}
								]
							}
						}
					}
				},
				{
					"id": 8205,
					"name": "prices",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The prices to create and add to this price set."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 8429,
							"name": "CreatePricesDTO",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8202,
						8205
					]
				}
			]
		},
		{
			"id": 8206,
			"name": "UpsertPriceSetDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The data to upsert in a price set."
					}
				]
			},
			"children": [
				{
					"id": 8207,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the price set to update.\nIf not provided, a price set is created."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8208,
					"name": "rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rules to associate with the price set."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 8209,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 8210,
										"name": "rule_attribute",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"comment": {
											"summary": [
												{
													"kind": "text",
													"text": "the value of the rule's "
												},
												{
													"kind": "code",
													"text": "`rule_attribute`"
												},
												{
													"kind": "text",
													"text": " attribute."
												}
											]
										},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											8210
										]
									}
								]
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8213,
						"name": "UpdatePriceSetDTO.rules"
					}
				},
				{
					"id": 8211,
					"name": "prices",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The prices to create and add to this price set."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 8429,
							"name": "CreatePricesDTO",
							"package": "@medusajs/types"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8216,
						"name": "UpdatePriceSetDTO.prices"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8207,
						8208,
						8211
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 8212,
					"name": "UpdatePriceSetDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 8212,
			"name": "UpdatePriceSetDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The data to update in a price set."
					}
				]
			},
			"children": [
				{
					"id": 8213,
					"name": "rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rules to associate with the price set."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 8214,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 8215,
										"name": "rule_attribute",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"comment": {
											"summary": [
												{
													"kind": "text",
													"text": "the value of the rule's "
												},
												{
													"kind": "code",
													"text": "`rule_attribute`"
												},
												{
													"kind": "text",
													"text": " attribute."
												}
											]
										},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											8215
										]
									}
								]
							}
						}
					}
				},
				{
					"id": 8216,
					"name": "prices",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The prices to create and add to this price set."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 8429,
							"name": "CreatePricesDTO",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8213,
						8216
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 8206,
					"name": "UpsertPriceSetDTO"
				}
			]
		},
		{
			"id": 8195,
			"name": "FilterablePriceSetProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Filters to apply on price sets."
					}
				]
			},
			"children": [
				{
					"id": 8198,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 8195,
									"name": "FilterablePriceSetProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 8420,
									"typeArguments": [
										{
											"type": "reference",
											"target": 8195,
											"name": "FilterablePriceSetProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8421,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 8199,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 8195,
									"name": "FilterablePriceSetProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 8420,
									"typeArguments": [
										{
											"type": "reference",
											"target": 8195,
											"name": "FilterablePriceSetProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8422,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 8200,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "an object whose keys are the name of the context attribute. Its value can be a string or a BigNumberInput. For example, you can pass the "
							},
							{
								"kind": "code",
								"text": "`currency_code`"
							},
							{
								"kind": "text",
								"text": " property with its value being the currency code to calculate the price in.\nAnother example is passing the "
							},
							{
								"kind": "code",
								"text": "`quantity`"
							},
							{
								"kind": "text",
								"text": " property to calculate the price for that specified quantity, which finds a price set whose "
							},
							{
								"kind": "code",
								"text": "`min_quantity`"
							},
							{
								"kind": "text",
								"text": " and "
							},
							{
								"kind": "code",
								"text": "`max_quantity`"
							},
							{
								"kind": "text",
								"text": " conditions match the specified quantity."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 8395,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8143,
						"name": "PricingContext.context"
					}
				},
				{
					"id": 8196,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "IDs to filter price sets by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 8197,
					"name": "money_amounts",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filters to apply on a price set's associated money amounts."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8424,
						"name": "FilterableMoneyAmountProps",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8198,
						8199,
						8200,
						8196,
						8197
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 8420,
					"typeArguments": [
						{
							"type": "reference",
							"target": 8195,
							"name": "FilterablePriceSetProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				},
				{
					"type": "reference",
					"target": 8142,
					"name": "PricingContext",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 8250,
			"name": "PriceDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A price's data."
					}
				]
			},
			"children": [
				{
					"id": 8251,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of a price."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8252,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the price."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8253,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The currency code of this price."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8254,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price of this price."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8410,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 8255,
					"name": "min_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The minimum quantity required to be purchased for this price to be applied."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8410,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 8256,
					"name": "max_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum quantity required to be purchased for this price to be applied."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8410,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 8257,
					"name": "price_set",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price set associated with the price."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 8190,
						"name": "PriceSetDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 8258,
					"name": "price_list",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list associated with the price."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 8304,
						"name": "PriceListDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 8259,
					"name": "price_set_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated price set."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8260,
					"name": "price_rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price rules associated with the price."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 8270,
							"name": "PriceRuleDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 8261,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the price was created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 8262,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the price was updated."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 8263,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the price was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8251,
						8252,
						8253,
						8254,
						8255,
						8256,
						8257,
						8258,
						8259,
						8260,
						8261,
						8262,
						8263
					]
				}
			]
		},
		{
			"id": 8243,
			"name": "FilterablePriceProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Filters to apply on prices."
					}
				]
			},
			"children": [
				{
					"id": 8248,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 8243,
									"name": "FilterablePriceProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 8420,
									"typeArguments": [
										{
											"type": "reference",
											"target": 8243,
											"name": "FilterablePriceProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8421,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 8249,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 8243,
									"name": "FilterablePriceProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 8420,
									"typeArguments": [
										{
											"type": "reference",
											"target": 8243,
											"name": "FilterablePriceProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8422,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 8244,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the prices by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 8245,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Currency codes to filter price by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 8246,
					"name": "price_set_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the price's associated price set."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 8247,
					"name": "price_list_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the price's associated price list."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8248,
						8249,
						8244,
						8245,
						8246,
						8247
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 8420,
					"typeArguments": [
						{
							"type": "reference",
							"target": 8243,
							"name": "FilterablePriceProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 8220,
			"name": "RuleTypeDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A rule type's data."
					}
				]
			},
			"children": [
				{
					"id": 8221,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the rule type."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8222,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The display name of the rule type."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8223,
					"name": "rule_attribute",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique name used to later identify the rule_attribute. For example, it can be used in the "
							},
							{
								"kind": "code",
								"text": "`context`"
							},
							{
								"kind": "text",
								"text": " parameter of\nthe "
							},
							{
								"kind": "code",
								"text": "`calculatePrices`"
							},
							{
								"kind": "text",
								"text": " method to specify a rule for calculating the price."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8224,
					"name": "default_priority",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The priority of the rule type. This is useful when calculating the price of a price set, and multiple rules satisfy\nthe provided context. The higher the value, the higher the priority of the rule type."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 8225,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The creation date of the rule type."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 8226,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The update date of the rule type."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8221,
						8222,
						8223,
						8224,
						8225,
						8226
					]
				}
			]
		},
		{
			"id": 8233,
			"name": "CreateRuleTypeDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The rule type to create."
					}
				]
			},
			"children": [
				{
					"id": 8234,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the rule type."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8235,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The display name of the rule type."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8236,
					"name": "rule_attribute",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique name used to later identify the rule_attribute. For example, it can be used in the "
							},
							{
								"kind": "code",
								"text": "`context`"
							},
							{
								"kind": "text",
								"text": " parameter of the "
							},
							{
								"kind": "code",
								"text": "`calculatePrices`"
							},
							{
								"kind": "text",
								"text": "\nmethod to specify a rule for calculating the price."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8237,
					"name": "default_priority",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The priority of the rule type. This is useful when calculating the price of a price set, and multiple rules satisfy the provided context.\nThe higher the value, the higher the priority of the rule type."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8234,
						8235,
						8236,
						8237
					]
				}
			]
		},
		{
			"id": 8238,
			"name": "UpdateRuleTypeDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The data to update in a rule type. The "
					},
					{
						"kind": "code",
						"text": "`id`"
					},
					{
						"kind": "text",
						"text": " is used to identify which price set to update."
					}
				]
			},
			"children": [
				{
					"id": 8239,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the rule type to update."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8240,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The display name of the rule type."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8241,
					"name": "rule_attribute",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique name used to later identify the rule_attribute. For example, it can be used in the "
							},
							{
								"kind": "code",
								"text": "`context`"
							},
							{
								"kind": "text",
								"text": " parameter of the "
							},
							{
								"kind": "code",
								"text": "`calculatePrices`"
							},
							{
								"kind": "text",
								"text": " method to specify a rule for calculating the price."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8242,
					"name": "default_priority",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The priority of the rule type. This is useful when calculating the price of a price set, and multiple rules satisfy the provided context. The higher the value, the higher the priority of the rule type."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8239,
						8240,
						8241,
						8242
					]
				}
			]
		},
		{
			"id": 8227,
			"name": "FilterableRuleTypeProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Filters to apply on rule types."
					}
				]
			},
			"children": [
				{
					"id": 8231,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 8227,
									"name": "FilterableRuleTypeProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 8420,
									"typeArguments": [
										{
											"type": "reference",
											"target": 8227,
											"name": "FilterableRuleTypeProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8421,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 8232,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 8227,
									"name": "FilterableRuleTypeProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 8420,
									"typeArguments": [
										{
											"type": "reference",
											"target": 8227,
											"name": "FilterableRuleTypeProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8422,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 8228,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter rule types by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 8229,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The names to filter rule types by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 8230,
					"name": "rule_attribute",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rule attributes to filter rule types by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8231,
						8232,
						8228,
						8229,
						8230
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 8420,
					"typeArguments": [
						{
							"type": "reference",
							"target": 8227,
							"name": "FilterableRuleTypeProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 7904,
			"name": "IPricingModuleService",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The main service interface for the Pricing Module."
					}
				]
			},
			"children": [
				{
					"id": 7905,
					"name": "calculatePrices",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 7906,
							"name": "calculatePrices",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to calculate prices based on the provided filters and context."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The calculated prices matching the context and filters provided."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "When you calculate prices, you must at least specify the currency code:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst price = await pricingModuleService.calculatePrices(\n  {\n    id: [\"pset_123\", \"pset_321\"],\n  },\n  {\n    context: {\n      currency_code: \"usd\",\n    },\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo calculate prices for specific minimum and/or maximum quantity:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst price = await pricingModuleService.calculatePrices(\n  {\n    id: [\"pset_123\", \"pset_321\"],\n  },\n  {\n    context: {\n      currency_code: \"usd\",\n      min_quantity: 4,\n    },\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo calculate prices for custom rule types:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst price = await pricingModuleService.calculatePrices(\n  {\n    id: [\"pset_123\", \"pset_321\"],\n  },\n  {\n    context: {\n      currency_code: \"usd\",\n      region_id: \"US\",\n    },\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 7907,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on prices."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8140,
										"name": "PricingFilters",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 7908,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The context used to select the prices. For example, you can specify the region ID in this context, and only prices having the same value\nwill be retrieved."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8142,
										"name": "PricingContext",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 7909,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8144,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8156,
											"name": "CalculatedPriceSet",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 7910,
					"name": "retrievePriceSet",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 7911,
							"name": "retrievePriceSet",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a price set by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved price set."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "A simple example that retrieves a price set by its ID:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst priceSet =\n  await pricingModuleService.retrievePriceSet(\"pset_123\")\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst priceSet = await pricingModuleService.retrievePriceSet(\n  \"pset_123\",\n  {\n    relations: [\"prices\"],\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 7912,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the price set to retrieve."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 7913,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the price set is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a price set."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8177,
										"typeArguments": [
											{
												"type": "reference",
												"target": 8190,
												"name": "PriceSetDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 7914,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8144,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 8190,
										"name": "PriceSetDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 7915,
					"name": "listPriceSets",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 7916,
							"name": "listPriceSets",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of price sets based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of price sets."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of price sets using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst priceSets = await pricingModuleService.listPriceSets({\n  id: [\"pset_123\", \"pset_321\"],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the price sets:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst priceSets = await pricingModuleService.listPriceSets(\n  {\n    id: [\"pset_123\", \"pset_321\"],\n  },\n  {\n    relations: [\"prices\"],\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst priceSets = await pricingModuleService.listPriceSets(\n  {\n    id: [\"pset_123\", \"pset_321\"],\n  },\n  {\n    relations: [\"prices\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 7917,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved price lists."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8195,
										"name": "FilterablePriceSetProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 7918,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the price sets are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a price set."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8177,
										"typeArguments": [
											{
												"type": "reference",
												"target": 8190,
												"name": "PriceSetDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 7919,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8144,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8190,
											"name": "PriceSetDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 7920,
					"name": "listAndCountPriceSets",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 7921,
							"name": "listAndCountPriceSets",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of price sets along with the total count of available price sets satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of price sets along with their total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of prices sets using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [priceSets, count] =\n  await pricingModuleService.listAndCountPriceSets({\n    id: [\"pset_123\", \"pset_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the price sets:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [priceSets, count] =\n  await pricingModuleService.listAndCountPriceSets(\n    {\n      id: [\"pset_123\", \"pset_321\"],\n    },\n    {\n      relations: [\"prices\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [priceSets, count] =\n  await pricingModuleService.listAndCountPriceSets(\n    {\n      id: [\"pset_123\", \"pset_321\"],\n    },\n    {\n      relations: [\"prices\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 7922,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved price lists."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8195,
										"name": "FilterablePriceSetProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 7923,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the price sets are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a price set."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8177,
										"typeArguments": [
											{
												"type": "reference",
												"target": 8190,
												"name": "PriceSetDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 7924,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8144,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 8190,
													"name": "PriceSetDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 7925,
					"name": "createPriceSets",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 7926,
							"name": "createPriceSets",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create a new price set."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created price set."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To create a default price set, don't pass any rules. For example:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst priceSet = await pricingModuleService.createPriceSets({\n  rules: [],\n  prices: [\n    {\n      amount: 500,\n      currency_code: \"USD\",\n      min_quantity: 0,\n      max_quantity: 4,\n      rules: {},\n    },\n    {\n      amount: 400,\n      currency_code: \"USD\",\n      min_quantity: 5,\n      max_quantity: 10,\n      rules: {},\n    },\n  ],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo create a price set and associate it with rule types:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst priceSet = await pricingModuleService.createPriceSets({\n  rules: [\n    { rule_attribute: \"region_id\" },\n    { rule_attribute: \"city\" },\n  ],\n  prices: [\n    {\n      amount: 300,\n      currency_code: \"EUR\",\n      rules: {\n        region_id: \"PL\",\n        city: \"krakow\",\n      },\n    },\n    {\n      amount: 400,\n      currency_code: \"EUR\",\n      rules: {\n        region_id: \"PL\",\n      },\n    },\n    {\n      amount: 450,\n      currency_code: \"EUR\",\n      rules: {\n        city: \"krakow\",\n      },\n    },\n  ],\n})\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 7927,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes of the price set to create."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8201,
										"name": "CreatePriceSetDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 7928,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8144,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 8190,
										"name": "PriceSetDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 7929,
							"name": "createPriceSets",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create multiple price sets."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of created price sets."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst priceSets = await pricingModuleService.createPriceSets([\n  // default price set\n  {\n    rules: [],\n    prices: [\n      {\n        amount: 500,\n        currency_code: \"USD\",\n        min_quantity: 0,\n        max_quantity: 4,\n        rules: {},\n      },\n      {\n        amount: 400,\n        currency_code: \"USD\",\n        min_quantity: 5,\n        max_quantity: 10,\n        rules: {},\n      },\n    ],\n  },\n  // price set with rules\n  {\n    rules: [\n      { rule_attribute: \"region_id\" },\n      { rule_attribute: \"city\" },\n    ],\n    prices: [\n      {\n        amount: 300,\n        currency_code: \"EUR\",\n        rules: {\n          region_id: \"PL\",\n          city: \"krakow\",\n        },\n      },\n      {\n        amount: 400,\n        currency_code: \"EUR\",\n        rules: {\n          region_id: \"PL\",\n        },\n      },\n      {\n        amount: 450,\n        currency_code: \"EUR\",\n        rules: {\n          city: \"krakow\",\n        },\n      },\n    ],\n  },\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 7930,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The price sets to create."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8201,
											"name": "CreatePriceSetDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 7931,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8144,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8190,
											"name": "PriceSetDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 7932,
					"name": "upsertPriceSets",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 7933,
							"name": "upsertPriceSets",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates existing price sets, or creates new ones if they don't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated and created price sets."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst priceSets = await pricingModuleService.upsertPriceSets([\n  {\n    prices: [\n      {\n        amount: 100,\n        currency_code: \"USD\",\n      },\n    ],\n  },\n  {\n    id: \"pset_123\",\n    rules: [{ rule_attribute: \"region_id\" }],\n  },\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 7934,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update or create for each price set."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8206,
											"name": "UpsertPriceSetDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 7935,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8144,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8190,
											"name": "PriceSetDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 7936,
							"name": "upsertPriceSets",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates the price set if it exists, or creates a new ones if it doesn't."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated or created price set."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst priceSet = await pricingModuleService.upsertPriceSets({\n  id: \"pset_123\",\n  rules: [{ rule_attribute: \"region_id\" }],\n})\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 7937,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update or create for the new price set."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8206,
										"name": "UpsertPriceSetDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 7938,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8144,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 8190,
										"name": "PriceSetDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 7939,
					"name": "updatePriceSets",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 7940,
							"name": "updatePriceSets",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update a price set."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated price set."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst priceSet = await pricingModuleService.updatePriceSets(\n  \"pset_123\",\n  {\n    rules: [{ rule_attribute: \"region_id\" }],\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 7941,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the price set to be updated."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 7942,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes of the price set to be updated"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8212,
										"name": "UpdatePriceSetDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 7943,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8144,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 8190,
										"name": "PriceSetDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 7944,
							"name": "updatePriceSets",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update a list of price sets determined by the selector filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated price sets."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst priceSets = await pricingModuleService.updatePriceSets(\n  {\n    id: [\"pset_123\", \"pset_321\"],\n  },\n  {\n    rules: [{ rule_attribute: \"region_id\" }],\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 7945,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters that will determine which price sets will be updated."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8195,
										"name": "FilterablePriceSetProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 7946,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to be updated on the selected price sets"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8212,
										"name": "UpdatePriceSetDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 7947,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8144,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8190,
											"name": "PriceSetDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 7948,
					"name": "deletePriceSets",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 7949,
							"name": "deletePriceSets",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes price sets by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the price sets are successfully deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait pricingModuleService.deletePriceSets([\"pset_123\", \"pset_321\"])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 7950,
									"name": "ids",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the price sets to delete."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 7951,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8144,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 7952,
					"name": "addPrices",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 7953,
							"name": "addPrices",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method adds prices to a price set."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The price set that the prices were added to."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To add a default price to a price set, don't pass it any rules and make sure to pass it the "
											},
											{
												"kind": "code",
												"text": "`currency_code`"
											},
											{
												"kind": "text",
												"text": ":\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst priceSet = await pricingModuleService.addPrices({\n  priceSetId: \"pset_123\",\n  prices: [\n    {\n      amount: 500,\n      currency_code: \"USD\",\n      rules: {},\n    },\n  ],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo add prices with rules:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst priceSet = await pricingModuleService.addPrices({\n  priceSetId: \"pset_123\",\n  prices: [\n    {\n      amount: 300,\n      currency_code: \"EUR\",\n      rules: {\n        region_id: \"PL\",\n        city: \"krakow\",\n      },\n    },\n    {\n      amount: 400,\n      currency_code: \"EUR\",\n      min_quantity: 0,\n      max_quantity: 4,\n      rules: {\n        region_id: \"PL\",\n      },\n    },\n    {\n      amount: 450,\n      currency_code: \"EUR\",\n      rules: {\n        city: \"krakow\",\n      },\n    },\n  ],\n})\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 7954,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The data defining the price set to add the prices to, along with the prices to add."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8217,
										"name": "AddPricesDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 7955,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8144,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 8190,
										"name": "PriceSetDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 7956,
							"name": "addPrices",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method adds prices to multiple price sets."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of the price sets that prices were added to."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst priceSets = await pricingModuleService.addPrices([\n  {\n    priceSetId: \"pset_123\",\n    prices: [\n      // default price because it doesn't\n      // have rules\n      {\n        amount: 500,\n        currency_code: \"USD\",\n        rules: {},\n      },\n    ],\n  },\n  {\n    priceSetId: \"pset_321\",\n    prices: [\n      // prices with rules\n      {\n        amount: 300,\n        currency_code: \"EUR\",\n        rules: {\n          region_id: \"PL\",\n          city: \"krakow\",\n        },\n      },\n    ],\n  },\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 7957,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The data defining the prices to add per price set."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8217,
											"name": "AddPricesDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 7958,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8144,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8190,
											"name": "PriceSetDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 7959,
					"name": "retrieveRuleType",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 7960,
							"name": "retrieveRuleType",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a rule type by its ID and and optionally based on the provided configurations."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved rule type."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "A simple example that retrieves a rule type by its code:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst ruleType =\n  await pricingModuleService.retrieveRuleType(\"rul-typ_123\")\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst ruleType = await pricingModuleService.retrieveRuleType(\n  \"rul-typ_123\",\n  {\n    relations: [\"price_sets\"],\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 7961,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the rule type to retrieve."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 7962,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the rule type is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a rule type."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8177,
										"typeArguments": [
											{
												"type": "reference",
												"target": 8220,
												"name": "RuleTypeDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 7963,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8144,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 8220,
										"name": "RuleTypeDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 7964,
					"name": "listRuleTypes",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 7965,
							"name": "listRuleTypes",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of rule types based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of rule types."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of rule types using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst ruleTypes = await pricingModuleService.listRuleTypes({\n  id: [\"rul-typ_123\", \"rul-typ_321\"],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst ruleTypes = await pricingModuleService.listRuleTypes(\n  {\n    id: [\"rul-typ_123\", \"rul-typ_321\"],\n  },\n  {\n    relations: [\"price_sets\"],\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst ruleTypes = await pricingModuleService.listRuleTypes(\n  {\n    id: [\"rul-typ_123\", \"rul-typ_321\"],\n  },\n  {\n    relations: [\"price_sets\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 7966,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved rule types."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8227,
										"name": "FilterableRuleTypeProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 7967,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the rule types are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a rule type."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8177,
										"typeArguments": [
											{
												"type": "reference",
												"target": 8220,
												"name": "RuleTypeDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 7968,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8144,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8220,
											"name": "RuleTypeDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 7969,
					"name": "listAndCountRuleTypes",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 7970,
							"name": "listAndCountRuleTypes",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of rule types along with the total count of available rule types satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of rule types along with their total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of rule types using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [ruleTypes, count] =\n  await pricingModuleService.listAndCountRuleTypes({\n    id: [\"rul-typ_123\", \"rul-typ_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify attributes that should be retrieved within the rule types:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [ruleTypes, count] =\n  await pricingModuleService.listAndCountRuleTypes(\n    {\n      id: [\"rul-typ_123\", \"rul-typ_321\"],\n    },\n    {\n      relations: [\"price_sets\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [ruleTypes, count] =\n  await pricingModuleService.listAndCountRuleTypes(\n    {\n      id: [\"rul-typ_123\", \"rul-typ_321\"],\n    },\n    {\n      relations: [\"price_sets\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 7971,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved rule types."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8227,
										"name": "FilterableRuleTypeProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 7972,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the rule types are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a rule type."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8177,
										"typeArguments": [
											{
												"type": "reference",
												"target": 8220,
												"name": "RuleTypeDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 7973,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8144,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 8220,
													"name": "RuleTypeDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 7974,
					"name": "createRuleTypes",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 7975,
							"name": "createRuleTypes",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create new rule types."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of created rule types."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst ruleTypes = await pricingModuleService.createRuleTypes([\n  {\n    name: \"Region\",\n    rule_attribute: \"region_id\",\n  },\n  {\n    name: \"Customer Group\",\n    rule_attribute: \"customer_group_id\",\n  },\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 7976,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The rule types to create."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8233,
											"name": "CreateRuleTypeDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 7977,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8144,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8220,
											"name": "RuleTypeDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 7978,
					"name": "updateRuleTypes",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 7979,
							"name": "updateRuleTypes",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update existing rule types with the provided data."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of updated rule types."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst ruleTypes = await pricingModuleService.updateRuleTypes([\n  {\n    id: \"rul-typ_123\",\n    name: \"Region\",\n  },\n  {\n    id: \"rul-typ_321\",\n    name: \"Customer Group\",\n  },\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 7980,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The rule types to update, each having the attributes that should be updated in a rule type."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8238,
											"name": "UpdateRuleTypeDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 7981,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8144,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8220,
											"name": "RuleTypeDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 7982,
					"name": "deleteRuleTypes",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 7983,
							"name": "deleteRuleTypes",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to delete rule types based on the provided IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves once the rule types are deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst ruleTypes = await pricingModuleService.deleteRuleTypes([\n  \"rul-typ_123\",\n  \"rul-typ_321\",\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 7984,
									"name": "ruleTypeIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the rule types to delete."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 7985,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8144,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 7986,
					"name": "listPrices",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 7987,
							"name": "listPrices",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of prices based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of prices."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of prices using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst prices = await pricingModuleService.listPrices({\n  id: [\"price_123\", \"price_321\"],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the prices:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst prices = await pricingModuleService.listPrices(\n  {\n    id: [\"price_123\", \"price_321\"],\n  },\n  {\n    relations: [\"price_rules\"],\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst prices = await pricingModuleService.listPrices(\n  {\n    id: [\"price_123\", \"price_321\"],\n  },\n  {\n    relations: [\"price_rules\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 7988,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved prices."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8243,
										"name": "FilterablePriceProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 7989,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the prices are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a price."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8177,
										"typeArguments": [
											{
												"type": "reference",
												"target": 8250,
												"name": "PriceDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 7990,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8144,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8250,
											"name": "PriceDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 7991,
					"name": "softDeletePrices",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 7992,
							"name": "softDeletePrices",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method soft deletes prices by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were also soft deleted, such as the ID of the associated price rules.\nThe object's keys are the ID attribute names of the price entity's relations, such as "
											},
											{
												"kind": "code",
												"text": "`price_rule_id`"
											},
											{
												"kind": "text",
												"text": ", and its value is an array of strings, each being the ID of a record associated\nwith the price through this relation, such as the IDs of associated price rule.\n\nIf there are no related records, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait pricingModuleService.softDeletePrices([\n  \"price_123\",\n  \"price_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameters": [
								{
									"id": 7993,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 7994,
									"name": "priceIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the prices."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 7995,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8264,
										"typeArguments": [
											{
												"type": "reference",
												"target": 7993,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 7996,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8144,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 7997,
					"name": "restorePrices",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 7998,
							"name": "restorePrices",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method restores soft deleted prices by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait pricingModuleService.restorePrices([\n  \"price_123\",\n  \"price_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameters": [
								{
									"id": 7999,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 8000,
									"name": "priceIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the prices."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 8001,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to restore along with each of the prices. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the price's relation attribute names, such as price_rules"
											},
											{
												"kind": "code",
												"text": "`.\n@param {Context} sharedContext - A context used to share resources, such as transaction manager, between the application and the module.\n@returns {Promise<void | Record<string, string[]>>} An object that includes the IDs of related records that were restored, such as the ID of associated price rules.\nThe object's keys are the ID attribute names of the prices entity's relations, such as `"
											},
											{
												"kind": "text",
												"text": "price_rule_id"
											},
											{
												"kind": "code",
												"text": "`,\nand its value is an array of strings, each being the ID of the record associated with the prices through this relation,\nsuch as the IDs of associated price rules.\n\nIf there are no related records restored, the promise resolves to `"
											},
											{
												"kind": "text",
												"text": "void`."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8267,
										"typeArguments": [
											{
												"type": "reference",
												"target": 7999,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8002,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 8144,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8003,
					"name": "listAndCountPrices",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8004,
							"name": "listAndCountPrices",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of prices along with the total count of\navailable prices satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of prices and their total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of prices using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [prices, count] = await pricingModuleService.listPrices(\n  {\n    id: [\"price_123\", \"price_321\"],\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the prices:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [prices, count] = await pricingModuleService.listPrices(\n  {\n    id: [\"price_123\", \"price_321\"],\n  },\n  {\n    relations: [\"price_rules\"],\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [prices, count] = await pricingModuleService.listPrices(\n  {\n    id: [\"price_123\", \"price_321\"],\n  },\n  {\n    relations: [\"price_rules\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8005,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved prices."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8243,
										"name": "FilterablePriceProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8006,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the prices are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a price."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8177,
										"typeArguments": [
											{
												"type": "reference",
												"target": 8250,
												"name": "PriceDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8007,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8144,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 8250,
													"name": "PriceDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8008,
					"name": "retrievePriceRule",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8009,
							"name": "retrievePriceRule",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a price rule by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved price rule."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "A simple example that retrieves a price rule by its ID:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst priceRule =\n  await pricingModuleService.retrievePriceRule(\"prule_123\")\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst priceRule =\n  await pricingModuleService.retrievePriceRule(\"prule_123\", {\n    relations: [\"price_set\"],\n  })\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8010,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the price rule to retrieve."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 8011,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the price rule is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a price rule."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8177,
										"typeArguments": [
											{
												"type": "reference",
												"target": 8270,
												"name": "PriceRuleDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8012,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8144,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 8270,
										"name": "PriceRuleDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8013,
					"name": "listPriceRules",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8014,
							"name": "listPriceRules",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of price rules based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of price rules."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of price rules using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst priceRules = await pricingModuleService.listPriceRules({\n  id: [\"prule_123\", \"prule_321\"],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the price rules:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst priceRules = await pricingModuleService.listPriceRules(\n  {\n    id: [\"prule_123\", \"prule_321\"],\n  },\n  {\n    relations: [\"price_set\"],\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst priceRules = await pricingModuleService.listPriceRules(\n  {\n    id: [\"prule_123\", \"prule_321\"],\n  },\n  {\n    relations: [\"price_set\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8015,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved price rules."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8283,
										"name": "FilterablePriceRuleProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8016,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the price rule is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a price rule."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8177,
										"typeArguments": [
											{
												"type": "reference",
												"target": 8270,
												"name": "PriceRuleDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8017,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8144,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8270,
											"name": "PriceRuleDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8018,
					"name": "listAndCountPriceRules",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8019,
							"name": "listAndCountPriceRules",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of price rules along with the total count of available price rules satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of price rules along with their total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of price rules using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [priceRules, count] =\n  await pricingModuleService.listAndCountPriceListRules({\n    id: [\"prule_123\", \"prule_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the price rules:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [priceRules, count] =\n  await pricingModuleService.listAndCountPriceListRules(\n    {\n      id: [\"prule_123\", \"prule_321\"],\n    },\n    {\n      relations: [\"price_set\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [priceRules, count] =\n  await pricingModuleService.listAndCountPriceListRules(\n    {\n      id: [\"prule_123\", \"prule_321\"],\n    },\n    {\n      relations: [\"price_set\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8020,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved price rules."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8283,
										"name": "FilterablePriceRuleProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8021,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the price rule is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a price rule."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8177,
										"typeArguments": [
											{
												"type": "reference",
												"target": 8270,
												"name": "PriceRuleDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8022,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8144,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 8270,
													"name": "PriceRuleDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8023,
					"name": "createPriceRules",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8024,
							"name": "createPriceRules",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create new price rules based on the provided data."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of created price rules."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst priceRules =\n  await pricingModuleService.createPriceRules([\n    {\n      value: \"VIP\",\n      rule_type_id: \"rul-typ_123\",\n      price_set_id: \"pset_123\",\n    },\n  ])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8025,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The price rules to create."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8290,
											"name": "CreatePriceRuleDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 8026,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8144,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8270,
											"name": "PriceRuleDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8027,
					"name": "updatePriceRules",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8028,
							"name": "updatePriceRules",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update price rules, each with their provided data."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of updated price rules."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst priceRules =\n  await pricingModuleService.updatePriceRules([\n    {\n      id: \"prule_123\",\n      price_id: \"price_123\",\n    },\n  ])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8029,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The price rules to update, each having attributes that should be updated in a price rule."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8296,
											"name": "UpdatePriceRuleDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 8030,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8144,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8270,
											"name": "PriceRuleDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8031,
					"name": "deletePriceRules",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8032,
							"name": "deletePriceRules",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to delete price rules based on the specified IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves once the price rules are deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait pricingModuleService.deletePriceRules([\n  \"prule_123\",\n  \"prule_321\",\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8033,
									"name": "priceRuleIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the price rules to delete."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 8034,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8144,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8035,
					"name": "retrievePriceList",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8036,
							"name": "retrievePriceList",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a price list by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved price list."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "A simple example that retrieves a price list by its ID:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst priceList =\n  await pricingModuleService.retrievePriceList(\"plist_123\")\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst priceList =\n  await pricingModuleService.retrievePriceList(\"plist_123\", {\n    relations: [\"prices\"],\n  })\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8037,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the price list to retrieve."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 8038,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the price list is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a price list."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8177,
										"typeArguments": [
											{
												"type": "reference",
												"target": 8304,
												"name": "PriceListDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8039,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8144,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 8304,
										"name": "PriceListDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8040,
					"name": "listPriceLists",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8041,
							"name": "listPriceLists",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of price lists based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of price lists."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of price lists using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst priceLists = await pricingModuleService.listPriceLists({\n  id: [\"plist_123\", \"plist_321\"],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the price lists:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst priceLists = await pricingModuleService.listPriceLists(\n  {\n    id: [\"plist_123\", \"plist_321\"],\n  },\n  {\n    relations: [\"prices\"],\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst priceLists = await pricingModuleService.listPriceLists(\n  {\n    id: [\"plist_123\", \"plist_321\"],\n  },\n  {\n    relations: [\"prices\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8042,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved price lists."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8318,
										"name": "FilterablePriceListProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8043,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the price lists are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a price list."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8177,
										"typeArguments": [
											{
												"type": "reference",
												"target": 8304,
												"name": "PriceListDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8044,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8144,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8304,
											"name": "PriceListDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8045,
					"name": "listAndCountPriceLists",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8046,
							"name": "listAndCountPriceLists",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of price lists along with the total count of available price lists satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of price lists along with their total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of price lists using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [priceLists, count] =\n  await pricingModuleService.listAndCountPriceLists({\n    id: [\"plist_123\", \"plist_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the price lists:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [priceLists, count] =\n  await pricingModuleService.listAndCountPriceLists(\n    {\n      id: [\"plist_123\", \"plist_321\"],\n    },\n    {\n      relations: [\"prices\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [priceLists, count] =\n  await pricingModuleService.listAndCountPriceLists(\n    {\n      id: [\"plist_123\", \"plist_321\"],\n    },\n    {\n      relations: [\"prices\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8047,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved price lists."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8318,
										"name": "FilterablePriceListProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8048,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the price lists are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a price list."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8177,
										"typeArguments": [
											{
												"type": "reference",
												"target": 8304,
												"name": "PriceListDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8049,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8144,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 8304,
													"name": "PriceListDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8050,
					"name": "createPriceLists",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8051,
							"name": "createPriceLists",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create price lists."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created price lists."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst priceLists =\n  await pricingModuleService.createPriceLists([\n    {\n      title: \"Sale 1\",\n      description: \"Summer sale\",\n    },\n    {\n      title: \"Sale 2\",\n      description: \"Winter sale\",\n      starts_at: \"2024-12-21\",\n    },\n  ])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8052,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The details of each price list to be created."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8327,
											"name": "CreatePriceListDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 8053,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8144,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8304,
											"name": "PriceListDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8054,
					"name": "updatePriceLists",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8055,
							"name": "updatePriceLists",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update price lists."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated price lists."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst priceLists =\n  await pricingModuleService.updatePriceLists([\n    {\n      id: \"plist_123\",\n      title: \"Sale 1\",\n    },\n    {\n      id: \"plist_321\",\n      description: \"Winter sale\",\n    },\n  ])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8056,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in each price list. The price list is identifed by the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " field."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8337,
											"name": "UpdatePriceListDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 8057,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8144,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8304,
											"name": "PriceListDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8058,
					"name": "deletePriceLists",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8059,
							"name": "deletePriceLists",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to delete price lists."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the price lists are deleted successfully."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait pricingModuleService.deletePriceLists([\n  \"plist_123\",\n  \"plist_321\",\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8060,
									"name": "priceListIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the price lists to delete."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 8061,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8144,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8062,
					"name": "softDeletePriceLists",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8063,
							"name": "softDeletePriceLists",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method soft deletes price lists by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were also soft deleted, such as the ID of the associated price list rules.\nThe object's keys are the ID attribute names of the price list entity's relations, such as "
											},
											{
												"kind": "code",
												"text": "`price_list_rule_id`"
											},
											{
												"kind": "text",
												"text": ", and its value is an array of strings, each being the ID of a record associated\nwith the price list through this relation, such as the IDs of associated price list rule.\n\nIf there are no related records, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait pricingModuleService.softDeletePriceLists([\n  \"plist_123\",\n  \"plist_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameters": [
								{
									"id": 8064,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 8065,
									"name": "priceListIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the price lists."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 8066,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8264,
										"typeArguments": [
											{
												"type": "reference",
												"target": 8064,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8067,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8144,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8068,
					"name": "restorePriceLists",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8069,
							"name": "restorePriceLists",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method restores a soft deleted price lists by its IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were restored, such as the ID of associated price list rules.\nThe object's keys are the ID attribute names of the price list entity's relations, such as "
											},
											{
												"kind": "code",
												"text": "`price_list_rule_id`"
											},
											{
												"kind": "text",
												"text": ",\nand its value is an array of strings, each being the ID of the record associated with the price list through this relation,\nsuch as the IDs of associated price list rules.\n\nIf there are no related records restored, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait pricingModuleService.restorePriceLists([\n  \"plist_123\",\n  \"plist_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameters": [
								{
									"id": 8070,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 8071,
									"name": "priceListIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The list of {summary}"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 8072,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to restore along with each of the price lists. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the price list's relation attribute names, such as "
											},
											{
												"kind": "code",
												"text": "`price_list_rules`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8267,
										"typeArguments": [
											{
												"type": "reference",
												"target": 8070,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8073,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8144,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8074,
					"name": "retrievePriceListRule",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8075,
							"name": "retrievePriceListRule",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a price list rule by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved price list rule."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "A simple example that retrieves a price list rule by its ID:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst priceListRule =\n  await pricingModuleService.retrievePriceListRule(\n    \"plrule_123\"\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst priceListRule =\n  await pricingModuleService.retrievePriceListRule(\n    \"plrule_123\",\n    {\n      relations: [\"price_list\"],\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8076,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the price list rule to retrieve."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 8077,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the price list rule is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a price list rule."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8177,
										"typeArguments": [
											{
												"type": "reference",
												"target": 8346,
												"name": "PriceListRuleDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8078,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8144,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 8346,
										"name": "PriceListRuleDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8079,
					"name": "listPriceListRules",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8080,
							"name": "listPriceListRules",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of price list rules based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of price list rules."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of price list vs using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst priceListRules =\n  await pricingModuleService.listPriceListRules({\n    id: [\"plrule_123\", \"plrule_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the price list rules:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst priceListRules =\n  await pricingModuleService.listPriceListRules(\n    {\n      id: [\"plrule_123\", \"plrule_321\"],\n    },\n    {\n      relations: [\"price_list_rule_values\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst priceListRules =\n  await pricingModuleService.listPriceListRules(\n    {\n      id: [\"plrule_123\", \"plrule_321\"],\n    },\n    {\n      relations: [\"price_list_rule_values\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8081,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved price list rules."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8352,
										"name": "FilterablePriceListRuleProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8082,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the price list rules are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a price list rule."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8177,
										"typeArguments": [
											{
												"type": "reference",
												"target": 8346,
												"name": "PriceListRuleDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8083,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8144,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8346,
											"name": "PriceListRuleDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8084,
					"name": "listAndCountPriceListRules",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8085,
							"name": "listAndCountPriceListRules",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of price list ruless along with the total count of available price list ruless satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of price list rules along with their total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of price list vs using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [priceListRules, count] =\n  await pricingModuleService.listAndCountPriceListRules({\n    id: [\"plrule_123\", \"plrule_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the price list rules:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [priceListRules, count] =\n  await pricingModuleService.listAndCountPriceListRules(\n    {\n      id: [\"plrule_123\", \"plrule_321\"],\n    },\n    {\n      relations: [\"price_list_rule_values\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [priceListRules, count] =\n  await pricingModuleService.listAndCountPriceListRules(\n    {\n      id: [\"plrule_123\", \"plrule_321\"],\n    },\n    {\n      relations: [\"price_list_rule_values\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8086,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved price list rules."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8352,
										"name": "FilterablePriceListRuleProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8087,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the price list rules are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a price list rule."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8177,
										"typeArguments": [
											{
												"type": "reference",
												"target": 8346,
												"name": "PriceListRuleDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8088,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8144,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 8346,
													"name": "PriceListRuleDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8089,
					"name": "deletePriceListRules",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8090,
							"name": "deletePriceListRules",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to delete price list rules."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves successfully when the price list rules are deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait pricingModuleService.deletePriceListRules([\n  \"plrule_123\",\n  \"plrule_321\",\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8091,
									"name": "priceListRuleIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the price list rules to delete."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 8092,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8144,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8093,
					"name": "addPriceListPrices",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8094,
							"name": "addPriceListPrices",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to add prices to price lists."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated price lists."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst priceLists =\n  await pricingModuleService.addPriceListPrices([\n    {\n      price_list_id: \"plist_123\",\n      prices: [\n        {\n          currency_code: \"usd\",\n          amount: 500,\n          price_set_id: \"pset_123\",\n        },\n      ],\n    },\n  ])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8095,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The prices to add for each price list."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8359,
											"name": "AddPriceListPricesDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 8096,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8144,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8250,
											"name": "PriceDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8097,
					"name": "updatePriceListPrices",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8098,
							"name": "updatePriceListPrices",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates existing price list's prices."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated price list's prices."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst priceLists =\n  await pricingModuleService.updatePriceListPrices([\n    {\n      price_list_id: \"plist_123\",\n      prices: [\n        {\n          id: \"price_123\",\n          currency_code: \"usd\",\n          amount: 500,\n          price_set_id: \"pset_123\",\n        },\n      ],\n    },\n  ])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8099,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in a price list's prices. The price list's ID is specified\nin the "
											},
											{
												"kind": "code",
												"text": "`price_list_id`"
											},
											{
												"kind": "text",
												"text": " field."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8362,
											"name": "UpdatePriceListPricesDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 8100,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8144,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8250,
											"name": "PriceDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8101,
					"name": "setPriceListRules",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8102,
							"name": "setPriceListRules",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to set the rules of a price list. Previous rules are removed."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated price list's prices."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst priceList =\n  await pricingModuleService.setPriceListRules({\n    price_list_id: \"plist_123\",\n    rules: {\n      region_id: \"reg_123\",\n    },\n  })\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8103,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The rules to set for a price list. The price list is identified by the\n"
											},
											{
												"kind": "code",
												"text": "`price_list_id`"
											},
											{
												"kind": "text",
												"text": " property."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8365,
										"name": "SetPriceListRulesDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8104,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8144,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 8304,
										"name": "PriceListDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8105,
					"name": "removePriceListRules",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8106,
							"name": "removePriceListRules",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to remove rules from a price list."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated price lists."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst priceList =\n  await pricingModuleService.removePriceListRules({\n    price_list_id: \"plist_123\",\n    rules: [\"region_id\"],\n  })\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8107,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The rules to remove from a price list. The price list is identified by the\n"
											},
											{
												"kind": "code",
												"text": "`price_list_id`"
											},
											{
												"kind": "text",
												"text": " property."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8368,
										"name": "RemovePriceListRulesDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8108,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8144,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 8304,
										"name": "PriceListDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8109,
					"name": "removePrices",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8110,
							"name": "removePrices",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes prices by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the prices are deleted successfully."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait pricingModuleService.removePrices([\n  \"price_123\",\n  \"price_321\",\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8111,
									"name": "ids",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the prices."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 8112,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8144,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						7905,
						7910,
						7915,
						7920,
						7925,
						7932,
						7939,
						7948,
						7952,
						7959,
						7964,
						7969,
						7974,
						7978,
						7982,
						7986,
						7991,
						7997,
						8003,
						8008,
						8013,
						8018,
						8023,
						8027,
						8031,
						8035,
						8040,
						8045,
						8050,
						8054,
						8058,
						8062,
						8068,
						8074,
						8079,
						8084,
						8089,
						8093,
						8097,
						8101,
						8105,
						8109
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 8126,
					"name": "IModuleService",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 8513,
			"name": "MessageAggregatorFormat",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 8514,
					"name": "groupBy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 8515,
					"name": "sortBy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 8516,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"indexSignatures": [
								{
									"id": 8517,
									"name": "__index",
									"variant": "signature",
									"kind": 8192,
									"flags": {},
									"parameters": [
										{
											"id": 8518,
											"name": "key",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8514,
						8515
					]
				}
			]
		},
		{
			"id": 8396,
			"name": "IMessageAggregator",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 8397,
					"name": "save",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8398,
							"name": "save",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 8399,
									"name": "msg",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 8509,
												"name": "Message",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 8509,
													"name": "Message",
													"package": "@medusajs/types"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 8400,
					"name": "getMessages",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8401,
							"name": "getMessages",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 8402,
									"name": "format",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 8513,
										"name": "MessageAggregatorFormat",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8509,
											"name": "Message",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8403,
					"name": "clearMessages",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8404,
							"name": "clearMessages",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 8405,
					"name": "saveRawMessageData",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8406,
							"name": "saveRawMessageData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameters": [
								{
									"id": 8407,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 8408,
									"name": "messageData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 8519,
												"typeArguments": [
													{
														"type": "reference",
														"target": 8407,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RawMessageFormat",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 8519,
													"typeArguments": [
														{
															"type": "reference",
															"target": 8407,
															"name": "T",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													],
													"name": "RawMessageFormat",
													"package": "@medusajs/types"
												}
											}
										]
									}
								},
								{
									"id": 8409,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						8397,
						8400,
						8403,
						8405
					]
				}
			]
		},
		{
			"id": 8144,
			"name": "Context",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A context used to share resources, such as transaction manager, between the application and the module."
					}
				]
			},
			"children": [
				{
					"id": 8145,
					"name": "__type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "literal",
						"value": "MedusaContext"
					}
				},
				{
					"id": 8146,
					"name": "transactionManager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a transaction manager of type "
							},
							{
								"kind": "code",
								"text": "`TManager`"
							},
							{
								"kind": "text",
								"text": ", which is a typed parameter passed to the context to specify the type of the "
							},
							{
								"kind": "code",
								"text": "`transactionManager`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8155,
						"name": "TManager",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 8147,
					"name": "manager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a manager, typically an entity manager, of type "
							},
							{
								"kind": "code",
								"text": "`TManager`"
							},
							{
								"kind": "text",
								"text": ", which is a typed parameter passed to the context to specify the type of the "
							},
							{
								"kind": "code",
								"text": "`manager`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8155,
						"name": "TManager",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 8148,
					"name": "isolationLevel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the isolation level of the context. Possible values are "
							},
							{
								"kind": "code",
								"text": "`READ UNCOMMITTED`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`READ COMMITTED`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`REPEATABLE READ`"
							},
							{
								"kind": "text",
								"text": ", or "
							},
							{
								"kind": "code",
								"text": "`SERIALIZABLE`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8149,
					"name": "enableNestedTransactions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean value indicating whether nested transactions are enabled."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 8150,
					"name": "eventGroupId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the group to aggregate the events to be emitted at a later point."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8151,
					"name": "transactionId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current transaction."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8152,
					"name": "messageAggregator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a message aggregator, which is used to aggregate messages to be emitted at a later point."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8396,
						"name": "IMessageAggregator",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 8153,
					"name": "requestId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current request."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8154,
					"name": "idempotencyKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the idempotencyKey of the current workflow execution."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8145,
						8146,
						8147,
						8148,
						8149,
						8150,
						8151,
						8152,
						8153,
						8154
					]
				}
			],
			"typeParameters": [
				{
					"id": 8155,
					"name": "TManager",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			]
		},
		{
			"id": 8504,
			"name": "BigNumberRawValue",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 8505,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 8506,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								8506
							]
						}
					],
					"indexSignatures": [
						{
							"id": 8507,
							"name": "__index",
							"variant": "signature",
							"kind": 8192,
							"flags": {},
							"parameters": [
								{
									"id": 8508,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					]
				}
			}
		},
		{
			"id": 8395,
			"name": "BigNumberInput",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 8504,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					},
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../node_modules/bignumber.js/bignumber.d.ts",
							"qualifiedName": "BigNumber"
						},
						"name": "BigNumberJS",
						"package": "bignumber.js",
						"qualifiedName": "BigNumber"
					}
				]
			}
		},
		{
			"id": 8410,
			"name": "BigNumberValue",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../node_modules/bignumber.js/bignumber.d.ts",
							"qualifiedName": "BigNumber"
						},
						"name": "BigNumberJS",
						"package": "bignumber.js",
						"qualifiedName": "BigNumber"
					},
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				]
			}
		}
	],
	"groups": [
		{
			"title": "Interfaces",
			"children": [
				8177,
				8420,
				8264,
				8267,
				8546,
				8481,
				8126,
				8411,
				8529,
				8540,
				8424,
				8304,
				8461,
				8473,
				8535,
				8460,
				8327,
				8337,
				8318,
				8352,
				8346,
				8469,
				8359,
				8362,
				8365,
				8368,
				8270,
				8290,
				8296,
				8283,
				8142,
				8140,
				8190,
				8156,
				8429,
				8217,
				8201,
				8206,
				8212,
				8195,
				8250,
				8243,
				8220,
				8233,
				8238,
				8227,
				7904,
				8513,
				8396,
				8144
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				8536,
				8538,
				8564,
				8592,
				8582,
				8438,
				8580,
				8574,
				8579,
				8568,
				8576,
				8558,
				8509,
				8519,
				8549,
				8498,
				8371,
				8495,
				8436,
				8437,
				8504,
				8395,
				8410
			]
		}
	],
	"packageName": "@medusajs/types",
	"symbolIdMap": {
		"7903": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": ""
		},
		"7904": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService"
		},
		"7905": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.calculatePrices"
		},
		"7906": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.calculatePrices"
		},
		"7907": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "filters"
		},
		"7908": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "context"
		},
		"7909": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"7910": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.retrievePriceSet"
		},
		"7911": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.retrievePriceSet"
		},
		"7912": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "id"
		},
		"7913": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "config"
		},
		"7914": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"7915": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.listPriceSets"
		},
		"7916": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.listPriceSets"
		},
		"7917": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "filters"
		},
		"7918": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "config"
		},
		"7919": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"7920": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.listAndCountPriceSets"
		},
		"7921": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.listAndCountPriceSets"
		},
		"7922": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "filters"
		},
		"7923": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "config"
		},
		"7924": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"7925": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.createPriceSets"
		},
		"7926": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.createPriceSets"
		},
		"7927": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "data"
		},
		"7928": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"7929": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.createPriceSets"
		},
		"7930": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "data"
		},
		"7931": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"7932": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.upsertPriceSets"
		},
		"7933": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.upsertPriceSets"
		},
		"7934": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "data"
		},
		"7935": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"7936": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.upsertPriceSets"
		},
		"7937": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "data"
		},
		"7938": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"7939": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.updatePriceSets"
		},
		"7940": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.updatePriceSets"
		},
		"7941": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "id"
		},
		"7942": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "data"
		},
		"7943": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"7944": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.updatePriceSets"
		},
		"7945": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "selector"
		},
		"7946": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "data"
		},
		"7947": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"7948": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.deletePriceSets"
		},
		"7949": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.deletePriceSets"
		},
		"7950": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "ids"
		},
		"7951": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"7952": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.addPrices"
		},
		"7953": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.addPrices"
		},
		"7954": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "data"
		},
		"7955": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"7956": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.addPrices"
		},
		"7957": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "data"
		},
		"7958": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"7959": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.retrieveRuleType"
		},
		"7960": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.retrieveRuleType"
		},
		"7961": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "id"
		},
		"7962": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "config"
		},
		"7963": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"7964": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.listRuleTypes"
		},
		"7965": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.listRuleTypes"
		},
		"7966": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "filters"
		},
		"7967": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "config"
		},
		"7968": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"7969": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.listAndCountRuleTypes"
		},
		"7970": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.listAndCountRuleTypes"
		},
		"7971": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "filters"
		},
		"7972": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "config"
		},
		"7973": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"7974": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.createRuleTypes"
		},
		"7975": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.createRuleTypes"
		},
		"7976": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "data"
		},
		"7977": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"7978": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.updateRuleTypes"
		},
		"7979": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.updateRuleTypes"
		},
		"7980": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "data"
		},
		"7981": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"7982": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.deleteRuleTypes"
		},
		"7983": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.deleteRuleTypes"
		},
		"7984": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "ruleTypeIds"
		},
		"7985": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"7986": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.listPrices"
		},
		"7987": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.listPrices"
		},
		"7988": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "filters"
		},
		"7989": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "config"
		},
		"7990": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"7991": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.softDeletePrices"
		},
		"7992": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.softDeletePrices"
		},
		"7993": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"7994": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "priceIds"
		},
		"7995": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "config"
		},
		"7996": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"7997": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.restorePrices"
		},
		"7998": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.restorePrices"
		},
		"7999": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"8000": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "priceIds"
		},
		"8001": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "config"
		},
		"8002": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8003": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.listAndCountPrices"
		},
		"8004": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.listAndCountPrices"
		},
		"8005": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "filters"
		},
		"8006": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "config"
		},
		"8007": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8008": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.retrievePriceRule"
		},
		"8009": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.retrievePriceRule"
		},
		"8010": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "id"
		},
		"8011": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "config"
		},
		"8012": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8013": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.listPriceRules"
		},
		"8014": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.listPriceRules"
		},
		"8015": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "filters"
		},
		"8016": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "config"
		},
		"8017": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8018": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.listAndCountPriceRules"
		},
		"8019": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.listAndCountPriceRules"
		},
		"8020": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "filters"
		},
		"8021": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "config"
		},
		"8022": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8023": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.createPriceRules"
		},
		"8024": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.createPriceRules"
		},
		"8025": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "data"
		},
		"8026": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8027": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.updatePriceRules"
		},
		"8028": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.updatePriceRules"
		},
		"8029": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "data"
		},
		"8030": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8031": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.deletePriceRules"
		},
		"8032": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.deletePriceRules"
		},
		"8033": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "priceRuleIds"
		},
		"8034": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8035": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.retrievePriceList"
		},
		"8036": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.retrievePriceList"
		},
		"8037": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "id"
		},
		"8038": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "config"
		},
		"8039": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8040": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.listPriceLists"
		},
		"8041": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.listPriceLists"
		},
		"8042": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "filters"
		},
		"8043": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "config"
		},
		"8044": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8045": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.listAndCountPriceLists"
		},
		"8046": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.listAndCountPriceLists"
		},
		"8047": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "filters"
		},
		"8048": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "config"
		},
		"8049": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8050": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.createPriceLists"
		},
		"8051": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.createPriceLists"
		},
		"8052": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "data"
		},
		"8053": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8054": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.updatePriceLists"
		},
		"8055": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.updatePriceLists"
		},
		"8056": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "data"
		},
		"8057": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8058": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.deletePriceLists"
		},
		"8059": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.deletePriceLists"
		},
		"8060": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "priceListIds"
		},
		"8061": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8062": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.softDeletePriceLists"
		},
		"8063": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.softDeletePriceLists"
		},
		"8064": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"8065": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "priceListIds"
		},
		"8066": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "config"
		},
		"8067": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8068": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.restorePriceLists"
		},
		"8069": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.restorePriceLists"
		},
		"8070": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"8071": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "priceListIds"
		},
		"8072": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "config"
		},
		"8073": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8074": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.retrievePriceListRule"
		},
		"8075": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.retrievePriceListRule"
		},
		"8076": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "id"
		},
		"8077": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "config"
		},
		"8078": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8079": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.listPriceListRules"
		},
		"8080": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.listPriceListRules"
		},
		"8081": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "filters"
		},
		"8082": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "config"
		},
		"8083": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8084": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.listAndCountPriceListRules"
		},
		"8085": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.listAndCountPriceListRules"
		},
		"8086": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "filters"
		},
		"8087": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "config"
		},
		"8088": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8089": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.deletePriceListRules"
		},
		"8090": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.deletePriceListRules"
		},
		"8091": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "priceListRuleIds"
		},
		"8092": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8093": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.addPriceListPrices"
		},
		"8094": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.addPriceListPrices"
		},
		"8095": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "data"
		},
		"8096": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8097": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.updatePriceListPrices"
		},
		"8098": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.updatePriceListPrices"
		},
		"8099": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "data"
		},
		"8100": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8101": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.setPriceListRules"
		},
		"8102": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.setPriceListRules"
		},
		"8103": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "data"
		},
		"8104": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8105": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.removePriceListRules"
		},
		"8106": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.removePriceListRules"
		},
		"8107": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "data"
		},
		"8108": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8109": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.removePrices"
		},
		"8110": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.removePrices"
		},
		"8111": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "ids"
		},
		"8112": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8126": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "IModuleService"
		},
		"8140": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "PricingFilters"
		},
		"8141": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "PricingFilters.id"
		},
		"8142": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "PricingContext"
		},
		"8143": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "PricingContext.context"
		},
		"8144": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "Context"
		},
		"8145": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.__type"
		},
		"8146": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionManager"
		},
		"8147": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.manager"
		},
		"8148": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.isolationLevel"
		},
		"8149": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.enableNestedTransactions"
		},
		"8150": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"8151": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionId"
		},
		"8152": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.messageAggregator"
		},
		"8153": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.requestId"
		},
		"8154": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.idempotencyKey"
		},
		"8155": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "TManager"
		},
		"8156": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CalculatedPriceSet"
		},
		"8157": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CalculatedPriceSet.id"
		},
		"8158": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CalculatedPriceSet.is_calculated_price_price_list"
		},
		"8159": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CalculatedPriceSet.calculated_amount"
		},
		"8160": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CalculatedPriceSet.is_original_price_price_list"
		},
		"8161": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CalculatedPriceSet.original_amount"
		},
		"8162": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CalculatedPriceSet.currency_code"
		},
		"8163": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CalculatedPriceSet.calculated_price"
		},
		"8164": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "__type"
		},
		"8165": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "__type.id"
		},
		"8166": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "__type.price_list_id"
		},
		"8167": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "__type.price_list_type"
		},
		"8168": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "__type.min_quantity"
		},
		"8169": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "__type.max_quantity"
		},
		"8170": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CalculatedPriceSet.original_price"
		},
		"8171": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "__type"
		},
		"8172": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "__type.id"
		},
		"8173": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "__type.price_list_id"
		},
		"8174": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "__type.price_list_type"
		},
		"8175": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "__type.min_quantity"
		},
		"8176": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "__type.max_quantity"
		},
		"8177": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig"
		},
		"8178": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.select"
		},
		"8179": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.skip"
		},
		"8180": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.take"
		},
		"8181": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.relations"
		},
		"8182": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.order"
		},
		"8183": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type"
		},
		"8184": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.__index"
		},
		"8186": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.withDeleted"
		},
		"8187": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.filters"
		},
		"8188": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.options"
		},
		"8189": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.Entity"
		},
		"8190": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "PriceSetDTO"
		},
		"8191": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "PriceSetDTO.id"
		},
		"8192": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "PriceSetDTO.prices"
		},
		"8193": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "PriceSetDTO.calculated_price"
		},
		"8194": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "PriceSetDTO.rule_types"
		},
		"8195": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "FilterablePriceSetProps"
		},
		"8196": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "FilterablePriceSetProps.id"
		},
		"8197": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "FilterablePriceSetProps.money_amounts"
		},
		"8198": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"8199": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"8200": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "PricingContext.context"
		},
		"8201": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CreatePriceSetDTO"
		},
		"8202": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CreatePriceSetDTO.rules"
		},
		"8203": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "__type"
		},
		"8204": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "__type.rule_attribute"
		},
		"8205": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CreatePriceSetDTO.prices"
		},
		"8206": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "UpsertPriceSetDTO"
		},
		"8207": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "UpsertPriceSetDTO.id"
		},
		"8208": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "UpdatePriceSetDTO.rules"
		},
		"8209": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "__type"
		},
		"8210": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "__type.rule_attribute"
		},
		"8211": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "UpdatePriceSetDTO.prices"
		},
		"8212": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "UpdatePriceSetDTO"
		},
		"8213": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "UpdatePriceSetDTO.rules"
		},
		"8214": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "__type"
		},
		"8215": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "__type.rule_attribute"
		},
		"8216": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "UpdatePriceSetDTO.prices"
		},
		"8217": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "AddPricesDTO"
		},
		"8218": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "AddPricesDTO.priceSetId"
		},
		"8219": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "AddPricesDTO.prices"
		},
		"8220": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/rule-type.ts",
			"qualifiedName": "RuleTypeDTO"
		},
		"8221": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/rule-type.ts",
			"qualifiedName": "RuleTypeDTO.id"
		},
		"8222": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/rule-type.ts",
			"qualifiedName": "RuleTypeDTO.name"
		},
		"8223": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/rule-type.ts",
			"qualifiedName": "RuleTypeDTO.rule_attribute"
		},
		"8224": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/rule-type.ts",
			"qualifiedName": "RuleTypeDTO.default_priority"
		},
		"8225": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/rule-type.ts",
			"qualifiedName": "RuleTypeDTO.created_at"
		},
		"8226": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/rule-type.ts",
			"qualifiedName": "RuleTypeDTO.updated_at"
		},
		"8227": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/rule-type.ts",
			"qualifiedName": "FilterableRuleTypeProps"
		},
		"8228": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/rule-type.ts",
			"qualifiedName": "FilterableRuleTypeProps.id"
		},
		"8229": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/rule-type.ts",
			"qualifiedName": "FilterableRuleTypeProps.name"
		},
		"8230": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/rule-type.ts",
			"qualifiedName": "FilterableRuleTypeProps.rule_attribute"
		},
		"8231": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"8232": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"8233": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/rule-type.ts",
			"qualifiedName": "CreateRuleTypeDTO"
		},
		"8234": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/rule-type.ts",
			"qualifiedName": "CreateRuleTypeDTO.id"
		},
		"8235": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/rule-type.ts",
			"qualifiedName": "CreateRuleTypeDTO.name"
		},
		"8236": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/rule-type.ts",
			"qualifiedName": "CreateRuleTypeDTO.rule_attribute"
		},
		"8237": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/rule-type.ts",
			"qualifiedName": "CreateRuleTypeDTO.default_priority"
		},
		"8238": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/rule-type.ts",
			"qualifiedName": "UpdateRuleTypeDTO"
		},
		"8239": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/rule-type.ts",
			"qualifiedName": "UpdateRuleTypeDTO.id"
		},
		"8240": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/rule-type.ts",
			"qualifiedName": "UpdateRuleTypeDTO.name"
		},
		"8241": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/rule-type.ts",
			"qualifiedName": "UpdateRuleTypeDTO.rule_attribute"
		},
		"8242": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/rule-type.ts",
			"qualifiedName": "UpdateRuleTypeDTO.default_priority"
		},
		"8243": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price.ts",
			"qualifiedName": "FilterablePriceProps"
		},
		"8244": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price.ts",
			"qualifiedName": "FilterablePriceProps.id"
		},
		"8245": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price.ts",
			"qualifiedName": "FilterablePriceProps.currency_code"
		},
		"8246": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price.ts",
			"qualifiedName": "FilterablePriceProps.price_set_id"
		},
		"8247": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price.ts",
			"qualifiedName": "FilterablePriceProps.price_list_id"
		},
		"8248": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"8249": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"8250": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price.ts",
			"qualifiedName": "PriceDTO"
		},
		"8251": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price.ts",
			"qualifiedName": "PriceDTO.id"
		},
		"8252": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price.ts",
			"qualifiedName": "PriceDTO.title"
		},
		"8253": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price.ts",
			"qualifiedName": "PriceDTO.currency_code"
		},
		"8254": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price.ts",
			"qualifiedName": "PriceDTO.amount"
		},
		"8255": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price.ts",
			"qualifiedName": "PriceDTO.min_quantity"
		},
		"8256": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price.ts",
			"qualifiedName": "PriceDTO.max_quantity"
		},
		"8257": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price.ts",
			"qualifiedName": "PriceDTO.price_set"
		},
		"8258": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price.ts",
			"qualifiedName": "PriceDTO.price_list"
		},
		"8259": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price.ts",
			"qualifiedName": "PriceDTO.price_set_id"
		},
		"8260": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price.ts",
			"qualifiedName": "PriceDTO.price_rules"
		},
		"8261": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price.ts",
			"qualifiedName": "PriceDTO.created_at"
		},
		"8262": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price.ts",
			"qualifiedName": "PriceDTO.updated_at"
		},
		"8263": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price.ts",
			"qualifiedName": "PriceDTO.deleted_at"
		},
		"8264": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "SoftDeleteReturn"
		},
		"8265": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.returnLinkableKeys"
		},
		"8266": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"8267": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RestoreReturn"
		},
		"8268": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.returnLinkableKeys"
		},
		"8269": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"8270": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "PriceRuleDTO"
		},
		"8271": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "PriceRuleDTO.id"
		},
		"8272": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "PriceRuleDTO.price_set_id"
		},
		"8273": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "PriceRuleDTO.price_set"
		},
		"8274": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "PriceRuleDTO.rule_type_id"
		},
		"8275": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "PriceRuleDTO.rule_type"
		},
		"8276": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "PriceRuleDTO.value"
		},
		"8277": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "PriceRuleDTO.priority"
		},
		"8278": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "PriceRuleDTO.price_id"
		},
		"8279": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "PriceRuleDTO.price_list_id"
		},
		"8280": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "PriceRuleDTO.created_at"
		},
		"8281": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "PriceRuleDTO.updated_at"
		},
		"8282": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "PriceRuleDTO.deleted_at"
		},
		"8283": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "FilterablePriceRuleProps"
		},
		"8284": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "FilterablePriceRuleProps.id"
		},
		"8285": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "FilterablePriceRuleProps.name"
		},
		"8286": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "FilterablePriceRuleProps.price_set_id"
		},
		"8287": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "FilterablePriceRuleProps.rule_type_id"
		},
		"8288": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"8289": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"8290": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "CreatePriceRuleDTO"
		},
		"8291": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "CreatePriceRuleDTO.price_set_id"
		},
		"8292": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "CreatePriceRuleDTO.rule_type_id"
		},
		"8293": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "CreatePriceRuleDTO.value"
		},
		"8294": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "CreatePriceRuleDTO.priority"
		},
		"8295": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "CreatePriceRuleDTO.price_id"
		},
		"8296": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "UpdatePriceRuleDTO"
		},
		"8297": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "UpdatePriceRuleDTO.id"
		},
		"8298": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "UpdatePriceRuleDTO.price_set_id"
		},
		"8299": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "UpdatePriceRuleDTO.rule_type_id"
		},
		"8300": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "UpdatePriceRuleDTO.value"
		},
		"8301": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "UpdatePriceRuleDTO.priority"
		},
		"8302": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "UpdatePriceRuleDTO.price_id"
		},
		"8303": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "UpdatePriceRuleDTO.price_list_id"
		},
		"8304": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListDTO"
		},
		"8305": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListDTO.id"
		},
		"8306": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListDTO.title"
		},
		"8307": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListDTO.description"
		},
		"8308": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListDTO.starts_at"
		},
		"8309": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListDTO.status"
		},
		"8310": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListDTO.type"
		},
		"8311": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListDTO.ends_at"
		},
		"8312": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListDTO.rules_count"
		},
		"8313": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListDTO.prices"
		},
		"8314": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListDTO.money_amounts"
		},
		"8315": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListDTO.rule_types"
		},
		"8316": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListDTO.rules"
		},
		"8317": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListDTO.price_list_rules"
		},
		"8318": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "FilterablePriceListProps"
		},
		"8319": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.q"
		},
		"8320": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.id"
		},
		"8321": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.starts_at"
		},
		"8322": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.ends_at"
		},
		"8323": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.status"
		},
		"8324": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.rules_count"
		},
		"8325": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"8326": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"8327": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListDTO"
		},
		"8328": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListDTO.title"
		},
		"8329": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListDTO.description"
		},
		"8330": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListDTO.starts_at"
		},
		"8331": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListDTO.ends_at"
		},
		"8332": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListDTO.status"
		},
		"8333": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListDTO.type"
		},
		"8334": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListDTO.rules_count"
		},
		"8335": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListDTO.rules"
		},
		"8336": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListDTO.prices"
		},
		"8337": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListDTO"
		},
		"8338": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListDTO.id"
		},
		"8339": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListDTO.title"
		},
		"8340": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListDTO.description"
		},
		"8341": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListDTO.starts_at"
		},
		"8342": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListDTO.ends_at"
		},
		"8343": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListDTO.status"
		},
		"8344": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListDTO.rules_count"
		},
		"8345": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListDTO.rules"
		},
		"8346": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListRuleDTO"
		},
		"8347": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListRuleDTO.id"
		},
		"8348": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListRuleDTO.value"
		},
		"8349": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListRuleDTO.rule_type"
		},
		"8350": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListRuleDTO.price_list"
		},
		"8351": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListRuleDTO.price_list_rule_values"
		},
		"8352": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "FilterablePriceListRuleProps"
		},
		"8353": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "FilterablePriceListRuleProps.id"
		},
		"8354": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "FilterablePriceListRuleProps.value"
		},
		"8355": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "FilterablePriceListRuleProps.rule_type"
		},
		"8356": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "FilterablePriceListRuleProps.price_list_id"
		},
		"8357": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"8358": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"8359": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "AddPriceListPricesDTO"
		},
		"8360": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "AddPriceListPricesDTO.price_list_id"
		},
		"8361": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "AddPriceListPricesDTO.prices"
		},
		"8362": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListPricesDTO"
		},
		"8363": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListPricesDTO.price_list_id"
		},
		"8364": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListPricesDTO.prices"
		},
		"8365": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "SetPriceListRulesDTO"
		},
		"8366": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "SetPriceListRulesDTO.price_list_id"
		},
		"8367": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "SetPriceListRulesDTO.rules"
		},
		"8368": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "RemovePriceListRulesDTO"
		},
		"8369": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "RemovePriceListRulesDTO.price_list_id"
		},
		"8370": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "RemovePriceListRulesDTO.rules"
		},
		"8371": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleJoinerConfig"
		},
		"8372": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"8373": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.schema"
		},
		"8374": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.relationships"
		},
		"8375": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extends"
		},
		"8376": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"8377": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"8378": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.fieldAlias"
		},
		"8379": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"8380": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.path"
		},
		"8381": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"8382": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isList"
		},
		"8383": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.relationship"
		},
		"8384": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"8385": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.primaryKeys"
		},
		"8386": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isLink"
		},
		"8387": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.linkableKeys"
		},
		"8388": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isReadOnlyLink"
		},
		"8389": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extraDataFields"
		},
		"8390": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.databaseConfig"
		},
		"8391": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"8392": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.tableName"
		},
		"8393": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.idPrefix"
		},
		"8394": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extraFields"
		},
		"8395": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "BigNumberInput"
		},
		"8396": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator"
		},
		"8397": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.save"
		},
		"8398": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.save"
		},
		"8399": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "msg"
		},
		"8400": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.getMessages"
		},
		"8401": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.getMessages"
		},
		"8402": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "format"
		},
		"8403": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.clearMessages"
		},
		"8404": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.clearMessages"
		},
		"8405": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.saveRawMessageData"
		},
		"8406": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.saveRawMessageData"
		},
		"8407": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "T"
		},
		"8408": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "messageData"
		},
		"8409": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "options"
		},
		"8410": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "BigNumberValue"
		},
		"8411": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "MoneyAmountDTO"
		},
		"8412": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "MoneyAmountDTO.id"
		},
		"8413": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "MoneyAmountDTO.currency_code"
		},
		"8414": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "MoneyAmountDTO.amount"
		},
		"8415": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "MoneyAmountDTO.min_quantity"
		},
		"8416": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "MoneyAmountDTO.max_quantity"
		},
		"8417": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "MoneyAmountDTO.created_at"
		},
		"8418": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "MoneyAmountDTO.updated_at"
		},
		"8419": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "MoneyAmountDTO.deleted_at"
		},
		"8420": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable"
		},
		"8421": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"8422": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"8423": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.T"
		},
		"8424": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "FilterableMoneyAmountProps"
		},
		"8425": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "FilterableMoneyAmountProps.id"
		},
		"8426": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "FilterableMoneyAmountProps.currency_code"
		},
		"8427": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"8428": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"8429": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CreatePricesDTO"
		},
		"8430": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CreatePricesDTO.rules"
		},
		"8431": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.id"
		},
		"8432": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.currency_code"
		},
		"8433": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.amount"
		},
		"8434": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.min_quantity"
		},
		"8435": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.max_quantity"
		},
		"8436": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListStatus"
		},
		"8437": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListType"
		},
		"8438": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "OperatorMap"
		},
		"8439": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"8440": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$and"
		},
		"8441": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$or"
		},
		"8442": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$eq"
		},
		"8443": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$ne"
		},
		"8444": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$in"
		},
		"8445": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$nin"
		},
		"8446": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$not"
		},
		"8447": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$gt"
		},
		"8448": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$gte"
		},
		"8449": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$lt"
		},
		"8450": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$lte"
		},
		"8451": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$like"
		},
		"8452": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$re"
		},
		"8453": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$ilike"
		},
		"8454": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$fulltext"
		},
		"8455": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$overlap"
		},
		"8456": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$contains"
		},
		"8457": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$contained"
		},
		"8458": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$exists"
		},
		"8459": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"8460": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListRules"
		},
		"8461": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListPriceDTO"
		},
		"8462": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListPriceDTO.price_set_id"
		},
		"8463": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListPriceDTO.rules"
		},
		"8464": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.id"
		},
		"8465": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.currency_code"
		},
		"8466": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.amount"
		},
		"8467": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.min_quantity"
		},
		"8468": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.max_quantity"
		},
		"8469": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListRuleValueDTO"
		},
		"8470": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListRuleValueDTO.id"
		},
		"8471": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListRuleValueDTO.value"
		},
		"8472": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListRuleValueDTO.price_list_rule"
		},
		"8473": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListPriceDTO"
		},
		"8474": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListPriceDTO.price_set_id"
		},
		"8475": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListPriceDTO.rules"
		},
		"8476": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "UpdateMoneyAmountDTO.id"
		},
		"8477": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "UpdateMoneyAmountDTO.currency_code"
		},
		"8478": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "UpdateMoneyAmountDTO.amount"
		},
		"8479": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "UpdateMoneyAmountDTO.min_quantity"
		},
		"8480": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "UpdateMoneyAmountDTO.max_quantity"
		},
		"8481": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig"
		},
		"8482": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.serviceName"
		},
		"8483": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.alias"
		},
		"8484": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.fieldAlias"
		},
		"8485": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"8486": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.path"
		},
		"8487": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"8488": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.primaryKeys"
		},
		"8489": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.relationships"
		},
		"8490": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.extends"
		},
		"8491": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"8492": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"8493": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.relationship"
		},
		"8494": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.args"
		},
		"8495": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleJoinerRelationship"
		},
		"8496": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"8497": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.deleteCascade"
		},
		"8498": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "LinkModulesExtraFields"
		},
		"8499": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"8500": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.type"
		},
		"8501": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultValue"
		},
		"8502": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.nullable"
		},
		"8503": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"8504": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "BigNumberRawValue"
		},
		"8505": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "__type"
		},
		"8506": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "__type.value"
		},
		"8507": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "__type.__index"
		},
		"8509": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "Message"
		},
		"8510": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"8511": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.options"
		},
		"8512": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"8513": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat"
		},
		"8514": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.groupBy"
		},
		"8515": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.sortBy"
		},
		"8516": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type"
		},
		"8517": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.__index"
		},
		"8519": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "RawMessageFormat"
		},
		"8520": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"8521": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventName"
		},
		"8522": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"8523": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.source"
		},
		"8524": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.object"
		},
		"8525": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.action"
		},
		"8526": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.context"
		},
		"8527": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.options"
		},
		"8528": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"8529": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO"
		},
		"8530": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.id"
		},
		"8531": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.currency_code"
		},
		"8532": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.amount"
		},
		"8533": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.min_quantity"
		},
		"8534": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.max_quantity"
		},
		"8535": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceSetPriceRules"
		},
		"8536": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Query"
		},
		"8537": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"8538": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "ExpandScalar"
		},
		"8539": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"8540": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "UpdateMoneyAmountDTO"
		},
		"8541": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "UpdateMoneyAmountDTO.id"
		},
		"8542": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "UpdateMoneyAmountDTO.currency_code"
		},
		"8543": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "UpdateMoneyAmountDTO.amount"
		},
		"8544": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "UpdateMoneyAmountDTO.min_quantity"
		},
		"8545": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "UpdateMoneyAmountDTO.max_quantity"
		},
		"8546": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias"
		},
		"8547": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.name"
		},
		"8548": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.args"
		},
		"8549": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerRelationship"
		},
		"8550": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"8551": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.alias"
		},
		"8552": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.foreignKey"
		},
		"8553": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.primaryKey"
		},
		"8554": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"8555": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.inverse"
		},
		"8556": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.isList"
		},
		"8557": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.args"
		},
		"8558": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "MessageBody"
		},
		"8559": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"8560": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventName"
		},
		"8561": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"8562": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"8563": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"8564": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Scalar"
		},
		"8565": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"8566": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.toHexString"
		},
		"8567": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.toHexString"
		},
		"8568": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "FilterQuery"
		},
		"8569": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"8570": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.__index"
		},
		"8572": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"8573": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Prev"
		},
		"8574": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "FilterValue"
		},
		"8575": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"8576": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "EventMetadata"
		},
		"8577": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"8578": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"8579": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "PrevLimit"
		},
		"8580": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "FilterValue2"
		},
		"8581": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"8582": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Primary"
		},
		"8583": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"8584": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.[PrimaryKeyType]"
		},
		"8585": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"8586": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type._id"
		},
		"8587": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"8588": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.uuid"
		},
		"8589": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"8590": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.id"
		},
		"8591": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"8592": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "ReadonlyPrimary"
		},
		"8593": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		}
	},
	"files": {
		"entries": {
			"1": "../../../../packages/core/types/src/pricing/service.ts"
		},
		"reflections": {
			"1": 7903
		}
	}
}